<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="clr-namespace:System.Windows;assembly=System.Windows.Controls"
    xmlns:Converters="clr-namespace:ArcFMSilverlight.ValueConverters"
    xmlns:esri="http://schemas.esri.com/arcgis/client/2009"
    xmlns:input="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input"
    xmlns:local="clr-namespace:ArcFMSilverlight"
    xmlns:miner="http://schemas.miner.com/arcfm/client/2010"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
                    xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
    xmlns:converters="clr-namespace:ESRI.ArcGIS.Client.Toolkit.ValueConverters;assembly=ESRI.ArcGIS.Client.Toolkit">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Theming.TelventGray;component/themes/AlternateStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <System:String x:Key="ApplicationTitle">ArcFM Server for Silverlight
    </System:String>

    <Converters:ScaleValueConverter x:Key="ScaleValueConverter" />
    <Converters:TemplateGroupsToVisibilityValueConverter x:Key="TemplateGroupsToVis" />
    <miner:PhasesToTraceConverter x:Key="PhasesToTraceConverter" />
    <miner:CountToVisibilityConverter x:Key="CountToVis" />
    <miner:ValveIsolationTraceBarriersConverter x:Key="ValveIsolationTraceBarriersConverter" />
    <miner:GasPressureSystemTraceBarriersConverter x:Key="GasPressureSystemTraceBarriersConverter" />
    
    <!--  Original ESRI background brush  -->
    <LinearGradientBrush x:Key="CommonBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#ee76a8d3" />
        <GradientStop Offset="0.25" Color="#ee5b8cb5" />
        <GradientStop Offset="0.75" Color="#ee4b7ba7" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BackgroundFillBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="DarkGray" />
        <GradientStop Offset="0.946" Color="LightGray" />
    </LinearGradientBrush>

    <Style x:Key="WIPAttributeEditorDeleteButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>  

    <Style x:Key="RibbonToggleButton"
        BasedOn="{StaticResource HiddenToggleButtonStyle}"
        TargetType="ToggleButton">
        <Setter Value="0" Property="Margin" />
        <Setter Value="24" Property="MinWidth" />
        <Setter Value="24" Property="MinHeight" />
        <Setter Value="Center" Property="VerticalContentAlignment" />
        <Setter Value="Center" Property="HorizontalContentAlignment" />
        <Setter Value="1 0" Property="Padding" />
    </Style>

    <Style x:Key="ToggleButton"
        BasedOn="{StaticResource HiddenToggleButtonStyle}"
        TargetType="ToggleButton">
        <Setter Value="0" Property="Margin" />
        <Setter Value="24" Property="MinWidth" />
        <Setter Value="24" Property="MinHeight" />
        <Setter Value="Center" Property="VerticalContentAlignment" />
        <Setter Value="Center" Property="HorizontalContentAlignment" />
        <Setter Value="1 0" Property="Padding" />
    </Style>
    
    <Style x:Key="RibbonRadioButton"
        BasedOn="{StaticResource HiddenToggleButtonStyle}"
        TargetType="RadioButton">
        <Setter Value="0" Property="Margin" />
        <Setter Value="24" Property="MinWidth" />
        <Setter Value="24" Property="MinHeight" />
        <Setter Value="Center" Property="VerticalContentAlignment" />
        <Setter Value="Center" Property="HorizontalContentAlignment" />
        <Setter Value="1 0" Property="Padding" />
    </Style>

    <Style x:Key="RibbonButton"
        BasedOn="{StaticResource IconButtonStyle}"
        TargetType="Button">
        <Setter Value="0" Property="Margin" />
        <Setter Value="24" Property="MinWidth" />
        <Setter Value="24" Property="MinHeight" />
        <Setter Value="Center" Property="VerticalContentAlignment" />
        <Setter Value="Center" Property="HorizontalContentAlignment" />
        <Setter Value="1 0" Property="Padding" />
    </Style>

    <Style x:Key="LocatorStyle" TargetType="miner:LocateControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="miner:LocateControl">

                    <Grid>
                        <Grid.Resources>
                            <!--  TextBox  -->
                            <Style TargetType="TextBox">
                                <Setter Value="{StaticResource TextBrush}" Property="Foreground" />
                                <Setter Value="{StaticResource DarkBrush}" Property="BorderBrush" />
                                <Setter Value="1" Property="BorderThickness" />
                                <Setter Value="True" Property="IsEnabled" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="TextBox">
                                            <Grid x:Name="RootElement">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition GeneratedDuration="00:00:00.3" />
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="InnerShadow"
                                                                    Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.2" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="ContentElement"
                                                                    Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.55" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="Background"
                                                                    Storyboard.TargetProperty="(UIElement.BorderThickness)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value=".5,.5,.5,.5" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="InnerShadow"
                                                                    Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.3" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="ReadOnly" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="Background"
                                                                    Storyboard.TargetProperty="(UIElement.BorderThickness)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1.75,2,.5,.5" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="ValidationStates">
                                                        <VisualState x:Name="Valid" />
                                                        <VisualState x:Name="InvalidUnfocused">
                                                        </VisualState>
                                                        <VisualState x:Name="InvalidFocused">
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Border x:Name="Background"
                                                    Background="Transparent"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="0 4 4 0" />
                                                <Grid x:Name="InnerShadow" Opacity="0.5">
                                                    <Border x:Name="BottomShadow"
                                                        Background="{TemplateBinding BorderBrush}"
                                                        CornerRadius="0 4 4 0"
                                                        OpacityMask="{StaticResource BoxBottomShadowMask}" />
                                                </Grid>
                                                <ScrollViewer x:Name="ContentElement"
                                                    Margin="5 0"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Center"
                                                    Background="Transparent"
                                                    BorderThickness="0"
                                                    Foreground="{TemplateBinding Foreground}"
                                                    IsTabStop="False"
                                                    VerticalContentAlignment="Center" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <!--  Lookless Button  -->
                            <Style x:Key="LooklessButtonStyle" TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <ContentPresenter />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <!--  ToggleButton  -->
                            <Style x:Key="CategoryToggleStyle" TargetType="ToggleButton">
                                <Setter Value="{StaticResource TextBrush}" Property="Foreground" />
                                <Setter Value="{StaticResource LightBrush}" Property="Background" />
                                <Setter Value="{StaticResource DarkBrush}" Property="BorderBrush" />
                                <Setter Value="1 1 0 1" Property="BorderThickness" />
                                <Setter Value="8,3" Property="Padding" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition GeneratedDuration="00:00:00.2" />
                                                            <VisualTransition From="Pressed" GeneratedDuration="00:00:00" />
                                                            <VisualTransition From="MouseOver"
                                                                GeneratedDuration="00:00:00"
                                                                To="Pressed" />
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="InnerShadow"
                                                                    Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="Background"
                                                                    Storyboard.TargetProperty="(UIElement.BorderThickness)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="2.5,2.5,.5,.5" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="contentPresenter"
                                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="contentPresenter"
                                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="Toggled"
                                                                    Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="contentPresenter"
                                                                    Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.55" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="Background"
                                                                    Storyboard.TargetProperty="(UIElement.BorderThickness)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value=".5,.5,.5,.5" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="InnerShadow"
                                                                    Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.3" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CheckStates">
                                                        <VisualState x:Name="Checked">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="Background"
                                                                    Storyboard.TargetProperty="(UIElement.BorderThickness)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1.75,1.75,.5,.5" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="contentPresenter"
                                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="contentPresenter"
                                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="Toggled"
                                                                    Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unchecked" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused">
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Border x:Name="Background"
                                                    Background="#FFF"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="4 0 0 4">
                                                </Border>
                                                <Grid x:Name="InnerShadow"
                                                    Grid.RowSpan="2"
                                                    Grid.ColumnSpan="2"
                                                    Opacity="1">
                                                    <Border x:Name="BottomShadow"
                                                        Background="{TemplateBinding BorderBrush}"
                                                        CornerRadius="4 0 0 4"
                                                        OpacityMask="{StaticResource BottomShadowMask}" />
                                                </Grid>
                                                <Border x:Name="Toggled"
                                                    Margin="1"
                                                    Background="{StaticResource ToggledBrush}"
                                                    CornerRadius="3.9 0 0 3.9"
                                                    Opacity="0.8"
                                                    Visibility="Collapsed" />
                                                <ContentPresenter x:Name="contentPresenter"
                                                    Margin="{TemplateBinding Padding}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    RenderTransformOrigin="0.5,0.5">
                                                    <ContentPresenter.RenderTransform>
                                                        <TransformGroup>
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </ContentPresenter.RenderTransform>
                                                </ContentPresenter>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="SearchMethodToggleStyle" TargetType="ToggleButton">
                                <Setter Value="{StaticResource TextBrush}" Property="Foreground" />
                                <Setter Value="{StaticResource LightBrush}" Property="Background" />
                                <Setter Value="{StaticResource DarkBrush}" Property="BorderBrush" />
                                <Setter Value="1 1 0 1" Property="BorderThickness" />
                                <Setter Value="6,3" Property="Padding" />
                                <Setter Property="FontSize" Value="9"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition GeneratedDuration="00:00:00.2" />
                                                            <VisualTransition From="Pressed" GeneratedDuration="00:00:00" />
                                                            <VisualTransition From="MouseOver"
                                                                GeneratedDuration="00:00:00"
                                                                To="Pressed" />
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="InnerShadow"
                                                                    Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="Background"
                                                                    Storyboard.TargetProperty="(UIElement.BorderThickness)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="2.5,2.5,.5,.5" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="contentPresenter"
                                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="contentPresenter"
                                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="Toggled"
                                                                    Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="contentPresenter"
                                                                    Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.55" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="Background"
                                                                    Storyboard.TargetProperty="(UIElement.BorderThickness)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value=".5,.5,.5,.5" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="InnerShadow"
                                                                    Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.3" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CheckStates">
                                                        <VisualState x:Name="Checked">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="Background"
                                                                    Storyboard.TargetProperty="(UIElement.BorderThickness)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1.75,1.75,.5,.5" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="contentPresenter"
                                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="contentPresenter"
                                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                    Storyboard.TargetName="Toggled"
                                                                    Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unchecked" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused">
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Border x:Name="Background"
                                                    Background="#FFF"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                                </Border>
                                                <Grid x:Name="InnerShadow"
                                                    Grid.RowSpan="2"
                                                    Grid.ColumnSpan="2"
                                                    Opacity="1">
                                                    <Border x:Name="BottomShadow"
                                                        Background="{TemplateBinding BorderBrush}"
                                                        OpacityMask="{StaticResource BottomShadowMask}" />
                                                </Grid>
                                                <Border x:Name="Toggled"
                                                    Margin="1"
                                                    Background="{StaticResource ToggledBrush}"
                                                    Opacity="0.8"
                                                    Visibility="Collapsed" />
                                                <Border Background="#1000"/>
                                                <ContentPresenter x:Name="contentPresenter"
                                                    Margin="{TemplateBinding Padding}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    RenderTransformOrigin="0.5,0.5">
                                                    <ContentPresenter.RenderTransform>
                                                        <TransformGroup>
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </ContentPresenter.RenderTransform>
                                                </ContentPresenter>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="SearchTypeComboBoxStyle" TargetType="ComboBox">
                                <Setter Value="Left" Property="HorizontalContentAlignment" />
                                <Setter Value="Once" Property="TabNavigation" />
                                <Setter Value="{StaticResource TextBrush}" Property="Foreground" />
                                <Setter Value="{StaticResource LightBrush}" Property="Background" />
                                <Setter Value="{StaticResource DarkBrush}" Property="BorderBrush" />
                                <Setter Value="1" Property="BorderThickness" />
                                <Setter Value="8,4" Property="Padding" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ComboBox">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver" />
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused">
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused" />
                                                        <VisualState x:Name="FocusedDropDown">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                                    Storyboard.TargetName="PopupBorder"
                                                                    Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="ValidationStates">
                                                        <VisualState x:Name="Valid" />
                                                        <VisualState x:Name="InvalidUnfocused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible
                                                                            </Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="InvalidFocused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible
                                                                            </Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <System:Boolean>True
                                                                            </System:Boolean>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Border x:Name="ContentPresenterBorder">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="12" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <ToggleButton x:Name="DropDownToggle"
                                                            Grid.ColumnSpan="2"
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            Foreground="{TemplateBinding Foreground}"
                                                            HorizontalContentAlignment="Left"
                                                            Style="{StaticResource CategoryToggleStyle}">
                                                            <Path x:Name="BtnArrow"
                                                                Width="8"
                                                                Height="4"
                                                                Margin="0,0,2,0"
                                                                HorizontalAlignment="Left"
                                                                Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                                                Fill="{TemplateBinding Foreground}"
                                                                Stretch="Uniform" />
                                                        </ToggleButton>
                                                        <ContentPresenter x:Name="ContentPresenter"
                                                            Grid.Column="1"
                                                            Margin="{TemplateBinding Padding}"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            IsHitTestVisible="False">
                                                            <TextBlock FontStyle="Italic"
                                                                Opacity="0.5"
                                                                Text="{Binding Text, ElementName=TextBridge}" />
                                                        </ContentPresenter>
                                                    </Grid>
                                                </Border>

                                                <Popup x:Name="Popup">
                                                    <Border x:Name="PopupBorder"
                                                        Height="Auto"
                                                        Margin="0"
                                                        Background="{StaticResource LightBrush}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        CornerRadius="0 0 4 4">
                                                        <Border Margin="5 1 5 1" CornerRadius="0 0 3 3">
                                                            <ScrollViewer x:Name="ScrollViewer"
                                                                Margin="0 0 -4 0"
                                                                BorderThickness="0"
                                                                Padding="0 0 4 0">
                                                                <ItemsPresenter />
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Border>
                                                </Popup>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="SearchOptionComboBoxStyle" TargetType="ComboBox">
                                <Setter Value="Left" Property="HorizontalContentAlignment" />
                                <Setter Value="Once" Property="TabNavigation" />
                                <Setter Value="{StaticResource TextBrush}" Property="Foreground" />
                                <Setter Value="{StaticResource LightBrush}" Property="Background" />
                                <Setter Value="{StaticResource DarkBrush}" Property="BorderBrush" />
                                <Setter Value="1" Property="BorderThickness" />
                                <Setter Value="8,4" Property="Padding" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ComboBox">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver" />
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused">
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused" />
                                                        <VisualState x:Name="FocusedDropDown">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                                    Storyboard.TargetName="PopupBorder"
                                                                    Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="ValidationStates">
                                                        <VisualState x:Name="Valid" />
                                                        <VisualState x:Name="InvalidUnfocused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible
                                                                            </Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="InvalidFocused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible
                                                                            </Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <System:Boolean>True
                                                                            </System:Boolean>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Border x:Name="ContentPresenterBorder">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>

                                                        <ToggleButton x:Name="DropDownToggle"
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            Foreground="{TemplateBinding Foreground}"
                                                            HorizontalContentAlignment="Left"
                                                            Style="{StaticResource SearchMethodToggleStyle}">
                                                            <StackPanel Orientation="Horizontal">
                                                                <ContentPresenter x:Name="ContentPresenter"
                                                                    IsHitTestVisible="False" />
                                                                <Path x:Name="BtnArrow"
                                                                    Width="8"
                                                                    Height="4"
                                                                    Margin="5,0,2,0"
                                                                    HorizontalAlignment="Right"
                                                                    Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                                                    Fill="{TemplateBinding Foreground}"
                                                                    Stretch="Uniform" />
                                                            </StackPanel>
                                                        </ToggleButton>
                                                        
                                                    </Grid>
                                                </Border>

                                                <Popup x:Name="Popup">
                                                    <Border x:Name="PopupBorder"
                                                        Height="Auto"
                                                        Margin="0"
                                                        Background="{StaticResource LightBrush}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        CornerRadius="0 0 4 4">
                                                        <Border Margin="5 1 5 1" CornerRadius="0 0 3 3">
                                                            <ScrollViewer x:Name="ScrollViewer"
                                                                Margin="0 0 -4 0"
                                                                BorderThickness="0"
                                                                Padding="0 0 4 0">
                                                                <ItemsPresenter />
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Border>
                                                </Popup>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock x:Name="TextBridge"
                            Text="{Binding SearchHint, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="Collapsed" />
                        <Border Grid.ColumnSpan="4"
                            Margin="0 0 0 -1"
                            Background="White"
                            BorderBrush="#FFF"
                            BorderThickness="0 0 0 1"
                            CornerRadius="3" />
                        <ComboBox x:Name="PART_LocateTypeComboBox"
                            Style="{StaticResource SearchTypeComboBoxStyle}"
                            Grid.Column="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            MaxWidth="225"
                            ToolTipService.ToolTip="{Binding ElementName=PART_LocateTypeComboBox, Path=SelectedItem.Description}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Title}" ToolTipService.ToolTip="{Binding Description}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <ComboBox x:Name="PART_SearchOptionComboBox"
                            Style="{StaticResource SearchOptionComboBoxStyle}"
                            Grid.Column="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            SelectedIndex="0">
                            <ComboBox.Items>
                                <ComboBoxItem>
                                    <TextBlock Text="=" />
                                </ComboBoxItem>
                                <ComboBoxItem>
                                    <TextBlock Text="LIKE" />
                                </ComboBoxItem>
                            </ComboBox.Items>
                        </ComboBox>

                        <input:AutoCompleteBox x:Name="PART_QueryTextBox"
                            Grid.Column="2"
                            HorizontalAlignment="Stretch"
                            MinimumPrefixLength="2"  />

                        <Button x:Name="PART_Button"
                            Grid.Column="2"
                            Cursor="Hand"
                            IsTabStop="True"
                            Style="{StaticResource LooklessButtonStyle}"
                            Visibility="Visible">
                            <Image Grid.Column="1"
                                Width="16"
                                Height="16"
                                Margin="5"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Source="/Images/search.png" />
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Identify Control  -->
    <Style x:Key="IdentifyStyle" TargetType="miner:IdentifyControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="miner:IdentifyControl">
                    <Grid>
                        <miner:TreeViewComboBox x:Name="PART_ComboBox">
                            <miner:TreeViewComboBox.ItemTemplate>
                                <common:HierarchicalDataTemplate ItemsSource="{Binding Items}">
                                    <TextBlock Text="{Binding Name}" />
                                </common:HierarchicalDataTemplate>
                            </miner:TreeViewComboBox.ItemTemplate>
                        </miner:TreeViewComboBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Converters:FindAncestorValueConverter x:Key="FindAncestor" />

    <!--  Editor  -->
    <Style x:Key="TemplatePickerStyle" TargetType="esri:TemplatePicker">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="esri:TemplatePicker" >
                        <ItemsControl ItemsSource="{TemplateBinding TemplateGroups}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <miner:TemplatePickerComboBox Margin="2 0"
                                    Editor="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FindAncestor}, ConverterParameter=EditorControl}"
                                    ItemsSource="{Binding Templates}"
                                    SelectedItem="{Binding Templates[0]}"
                                    ToolTipService.ToolTip="{Binding Name}">
                                    </miner:TemplatePickerComboBox>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EditorControlRibbonStyle" TargetType="miner:EditorControl">
        <Setter Property="SaveToDatabaseConfirmationText" Value="Are you sure you want to publish your graphics changes to the database?"/>
        <Setter Property="TextTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <local:TextCallout>
                        <TextBlock Text="{Binding Symbol.Text}" Foreground="{Binding Symbol.Foreground}" FontSize="{Binding Symbol.FontSize}"/>
                    </local:TextCallout>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="miner:EditorControl">
                    <StackPanel Margin="-5 0 -5 -5" Orientation="Horizontal">
                        <StackPanel.Resources>
                            <miner:FileOptionValueConverter x:Key="FileOptionConverter" />
                            <miner:TypeToBooleanConverter x:Key="SymbolToBool" />
                        </StackPanel.Resources>

                        <!--  File tools  -->
                        <local:RibbonPanel Title="Share">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Button Grid.Column="1" Grid.Row="0" Command="{Binding OpenFile}" ToolTipService.ToolTip="Import"
                                        CommandParameter="{Binding ConverterParameter=FileSystem, Converter={StaticResource FileOptionConverter}}"
                                        Style="{StaticResource RibbonButton}">
                                    <Image Source="/Images/import.png" Stretch="None" />
                                </Button>

                                <Button Grid.Column="1" Grid.Row="1" Command="{Binding SaveToFile}" ToolTipService.ToolTip="Export"
                                        CommandParameter="{Binding ConverterParameter=FileSystem, Converter={StaticResource FileOptionConverter}}"
                                        Style="{StaticResource RibbonButton}">
                                    <Image Source="/Images/export.png" Stretch="None" />
                                </Button>

                                <Button x:Name="SaveToDB" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Command="{Binding SaveToDatabase}" Style="{StaticResource RibbonButton}" Margin="0 0 2 0" ToolTipService.ToolTip="Publish to Database" >
                                    <StackPanel Margin="0">
                                        <Image Source="/Images/database_publish.png" Stretch="None" />
                                        <TextBlock VerticalAlignment="Center" Text="Publish" Margin="0" />
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </local:RibbonPanel>

                        <!--  Selection tools  -->
                        <local:RibbonPanel Title="Selection">
                            <StackPanel Orientation="Vertical">
                                <RadioButton x:Name="PART_Select"
                                    MinWidth="80"
                                    Command="{Binding Select}"
                                    GroupName="SelectionTools"
                                    HorizontalContentAlignment="Left"
                                    Style="{StaticResource RibbonRadioButton}"
                                    ToolTipService.ToolTip="Select (Hotkey: S)">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Margin="2 0"
                                            Source="/ESRI.ArcGIS.Client.Toolkit;component/Images/NewSelection.png"
                                            Stretch="None" />
                                        <TextBlock Margin="3 0 0 0"
                                            VerticalAlignment="Center"
                                            Text="Select" />
                                    </StackPanel>
                                </RadioButton>
                                <RadioButton x:Name="PART_EditGeometry"
                                    MinWidth="80"
                                    Command="{Binding EditGeometry}"
                                    GroupName="SelectionTools"
                                    HorizontalContentAlignment="Left"
                                    Style="{StaticResource RibbonRadioButton}"
                                    ToolTipService.ToolTip="Edit Geometry (Hotkey: E)&#13;Proportionally Resize (Hotkey: Shift)&#13;Turn off Editing Vertices (Hotkey: Ctrl)">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Margin="2 0"
                                            Source="/ESRI.ArcGIS.Client.Toolkit;component/Images/showVertices.png"
                                            Stretch="None" />
                                        <TextBlock Margin="3 0 0 0"
                                            VerticalAlignment="Center"
                                            Text="Edit" />
                                    </StackPanel>
                                </RadioButton>
                                <Button x:Name="DeleteSelect"
                                    MinWidth="80"
                                    Command="{Binding DeleteSelected}"
                                    HorizontalContentAlignment="Left"
                                    Style="{StaticResource RibbonButton}"
                                    ToolTipService.ToolTip="Delete selected features (Hotkey: Delete)">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Margin="2 0"
                                            Source="/ESRI.ArcGIS.Client.Toolkit;component/Images/deleteFeature.png"
                                            Stretch="None" />
                                        <TextBlock Margin="3 0 0 0"
                                            VerticalAlignment="Center"
                                            Text="Delete" />
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </local:RibbonPanel>

                        <!--  Clipboard tools  -->
                        <local:RibbonPanel Title="Clipboard">
                            <StackPanel Orientation="Vertical">
                                <Button MinWidth="60"
                                    Command="{Binding CopySelected}"
                                    HorizontalContentAlignment="Left"
                                    Style="{StaticResource RibbonButton}"
                                    ToolTipService.ToolTip="Copy Selected Features (Hotkey: Ctrl+C)">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Margin="2 0"
                                            Source="/Miner.Server.Client.Toolkit;component/Images/CopyIcon.png"
                                            Stretch="None" />
                                        <TextBlock Margin="3 0 0 0"
                                            VerticalAlignment="Center"
                                            Text="Copy" />
                                    </StackPanel>
                                </Button>
                                <Button MinWidth="60"
                                    Command="{Binding Paste}"
                                    HorizontalContentAlignment="Left"
                                    Style="{StaticResource RibbonButton}"
                                    ToolTipService.ToolTip="Paste Copied Features (Hotkey: Ctrl+V)">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Margin="2 0"
                                            Source="/Miner.Server.Client.Toolkit;component/Images/PasteIcon.png"
                                            Stretch="None" />
                                        <TextBlock Margin="3 0 0 0"
                                            VerticalAlignment="Center"
                                            Text="Paste" />
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </local:RibbonPanel>

                        <!--  Text  -->
                        <local:RibbonPanel Title="Text">
                            <RadioButton x:Name="PART_Text"
                                Command="{Binding AddText}"
                                Content="T"
                                FontFamily="Times New Roman"
                                FontSize="22"
                                GroupName="SelectionTools"
                                Padding="3"
                                Style="{StaticResource RibbonRadioButton}">
                                <ToolTipService.ToolTip>
                                    <ToolTip Content="Add Redline Text (Hotkey: T)" />
                                </ToolTipService.ToolTip>
                            </RadioButton>
                        </local:RibbonPanel>

                        <!--  Layer Tools  -->
                        <local:RibbonPanel Title="{Binding Path=ActiveTemplateName, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding ElementName=PART_TemplatePicker, Path=TemplateGroups.Count, Converter={StaticResource CountToVis}}">
                            <Grid VerticalAlignment="Top" >
                                <Grid.ColumnDefinitions >
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="65"/>
                                </Grid.RowDefinitions>
                                <Grid.Background>
                                    <ImageBrush Stretch="None" ImageSource="/ArcFMSilverlight;component/Images/template_label.png"/>
                                </Grid.Background>
                                <!--Image Grid.Row="0" Stretch="None" Source="/ArcFMSilverlight;component/Images/template_label.png" /-->
                                <esri:TemplatePicker Grid.Row="0" x:Name="PART_TemplatePicker"
                                    Margin="5 0"
                                    HorizontalAlignment="Center"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Continuous="True"
                                    LayerIDs="{TemplateBinding LayerIDs}"
                                    Map="{TemplateBinding Map}"
                                    ShowAttributesOnAdd="{TemplateBinding ShowAttributesOnAdd}"
                                    Style="{StaticResource TemplatePickerStyle}" />
                            </Grid>
                        </local:RibbonPanel>

                        <!--  Polygon operations  -->
                        <local:RibbonPanel Title="Create" Visibility="{Binding ElementName=PART_TemplatePicker, Path=TemplateGroups, Converter={StaticResource TemplateGroupsToVis}}">
                            <toolkit:WrapPanel Orientation="Horizontal" MaxWidth="120">
                                <RadioButton x:Name="PART_AddPolygon"
                                    GroupName="PolygonEditType"
                                    Margin="2"
                                    IsChecked="True"
                                    ToolTipService.ToolTip="Add a polygon"
                                    IsEnabled="{Binding ActiveSymbol, ConverterParameter=FillSymbol, Converter={StaticResource SymbolToBool}}"
                                    Style="{StaticResource RibbonRadioButton}">
                                    <Image Source="/Miner.Server.Client.Toolkit;component/Images/edCreate-polygon.png" Stretch="None" />
                                </RadioButton>
                                <RadioButton x:Name="PART_AddFreehand"
                                    Grid.Row="1"
                                    Margin="2"
                                    GroupName="PolygonEditType"
                                    Visibility="Collapsed"
                                    ToolTipService.ToolTip="Add a freehand polygon"
                                    IsEnabled="{Binding ActiveSymbol, ConverterParameter=FillSymbol, Converter={StaticResource SymbolToBool}}"
                                    Style="{StaticResource RibbonRadioButton}">
                                    <Image Source="/Miner.Server.Client.Toolkit;component/Images/edCreate-freehand.png" Stretch="None" />
                                </RadioButton>
                                <RadioButton x:Name="PART_AddCircle"
                                    Grid.Column="1"
                                    Margin="2"
                                    GroupName="PolygonEditType"
                                    Visibility="Collapsed"
                                    ToolTipService.ToolTip="Add a circle"
                                    IsEnabled="{Binding ActiveSymbol, ConverterParameter=FillSymbol, Converter={StaticResource SymbolToBool}}"
                                    Style="{StaticResource RibbonRadioButton}">
                                    <Image Source="/Miner.Server.Client.Toolkit;component/Images/edCreate-circle.png" Stretch="None" />
                                </RadioButton>
                                <RadioButton x:Name="PART_AddEllipse"
                                    Grid.Column="1"
                                    Grid.Row="1"
                                    Margin="2"
                                    GroupName="PolygonEditType"
                                    Visibility="Collapsed"
                                    ToolTipService.ToolTip="Add an ellipse"
                                    IsEnabled="{Binding ActiveSymbol, ConverterParameter=FillSymbol, Converter={StaticResource SymbolToBool}}"
                                    Style="{StaticResource RibbonRadioButton}">
                                    <Image Source="/Miner.Server.Client.Toolkit;component/Images/edCreate-ellipse.png" Stretch="None" />
                                </RadioButton>
                                <RadioButton x:Name="PART_AddRectangle"
                                    Grid.Column="2"
                                    Margin="2"
                                    GroupName="PolygonEditType"
                                    Visibility="Collapsed"
                                    ToolTipService.ToolTip="Add a rectangle"
                                    IsEnabled="{Binding ActiveSymbol, ConverterParameter=FillSymbol, Converter={StaticResource SymbolToBool}}"
                                    Style="{StaticResource RibbonRadioButton}">
                                    <Image Source="/Miner.Server.Client.Toolkit;component/Images/edCreate-rectangle.png" Stretch="None" />
                                </RadioButton>
                                <RadioButton x:Name="PART_AddTriangle"
                                    Grid.Column="2"
                                    Grid.Row="1"
                                    Margin="2"
                                    GroupName="PolygonEditType"
                                    Visibility="Collapsed"
                                    ToolTipService.ToolTip="Add a triangle"
                                    IsEnabled="{Binding ActiveSymbol, ConverterParameter=FillSymbol, Converter={StaticResource SymbolToBool}}"
                                    Style="{StaticResource RibbonRadioButton}">
                                    <Image Source="/Miner.Server.Client.Toolkit;component/Images/edCreate-triangle.png" Stretch="None" />
                                </RadioButton>
                                <RadioButton x:Name="PART_AddArrow"
                                    Grid.Column="3"
                                    Margin="2"
                                    GroupName="PolygonEditType"
                                    Visibility="Collapsed"
                                    ToolTipService.ToolTip="Add an arrow"
                                    IsEnabled="{Binding ActiveSymbol, ConverterParameter=FillSymbol, Converter={StaticResource SymbolToBool}}"
                                    Style="{StaticResource RibbonRadioButton}">
                                    <Image Source="/Miner.Server.Client.Toolkit;component/Images/edCreate-arrow.png" Stretch="None" />
                                </RadioButton>
                            </toolkit:WrapPanel>
                        </local:RibbonPanel>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Tracing -->
    <Style x:Key="ElectricTraceControlRibbonStyle" TargetType="miner:ElectricTraceControl">

        <Setter Property="TraceFlagSymbol">
            <Setter.Value>
                <esri:PictureMarkerSymbol OffsetY="28" Source="/Miner.Server.Client.Toolkit;component/Images/flag-yellow-shadow.png" />
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <RadioButton Margin="1" Padding="1" IsThreeState="False" GroupName="ElectricTrace"
                                 ToolTipService.ToolTip="{Binding Name}"
                                 Content="{Binding Content}"
                                 IsChecked="{Binding Enabled, Mode=TwoWay}"
                                 Style="{StaticResource RibbonRadioButton}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="miner:ElectricTraceControl">

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

                        <ItemsPresenter />

                        <!--Trace options - this is temporary - eventually this will have its own toolbar perhaps-->
                        <Button x:Name="PART_ClearMarks" 
                                Margin="1" Padding="1"
                                ToolTipService.ToolTip="Clear Flag"
                                Style="{StaticResource RibbonButton}">
                            <Image Width="16"
                                    Height="16"
                                    Source="/Miner.Server.Client.Toolkit;component/Images/flags_clear.png" />
                        </Button>

                        <ToggleButton x:Name="ElectricTraceOptions" 
                                      Margin="1" Padding="1"
                                      ToolTipService.ToolTip="Trace Options"
                                      Style="{StaticResource RibbonToggleButton}">
                            <Image Width="16"
                                    Height="16"
                                    Source="/Miner.Server.Client.Toolkit;component/Images/trace_options.png" />
                        </ToggleButton>
                        
                        <Popup IsOpen="{Binding IsChecked, ElementName=ElectricTraceOptions}">
                            <Border BorderBrush="LightSlateGray" BorderThickness="1" CornerRadius="5">
                                <Grid x:Name="ElectricTraceOptionsGrid" Margin="1"
                                        Background="#EFEFEF">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <Grid Grid.Row="0">

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <TextBlock miner:LocalizationManager.ResourceKey="Phases" 
                                                    Margin="8,2,2,2" Grid.Row="0"
                                                    Foreground="Gray"/>

                                        <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="12,0,0,0">
                                            <ToggleButton HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        Style="{StaticResource ToggleButton}"
                                                        IsChecked="{Binding PhasesToTrace, RelativeSource={RelativeSource TemplatedParent},
                                                        Converter={StaticResource PhasesToTraceConverter}, 
                                                        ConverterParameter=A, Mode=TwoWay}"
                                                        Margin="4,0,6,6">
                                                <TextBlock miner:LocalizationManager.ResourceKey="PhaseA" />
                                            </ToggleButton>

                                            <ToggleButton HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        Style="{StaticResource ToggleButton}"
                                                        IsChecked="{Binding PhasesToTrace, RelativeSource={RelativeSource TemplatedParent},
                                                        Converter={StaticResource PhasesToTraceConverter} , 
                                                        ConverterParameter=B, Mode=TwoWay}"
                                                        Margin="0,0,6,6">
                                                <TextBlock miner:LocalizationManager.ResourceKey="PhaseB" />
                                            </ToggleButton>

                                            <ToggleButton HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        Style="{StaticResource ToggleButton}"
                                                        IsChecked="{Binding PhasesToTrace, RelativeSource={RelativeSource TemplatedParent},
                                                        Converter={StaticResource PhasesToTraceConverter}, 
                                                        ConverterParameter=C, Mode=TwoWay}"
                                                        Margin="0,0,6,6">
                                                <TextBlock miner:LocalizationManager.ResourceKey="PhaseC" />
                                            </ToggleButton>
                                        </StackPanel>
                                    </Grid>

                                    <StackPanel x:Name="PART_ProtectiveDevices" Grid.Row="2" 
                                                Visibility="{Binding ProtectiveDevices.Count,
                                                RelativeSource={RelativeSource TemplatedParent},
                                                Converter={StaticResource CountToVis}}">
                                        <Line Grid.Row="1" X1="0" X2="1" Height="1" Margin="4 4 4 0" 
                                            Stroke="Gray" StrokeThickness="1" Stretch="Fill" />

                                        <TextBlock miner:LocalizationManager.ResourceKey="ProtectiveDevices" 
                                                    Margin="8,4,2,5" Foreground="Gray"/>
                                        
                                        <ItemsControl ItemsSource="{Binding ProtectiveDevices, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Vertical"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <CheckBox Content="{Binding Name}"
                                                              IsChecked="{Binding IsEnabled, Mode=TwoWay}"
                                                              Margin="15,0,8,3"/>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>

                                    </StackPanel>

                                    <!--<CheckBox x:Name="PART_ReturnAttributes" Grid.Row="2" Margin="0 4 0 0"
                                                HorizontalAlignment="Left" VerticalAlignment="Center" 
                                                IsChecked="{Binding ReturnAttributes, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                        <TextBlock local:LocalizationManager.ResourceKey="ReturnAttributes" />
                                    </CheckBox>-->

                                </Grid>
                            </Border>
                        </Popup>

                    </StackPanel>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GasTraceControlRibbonStyle" TargetType="miner:GasTraceControl">

        <Setter Property="TraceFlagSymbol">
            <Setter.Value>
                <esri:PictureMarkerSymbol OffsetY="28" Source="/Miner.Server.Client.Toolkit;component/Images/flag-yellow-shadow.png" />
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <RadioButton Margin="1" Padding="1"
                                 Style="{StaticResource RibbonRadioButton}"
                                 GroupName="GasTrace"
                                 ToolTipService.ToolTip="{Binding Name}"
                                 Content="{Binding Content}"
                                 IsChecked="{Binding Enabled, Mode=TwoWay}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="miner:GasTraceControl">

                    <Grid>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

                            <ItemsPresenter />

                            <!--Trace options - this is temporary - eventually this will have its own toolbar perhaps-->
                            <Button x:Name="PART_ClearMarks" 
                                    Margin="1" Padding="1"
                                    ToolTipService.ToolTip="Clear Flag"
                                    Style="{StaticResource RibbonButton}">
                                <Image Width="16"
                                       Height="16"
                                       Source="/Miner.Server.Client.Toolkit;component/Images/flags_clear.png" />
                            </Button>

                            <ToggleButton x:Name="GasTraceOptions" 
                                          Margin="1" Padding="1"
                                          ToolTipService.ToolTip="Trace Options"
                                          Style="{StaticResource RibbonToggleButton}">
                                <Image Width="16"
                                       Height="16"
                                       Source="/Miner.Server.Client.Toolkit;component/Images/trace_options.png" />
                            </ToggleButton>
                            <Popup IsOpen="{Binding IsChecked, ElementName=GasTraceOptions}" Margin="5,0,0,0">

                                <Border BorderBrush="LightSlateGray" BorderThickness="1" CornerRadius="5">

                                    <Grid x:Name="GasTraceOptionsGrid" Margin="1"
                                          Background="#EFEFEF">

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <StackPanel x:Name="PressureSystemTraceOptions" Grid.Row="0">
                                            <TextBlock miner:LocalizationManager.ResourceKey="PressureSystemTrace" 
                                                       Margin="8,2,2,2" Foreground="Gray"/>

                                            <RadioButton HorizontalAlignment="Left" VerticalAlignment="Center"
                                                     IsChecked="{Binding RegulatorType, RelativeSource={RelativeSource TemplatedParent},
                                                     Converter={StaticResource GasPressureSystemTraceBarriersConverter}, 
                                                     ConverterParameter=AllRegulators, Mode=TwoWay}"
                                                     Margin="15,0,8,4"
                                                     GroupName="PressureSystem">
                                                <TextBlock miner:LocalizationManager.ResourceKey="AllRegulators" />
                                            </RadioButton>

                                            <RadioButton HorizontalAlignment="Left" VerticalAlignment="Center"
                                                     IsChecked="{Binding RegulatorType, RelativeSource={RelativeSource TemplatedParent},
                                                     Converter={StaticResource GasPressureSystemTraceBarriersConverter}, 
                                                     ConverterParameter=PressureRegulators, Mode=TwoWay}"
                                                     Margin="15,0,8,6"
                                                     GroupName="PressureSystem">
                                                <TextBlock miner:LocalizationManager.ResourceKey="PressureRegulators" />
                                            </RadioButton>
                                        </StackPanel>

                                        <Line Grid.Row="1" X1="0" X2="1" Height="1" Margin="4 4 4 0" 
                                              Stroke="Gray" StrokeThickness="1" Stretch="Fill" />

                                        <StackPanel x:Name="ValveIsolationTraceOptions" Grid.Row="2">
                                            <TextBlock miner:LocalizationManager.ResourceKey="ValveIsolationTrace" 
                                                       Margin="8,4,2,2" Foreground="Gray"/>

                                            <RadioButton HorizontalAlignment="Left" VerticalAlignment="Center"
                                                     IsChecked="{Binding ValveType, RelativeSource={RelativeSource TemplatedParent},
                                                     Converter={StaticResource ValveIsolationTraceBarriersConverter}, 
                                                     ConverterParameter=AllValves, Mode=TwoWay}"
                                                     Margin="15,0,8,8"
                                                     GroupName="ValveIsolation">
                                                <TextBlock miner:LocalizationManager.ResourceKey="AllValves" />
                                            </RadioButton>

                                            <RadioButton HorizontalAlignment="Left" VerticalAlignment="Center"
                                                     IsChecked="{Binding ValveType, RelativeSource={RelativeSource TemplatedParent},
                                                     Converter={StaticResource ValveIsolationTraceBarriersConverter}, 
                                                     ConverterParameter=CriticalValves, Mode=TwoWay}"
                                                     Margin="15,0,8,8"
                                                     GroupName="ValveIsolation">
                                                <TextBlock miner:LocalizationManager.ResourceKey="CriticalValves" />
                                            </RadioButton>
                                        </StackPanel>

                                        <!--<CheckBox Grid.Row="2" Margin="0 4 0 0"
                                              HorizontalAlignment="Left" VerticalAlignment="Center" 
                                              IsChecked="{Binding ReturnAttributes, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                        <TextBlock local:LocalizationManager.ResourceKey="ReturnAttributes" />
                                    </CheckBox>-->

                                    </Grid>
                                </Border>
                            </Popup>

                        </StackPanel>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GasTraceTemporaryMarksControlRibbonStyle" TargetType="miner:GasTraceTemporaryMarksControl">

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <RadioButton Margin="1" Padding="1"
                                 Style="{StaticResource RibbonRadioButton}"
                                 GroupName="GasTraceTemporaryMarks"
                                 ToolTipService.ToolTip="{Binding Name}"
                                 Content="{Binding Content}"
                                 IsChecked="{Binding Enabled, Mode=TwoWay}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="miner:GasTraceTemporaryMarksControl">

                    <Grid x:Name="PART_LayoutRoot">

                        <Grid.Resources>
                            <esri:PictureMarkerSymbol x:Key="ExcludeValveSymbol" OffsetX="20" OffsetY="20" Source="/Miner.Server.Client.Toolkit;component/Images/valve_exclude.png" />
                            <esri:PictureMarkerSymbol x:Key="IncludeValveSymbol" OffsetX="20" OffsetY="20" Source="/Miner.Server.Client.Toolkit;component/Images/valve_include.png" />
                            <esri:PictureMarkerSymbol x:Key="SqueezeOffSymbol" OffsetX="20" OffsetY="20" Source="/Miner.Server.Client.Toolkit;component/Images/squeeze_off.png" />
                            <esri:PictureMarkerSymbol x:Key="TemporarySourceSymbol" OffsetX="20" OffsetY="20" Source="/Miner.Server.Client.Toolkit;component/Images/temporary-source.png" />
                        </Grid.Resources>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

                            <ItemsPresenter />

                            <Button x:Name="PART_ClearMarks" 
                                    Margin="1" Padding="1"
                                    ToolTipService.ToolTip="Clear All Temporary Marks"
                                    Style="{StaticResource RibbonButton}">
                                <Image Width="16"
                                       Height="16"
                                       Source="/Miner.Server.Client.Toolkit;component/Images/temporary-marks_clear.png" />
                            </Button>

                        </StackPanel>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WaterTraceControlRibbonStyle" TargetType="miner:WaterTraceControl">

        <Setter Property="TraceFlagSymbol">
            <Setter.Value>
                <esri:PictureMarkerSymbol OffsetY="28" Source="/Miner.Server.Client.Toolkit;component/Images/flag-yellow-shadow.png" />
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <RadioButton Margin="1" Padding="1"
                     Style="{StaticResource RibbonRadioButton}"
                     GroupName="WaterTrace"
                     ToolTipService.ToolTip="{Binding Name}"
                     Content="{Binding Content}"
                     IsChecked="{Binding Enabled, Mode=TwoWay}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="miner:WaterTraceControl">

                    <Grid>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

                            <ItemsPresenter />

                            <!--Trace options - this is temporary - eventually this will have its own toolbar perhaps-->
                            <Button x:Name="PART_ClearMarks" 
                                    Margin="1" Padding="1"
                                    ToolTipService.ToolTip="Clear Flag"
                                    Style="{StaticResource RibbonButton}">
                                <Image Width="16"
                                       Height="16"
                                       Source="/Miner.Server.Client.Toolkit;component/Images/flags_clear.png" />
                            </Button>

                            <ToggleButton x:Name="WaterTraceOptions" 
                                          Margin="1" Padding="1"
                                          ToolTipService.ToolTip="Trace Options"
                                          Style="{StaticResource RibbonToggleButton}">
                                <Image Width="16"
                                       Height="16"
                                       Source="/Miner.Server.Client.Toolkit;component/Images/trace_options.png" />
                            </ToggleButton>
                            <Popup IsOpen="{Binding IsChecked, ElementName=WaterTraceOptions}" Margin="5,0,0,0">

                                <Border BorderBrush="LightSlateGray" BorderThickness="1" CornerRadius="5">

                                    <Grid x:Name="WaterTraceOptionsGrid" Margin="1"
                                          Background="#EFEFEF">

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <!--<RowDefinition Height="Auto" />-->
                                        </Grid.RowDefinitions>

                                        <StackPanel Grid.Row="1">
                                            <TextBlock miner:LocalizationManager.ResourceKey="ValveIsolationTrace" 
                                                       Margin="8,4,2,2" Foreground="Gray"/>

                                            <RadioButton HorizontalAlignment="Left" VerticalAlignment="Center"
                                                     IsChecked="{Binding ValveType, RelativeSource={RelativeSource TemplatedParent},
                                                     Converter={StaticResource ValveIsolationTraceBarriersConverter}, 
                                                     ConverterParameter=AllValves, Mode=TwoWay}"
                                                     Margin="15,0,8,4"
                                                     GroupName="ValveIsolation">
                                                <TextBlock miner:LocalizationManager.ResourceKey="AllValves" />
                                            </RadioButton>

                                            <RadioButton HorizontalAlignment="Left" VerticalAlignment="Center"
                                                     IsChecked="{Binding ValveType, RelativeSource={RelativeSource TemplatedParent},
                                                     Converter={StaticResource ValveIsolationTraceBarriersConverter}, 
                                                     ConverterParameter=CriticalValves, Mode=TwoWay}"
                                                     Margin="15,0,8,6"
                                                     GroupName="ValveIsolation">
                                                <TextBlock miner:LocalizationManager.ResourceKey="CriticalValves" />
                                            </RadioButton>

                                            <CheckBox Margin="15,10,8,8" HorizontalAlignment="Left" VerticalAlignment="Center"
                                                  IsChecked="{Binding UsePressures, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                                <TextBlock miner:LocalizationManager.ResourceKey="UsePressures" />
                                            </CheckBox>

                                        </StackPanel>

                                        <!--<CheckBox Grid.Row="2" Margin="0,4,0,0"
                                              HorizontalAlignment="Left" VerticalAlignment="Center" 
                                              IsChecked="{Binding ReturnAttributes, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                        <TextBlock local:LocalizationManager.ResourceKey="ReturnAttributes" />
                                    </CheckBox>-->

                                    </Grid>
                                </Border>
                            </Popup>

                        </StackPanel>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WaterTraceTemporaryMarksControlRibbonStyle" TargetType="miner:WaterTraceTemporaryMarksControl">

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <RadioButton Margin="1" Padding="1"
                                 Style="{StaticResource RibbonRadioButton}"
                                 GroupName="WaterTraceTemporaryMarks"
                                 ToolTipService.ToolTip="{Binding Name}"
                                 Content="{Binding Content}"
                                 IsChecked="{Binding Enabled, Mode=TwoWay}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="miner:WaterTraceTemporaryMarksControl">

                    <Grid x:Name="PART_LayoutRoot">

                        <Grid.Resources>
                            <esri:PictureMarkerSymbol x:Key="ExcludeValveSymbol" OffsetX="20" OffsetY="20" Source="/Miner.Server.Client.Toolkit;component/Images/valve_exclude.png" />
                            <esri:PictureMarkerSymbol x:Key="IncludeValveSymbol" OffsetX="20" OffsetY="20" Source="/Miner.Server.Client.Toolkit;component/Images/valve_include.png" />
                            <esri:PictureMarkerSymbol x:Key="SqueezeOffSymbol" OffsetX="20" OffsetY="20" Source="/Miner.Server.Client.Toolkit;component/Images/squeeze_off.png" />
                        </Grid.Resources>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

                            <ItemsPresenter />

                            <Button x:Name="PART_ClearMarks" 
                                    Margin="1" Padding="1"
                                    ToolTipService.ToolTip="Clear All Temporary Marks"
                                    Style="{StaticResource RibbonButton}">
                                <Image Width="16"
                                       Height="16"
                                       Source="/Miner.Server.Client.Toolkit;component/Images/temporary-marks_clear.png" />
                            </Button>

                        </StackPanel>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Changes the behavior of text boxes when you add redline text-->
    <Style x:Key="FeatureDataFormTextBoxStyle" TargetType="TextBox" >
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="MinWidth" Value="75"/>
    </Style>

    <Style x:Key="JetButtonStyle" TargetType="Button" >
        <Setter Property="Height" Value="24"></Setter>
        <Setter Property="Width" Value="80"></Setter>
        <Setter Property="Margin" Value="2"></Setter>
    </Style>

    <Style x:Key="JetButtonImageStyle" TargetType="Image">
        <Setter Property="Height" Value="16"></Setter>
        <Setter Property="Width" Value="16"></Setter>
    </Style>

    <Style x:Key="JetTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Height" Value="24"></Setter>
        <Setter Property="Margin" Value="5"></Setter>
    </Style>

    <Style x:Key="JetTextBoxStyle" TargetType="TextBox">
        <Setter Property="Height" Value="24"></Setter>
        <Setter Property="Margin" Value="5"></Setter>
    </Style>

    <Style x:Key="JetTextBoxInvalidStyle" TargetType="TextBox">
        <Setter Property="Background" Value="LightYellow"></Setter>
    </Style>
    <Style x:Key="JetTextBoxValidStyle" TargetType="TextBox">
        <Setter Property="Background" Value="White"></Setter>
    </Style>

    <Style x:Key="JetRowStyleStandard" TargetType="RowDefinition">
        <Setter Property="Height" Value="40"></Setter>
    </Style>
    <Style  x:Key="PONSButton"  TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF6DBDD1"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#D8FFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#C6FFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#8CFFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#3FFFFFFF"/>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55"/>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FocusStates">
                                <vsm:VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unfocused" />
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" CornerRadius="3" Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid Background="{TemplateBinding Background}"  Margin="1">
                                <Border Opacity="0"  x:Name="BackgroundAnimation" Background="#FF448DCA" />
                                <Rectangle x:Name="BackgroundGradient" >
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                            <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                            <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                            <GradientStop Color="#C6FFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>
                        <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                        <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" />
                        <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PONSCheckBox" TargetType="CheckBox">
        <Setter Property="Background" Value="#FF448DCA"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,1,0,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        <DoubleAnimation Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#7FFFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#CCFFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#F2FFFFFF"/>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        <DoubleAnimation Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#6BFFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#C6FFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#EAFFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0" To="#F4FFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#FF6DBDD1"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0" To="#FF6DBDD1"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#FF6DBDD1"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#FF6DBDD1"/>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To=".55"/>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="0.55"/>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="CheckStates">
                                <vsm:VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="1"/>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unchecked"/>
                                <vsm:VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="1"/>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FocusStates">
                                <vsm:VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unfocused" />
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="ValidationStates">
                                <vsm:VisualState x:Name="Valid"/>
                                <vsm:VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Rectangle x:Name="Background" Width="14" Height="14" RadiusX="1" RadiusY="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Fill="#FFFFFFFF" Margin="1"/>
                            <Rectangle x:Name="BackgroundOverlay" Fill="#FFC4DBEE" Opacity="0" Width="14" Height="14" RadiusX="1" RadiusY="1" StrokeThickness="1" Margin="1" Stroke="#00000000"/>
                            <Rectangle x:Name="BoxMiddleBackground" Width="10" Height="10" RadiusX="1" RadiusY="1" Fill="{TemplateBinding Background}" Stroke="#00000000" StrokeThickness="1"/>
                            <Rectangle x:Name="BoxMiddle" Width="10" Height="10" RadiusX="1" RadiusY="1" StrokeThickness="1" >
                                <Rectangle.Stroke>
                                    <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0.62,0.15" EndPoint="0.64,0.88">
                                        <GradientStop Color="#FFFFFFFF" Offset="0.013" />
                                        <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                        <GradientStop Color="#EAFFFFFF" Offset="0.603" />
                                        <GradientStop Color="#D8FFFFFF" Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="BoxMiddleLine" Width="10" Height="10" RadiusX="1" RadiusY="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" Opacity=".2"/>
                            <Path x:Name="CheckIcon" Margin="1,1,0,1.5" Fill="#FF333333" Stretch="Fill" Opacity="0" Width="10.5" Height="10" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" FlowDirection="LeftToRight"/>
                            <Rectangle x:Name="IndeterminateIcon" Height="2" Fill="#FF333333" Opacity="0" Width="6"/>
                            <Rectangle x:Name="DisabledVisualElement" RadiusX="1" RadiusY="1" Width="14" Height="14" Opacity="0" Fill="#FFFFFFFF"/>
                            <Rectangle x:Name="ContentFocusVisualElement" RadiusX="2" RadiusY="2" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" Width="16" Height="16" />

                            <Border x:Name="ValidationErrorElement" Margin="1" BorderThickness="1" CornerRadius="1" BorderBrush="#FFDB000C" Visibility="Collapsed"
                                  ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip" 
                                       Template="{StaticResource ValidationToolTipTemplate}"
                                       DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Right" 
                                       PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                <EventTrigger.Actions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <System:Boolean>true</System:Boolean>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger.Actions>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <Grid Width="10" Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
                                    <Path Margin="0,3,0,0" Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="#FFDC000C"/>
                                    <Path Margin="0,3,0,0" Data="M 0,0 L2,0 L 7,5 L7,7" Fill="#ffffff"/>
                                </Grid>
                            </Border>

                        </Grid>
                        <ContentPresenter
                              Grid.Column="1"
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PONSComboBox" TargetType="ComboBox">
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Padding" Value="6,2,25,2" />
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabNavigation" Value="Once" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                                <Setter Property="Foreground" Value="#FF333333"/>
                                <Setter Property="Background" Value="#FF1F3B53"/>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                            <GradientStop Color="#FF617584" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <vsm:Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Padding" Value="3"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Grid>
                                                <vsm:VisualStateManager.VisualStateGroups>
                                                    <vsm:VisualStateGroup x:Name="CommonStates">
                                                        <vsm:VisualState x:Name="Normal"/>
                                                        <vsm:VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity" To="1"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                        <vsm:VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundOverlay2" Storyboard.TargetProperty="Opacity" To="1"/>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#E5FFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#BCFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#6BFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#F2FFFFFF"/>
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                        <vsm:VisualState x:Name="Disabled" />
                                                    </vsm:VisualStateGroup>
                                                    <vsm:VisualStateGroup x:Name="CheckStates">
                                                        <vsm:VisualState x:Name="Checked">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundOverlay3" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#E5FFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#BCFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#6BFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#F2FFFFFF"/>
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                        <vsm:VisualState x:Name="Unchecked"/>
                                                    </vsm:VisualStateGroup>
                                                    <vsm:VisualStateGroup x:Name="FocusStates">
                                                        <vsm:VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                        <vsm:VisualState x:Name="Unfocused" />
                                                    </vsm:VisualStateGroup>
                                                </vsm:VisualStateManager.VisualStateGroups>
                                                <Rectangle x:Name="Background" RadiusX="3" RadiusY="3" Fill="{TemplateBinding Background}" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}"/>
                                                <Rectangle x:Name="BackgroundOverlay" Opacity="0" RadiusX="3" RadiusY="3" Fill="#FF448DCA" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="#00000000"/>
                                                <Rectangle x:Name="BackgroundOverlay2" Opacity="0" RadiusX="3" RadiusY="3" Fill="#FF448DCA" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="#00000000"/>
                                                <Rectangle x:Name="BackgroundGradient" RadiusX="2" RadiusY="2" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" Stroke="#FFFFFFFF">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                            <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                                            <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                                            <GradientStop Color="#C6FFFFFF" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Rectangle Opacity="0" x:Name="BackgroundOverlay3" RadiusX="3" RadiusY="3" Fill="#FF448DCA" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="#00000000"/>
                                                <Rectangle Opacity="0" x:Name="BackgroundGradient2" RadiusX="2" RadiusY="2" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" Stroke="#FFFFFFFF">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                            <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                                            <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                                            <GradientStop Color="#C6FFFFFF" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Rectangle x:Name="Highlight" RadiusX="2" RadiusY="2" Opacity="0" IsHitTestVisible="false" Stroke="#FF6DBDD1" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" />
                                                <ContentPresenter
                                                      x:Name="contentPresenter"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}"/>
                                                <Rectangle x:Name="FocusVisualElement" RadiusX="3.5" Margin="1"  RadiusY="3.5" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed" IsHitTestVisible="false" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal" />
                                <vsm:VisualState x:Name="MouseOver" />
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To=".55"/>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FocusStates">
                                <vsm:VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unfocused"/>
                                <vsm:VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="ValidationStates">
                                <vsm:VisualState x:Name="Valid"/>
                                <vsm:VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <ToggleButton x:Name="DropDownToggle" Style="{StaticResource comboToggleStyle}"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="0" HorizontalContentAlignment="Right" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <Path x:Name="BtnArrow" Height="4" Width="8" Stretch="Uniform" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Margin="0,0,6,0" HorizontalAlignment="Right">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="BtnArrowColor" Color="#FF333333"/>
                                        </Path.Fill>
                                    </Path>
                                </ToggleButton>
                                <ContentPresenter x:Name="ContentPresenter" 
                                                Margin="{TemplateBinding Padding}"  
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <TextBlock Text=" " />
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="White" Opacity="0" IsHitTestVisible="false" />
                        <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1"  Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                        <Border x:Name="ValidationErrorElement" BorderThickness="1" CornerRadius="1" BorderBrush="#FFDB000C" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" Template="{StaticResource ValidationToolTipTemplate}" Placement="Right" 
                                           PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                           DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>true</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Width="12" Height="12" HorizontalAlignment="Right" Margin="1,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
                                <Path Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C"/>
                                <Path Margin="1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff"/>
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder" HorizontalAlignment="Stretch" Height="Auto" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FFFEFEFE" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PONSRadioButton" TargetType="RadioButton">
        <Setter Property="Background" Value="#FF448DCA"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,1,0,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        <DoubleAnimation Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#7FFFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#CCFFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#F2FFFFFF"/>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        <DoubleAnimation Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#6BFFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#C6FFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#EAFFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0" To="#F4FFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#FF6DBDD1"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0" To="#FF6DBDD1"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#FF6DBDD1"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#FF6DBDD1"/>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To=".55"/>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="0.55"/>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="CheckStates">
                                <vsm:VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="1"/>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unchecked"/>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FocusStates">
                                <vsm:VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unfocused" />
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="ValidationStates">
                                <vsm:VisualState x:Name="Valid"/>
                                <vsm:VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Ellipse x:Name="Background" Width="14" Height="14" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Fill="#FFFFFFFF" Margin="1"/>
                            <Ellipse x:Name="BackgroundOverlay" Fill="#FFC4DBEE" Opacity="0" Width="14" Height="14" StrokeThickness="1" Margin="1" Stroke="#00000000"/>
                            <Ellipse x:Name="BoxMiddleBackground" Width="10" Height="10" Fill="{TemplateBinding Background}" Stroke="#00000000" StrokeThickness="1"/>
                            <Ellipse x:Name="BoxMiddle" Width="10" Height="10" StrokeThickness="1" >
                                <Ellipse.Stroke>
                                    <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                                    </LinearGradientBrush>
                                </Ellipse.Stroke>
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0.62,0.15" EndPoint="0.64,0.88">
                                        <GradientStop Color="#FFFFFFFF" Offset="0.013" />
                                        <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                        <GradientStop Color="#EAFFFFFF" Offset="0.603" />
                                        <GradientStop Color="#D8FFFFFF" Offset="1" />
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse x:Name="BoxMiddleLine" Width="10" Height="10" Stroke="#FF333333" StrokeThickness="1" Opacity=".2"/>
                            <Ellipse x:Name="CheckIcon" Fill="#FF333333" Width="4" Height="4" Opacity="0"/>
                            <Ellipse x:Name="DisabledVisualElement" Width="14" Height="14" Opacity="0" Fill="#FFFFFFFF"/>
                            <Ellipse x:Name="ContentFocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" Width="16" Height="16" />
                            <Grid x:Name="ValidationErrorElement" Visibility="Collapsed" 
                                ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip" 
                                       Template="{StaticResource ValidationToolTipTemplate}"
                                       DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Right" 
                                       PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                <EventTrigger.Actions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <System:Boolean>true</System:Boolean>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger.Actions>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <Ellipse Stroke="#FFDB000C" StrokeThickness="1" Width="14" Height="14" />
                                <Ellipse HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-2,-1,0" Fill="#FFDB000C" Width="4" Height="4"/>
                                <Ellipse HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-5,-4,0" Fill="Transparent" Width="10" Height="10"/>
                            </Grid>
                        </Grid>
                        <ContentPresenter
                              Grid.Column="1"
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style x:Key="PONSButton" TargetType="Button" >
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                    From="Green"
                                                    To="Red"
                                                    Duration="0:0:1" />
                                    </Storyboard>
                                </VisualState>
                               
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="#B3B6B6B6"  BorderThickness="1" CornerRadius="4">
                            <Border x:Name="border" Background="#FFFFFFFF"  BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="4">
                            </Border>
                        </Border>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

</ResourceDictionary>