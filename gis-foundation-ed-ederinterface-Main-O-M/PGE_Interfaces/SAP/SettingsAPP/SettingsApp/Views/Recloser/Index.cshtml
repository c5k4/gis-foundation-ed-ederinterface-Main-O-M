@using SettingsApp.Common;
@model SettingsApp.Models.RecloserModel
@using (Html.BeginForm("Index", "Recloser"))
{
    @Html.ValidationSummary(true)
   
   <link rel="stylesheet" href="http://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css" temp_href="http://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css" />
<script src="http://code.jquery.com/jquery-1.8.3.js" temp_src="http://code.jquery.com/jquery-1.8.3.js"></script>
<script src="http://code.jquery.com/ui/1.9.2/jquery-ui.js" temp_src="http://code.jquery.com/ui/1.9.2/jquery-ui.js"></script>

  <script type="text/javascript">
      $(document).ready(function () {


          var selectedText = $("#SFGNRMAL").find("option:selected").text();
          var selPermitRbCutIndd = $("#PermitRbCutIndd").find("option:selected").text();
          if (selectedText.toUpperCase() != "ON") {
              $("#NormalTripAmp").css("display", "none");
              $("#Normal_SGF_TIME_DELAY").css("display", "none");
              $("#Normal_SGF_LOCKOUT").css("display", "none");
          }
          else {

              $("#NormalTripAmp").show();
              $("#Normal_SGF_TIME_DELAY").show();
              $("#Normal_SGF_LOCKOUT").show();
          }

          if (selPermitRbCutIndd.toUpperCase() == "NO") {


              // alert(selectedText);
              $("#BocVoltageID").css("display", "none");
              $("#RbCutoutTimeID").css("display", "none");



          }
          else {
              //alert(selectedText);

              $("#BocVoltageID").show();
              $("#RbCutoutTimeID").show();
          }
          var Alt1selectedText = $("#Altdd1").find("option:selected").text();
          if (Alt1selectedText.toUpperCase() == "ON") {


              //  alert(selectedText);

              $("#Altsfg_Min").show();
              $("#Altsfg_delay").show();
              $("#Altsfg_lockout").show();
          }
          else {
              // alert(selectedText);
              $("#Altsfg_Min").css("display", "none");
              $("#Altsfg_delay").css("display", "none");
              $("#Altsfg_lockout").css("display", "none");

          }
          var Alt3selectedText = $("#Alt3dd3").find("option:selected").text();
          if (Alt3selectedText.toUpperCase() == "ON") {


              //  alert(selectedText);

              $("#Alt3TripAmp").show();
              $("#Alt3Delay").show();
              $("#Alt3Lockout").show();
          }
          else {
              // alert(selectedText);
              $("#Alt3TripAmp").css("display", "none");
              $("#Alt3Delay").css("display", "none");
              $("#Alt3Lockout").css("display", "none");

          }
      });

      //      function OnNormalSFG() {
      //          $.ajax({
      //              type: "POST",
      //              url: "/Recloser/NormalRPG",
      //              data: '{relayType: "' + $("#SFGNRMAL").val() + '" }',
      //              contentType: "application/json; charset=utf-8",
      //              dataType: "json",
      //              success: function (response) {
      //             
      //               var selectedText = $("#SFGNRMAL").find("option:selected").text();
      //                  var selectedText1 = $("#SFGNRMAL").val();
      //                  if (selectedText.toUpperCase() == "ON") {


      //                    
      //                      $("#NormalTripAmp").show();
      //                      $("#Normal_SGF_TIME_DELAY").show();
      //                      $("#Normal_SGF_LOCKOUT").show();
      //                  }
      //                  else {
      //                      // alert(selectedText);
      //                      $("#NormalTripAmp").css("display", "none");
      //                      $("#Normal_SGF_TIME_DELAY").css("display", "none");
      //                      $("#Normal_SGF_LOCKOUT").css("display", "none");

      //                  }
      //              },
      //              failure: function (response) {
      //                  //alert("Failure");
      //              },
      //              error: function (response) {
      //                  //alert("Error");
      //              }
      //          });
      //      }
      $(function () {

          $("#SFGNRMAL").change(function () {

              var selectedText = $(this).find("option:selected").text();

              if (selectedText.toUpperCase() == "ON") {



                  $("#NormalTripAmp").show();
                  $("#Normal_SGF_TIME_DELAY").show();
                  $("#Normal_SGF_LOCKOUT").show();
              }
              else {
                  // alert(selectedText);
                  $("#NormalTripAmp").css("display", "none");
                  $("#Normal_SGF_TIME_DELAY").css("display", "none");
                  $("#Normal_SGF_LOCKOUT").css("display", "none");

              }

          });

      });

      function OnScadaChange() {
          $("#FlisrDeviceDropDown").val("N");
          if ($("#ScadaDropDown").val() == "Y") {
              $("#FlisrDeviceDropDown").prop("disabled", false);
          }
          else {
              $("#FlisrDeviceDropDown").prop("disabled", true);
          }
      }

      $(function () {

          $("#Altdd1").change(function () {

              var selectedText = $(this).find("option:selected").text();

              if (selectedText.toUpperCase() == "ON") {


                  //  alert(selectedText);

                  $("#Altsfg_Min").show();
                  $("#Altsfg_delay").show();
                  $("#Altsfg_lockout").show();
              }
              else {
                  // alert(selectedText);
                  $("#Altsfg_Min").css("display", "none");
                  $("#Altsfg_delay").css("display", "none");
                  $("#Altsfg_lockout").css("display", "none");

              }


          });

      });
      $(function () {

          $("#Alt3dd3").change(function () {

              var selectedText = $(this).find("option:selected").text();

              if (selectedText.toUpperCase() == "ON") {




                  $("#Alt3TripAmp").show();
                  $("#Alt3Delay").show();
                  $("#Alt3Lockout").show();
              }
              else {

                  $("#Alt3TripAmp").css("display", "none");
                  $("#Alt3Delay").css("display", "none");
                  $("#Alt3Lockout").css("display", "none");

              }


          });

      });
      //Permit RB Cut-In
      $(function () {

          $("#PermitRbCutIndd").change(function () {

              var selectedText = $(this).find("option:selected").text();

              if (selectedText.toUpperCase() == "YES") {


                  // alert(selectedText);

                  $("#BocVoltageID").show();
                  $("#RbCutoutTimeID").show();

              }
              else {
                  //alert(selectedText);
                  $("#BocVoltageID").css("display", "none");
                  $("#RbCutoutTimeID").css("display", "none");


              }


          });

      });

      function OnTriggerChange(e) {
          //debugger;
          if (e.id == "FaultCurOnlyRadio" && e.checked == true) {
              $("#VoltLossOnlyRadio").prop('checked', false);
              $("#FaultCurVoltLossRadio").prop('checked', false);
          }
          else if (e.id == "VoltLossOnlyRadio" && e.checked == true) {
              $("#FaultCurOnlyRadio").prop('checked', false);
              $("#FaultCurVoltLossRadio").prop('checked', false);
          }
          else if (e.id == "FaultCurVoltLossRadio" && e.checked == true) {
              $("#FaultCurOnlyRadio").prop('checked', false);
              $("#VoltLossOnlyRadio").prop('checked', false);
          }

      }
</script>
    
    <table 
    cellpadding="0" cellspacing="0" width="90%">
        <tr>
            <td style="padding: 0px">
                <div class="float-left">
                    <nav>
                        <ul id="menu">
                            <li>@Html.ActionLink("GIS", "GIS", "Recloser", new { globalID = ViewBag.GlobalID, layerName = ViewBag.LayerName, layerType = ViewBag.layerType }, null)</li>
                            <li class="@ViewBag.CurrentClass">@Html.ActionLink("Current Settings", "Index", "Recloser", new { globalID = ViewBag.GlobalID, layerName = ViewBag.LayerName, layerType = ViewBag.layerType }, null)</li>
                            <li class="@ViewBag.FutureClass">@Html.ActionLink("Future Settings", "Future", "Recloser", new { globalID = ViewBag.GlobalID, layerName = ViewBag.LayerName, layerType = ViewBag.layerType }, null)</li>
                            <li>@Html.ActionLink("Settings Files", "Files", "Recloser", new { globalID = ViewBag.GlobalID, layerName = ViewBag.LayerName, layerType = ViewBag.layerType }, null)</li>
                            <li>@Html.ActionLink("History", "History", "Recloser", new { globalID = ViewBag.GlobalID, layerName = ViewBag.LayerName, layerType = ViewBag.layerType }, null)</li>
                        </ul>
                    </nav>
                </div>
            </td>
        </tr>
        <tr>
            <td class="header" style="padding-top: 15px; padding-bottom: 0px; padding-left: 10px">
               @if (ViewBag.layerType == "P")
               {
                    <label id="lablelayertype" runat="server" style="color: Red; font-size:16; text-align: Left;">
                       @ViewBag.Title 
                    </label>
                     
                   
               }
               else
               {
                @ViewBag.Title 
               }
            </td>
        </tr>
        <tr>
            <td style="background-color: #ffffff; padding: 10px;">
                @if (ViewBag.ShowPageError == true)
                {
                    <label id="lableDeviceValidationError" runat="server" style="color: Red; text-align: center;">
                        There are error(s), please check below.
                    </label>
                }
                @if (ViewBag.ShowSaveSucessful == true)
                {
                    <label id="lableDeviceSaveSucess" runat="server" style="color: Green; text-align: center;">
                        Device saved successfully.
                    </label>
                }
            </td>
        </tr>
          @if (ViewBag.PageMode == "CURRENT")
          {
                        <tr>
                            <td colspan="2" style="text-align: right; padding-right: 10px">
                                <input type="button" value="Copy current to future settings" onclick="this.form.action='/@ViewBag.ControllerName/CopyToFuture/@ViewBag.GlobalID/@ViewBag.LayerName?layerType=@ViewBag.layerType';this.form.submit();" 
                                    @(Security.IsInAdminGroup ? Html.Raw("") : Html.Raw("disabled='disabled'")) />
                            </td>
                        </tr>
          }
        <tr>
            <td style="background-color: #ffffff; padding: 10px">
                <table cellpadding="0" cellspacing="0" width="100%" style="background-color: #f2f2f2">
                    <!------------------ General ------------------>
                    @if (Model.FieldsToDisplay.Contains("OPERATING_NUM"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.OperatingNumber)
                        </td>
                        <td>@Html.TextBox("optNum", (string)ViewBag.SubstationName + (string)ViewBag.OperatingNum, (object)new { disabled = "disabled" })
                        </td>
                    </tr>}
@*@if (Model.FieldsToDisplay.Contains("DEVICE_ID"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.DeviceId)
                        </td>
                        <td>@Html.TextBoxFor(model => model.DeviceId, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.DeviceId)
                        </td>
                    </tr>}*@
                    @if (Model.FieldsToDisplay.Contains("CONTROL_TYPE"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.ControllerUnitType)
                        </td>
                        <td>@Html.DropDownListFor(model => model.ControllerUnitType, Model.ControllerUnitTypeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { onchange = Model.DropDownPostbackScript })@Html.ValidationMessageFor(model => model.ControllerUnitType)
                        </td>
                    </tr>}
                    @if (Model.FieldsToDisplay.Contains("ACTIVE_PROFILE"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.ActiveProfile)
                        </td>
                        @if (Model.ControllerUnitType == "BECK")
                        {
                            <td>@Html.DropDownListFor(model => model.ActiveProfile, Model.ActiveProfileList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { onchange = Model.DropDownPostbackScript })@Html.ValidationMessageFor(model => model.ActiveProfile)
                            </td>
                        }
                        else
                        {
                            <td>@Html.DropDownListFor(model => model.ActiveProfile, Model.ActiveProfileList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ActiveProfile)
                            </td>
                        }
                    </tr>}
                   
                    <tr>
                        <td>@Html.LabelForRequired(model => model.IsMultiFunctional)
                        </td>
                        <td>
                            <span class="OperatingModeInline">@Html.DropDownListFor(model => model.IsMultiFunctional, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.IsMultiFunctional)</span>
                            @if (Model.FieldsToDisplay.Contains("OPERATING_AS_CD"))
                            {
                                <span class="OperatingModeInline">@Html.LabelForRequired(model => model.OperatingMode)</span>
                                <span class="OperatingModeInline">@Html.DropDownListFor(model => model.OperatingMode, Model.OperatingModeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.OperatingMode)</span>
                            }
                        </td>
                    </tr>
                    @if (Model.FieldsToDisplay.Contains("CONTROL_SERIAL_NUM"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.ControllerSerialNum)
                        </td>
                        <td>@Html.TextBoxFor(model => model.ControllerSerialNum, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 18 })@Html.ValidationMessageFor(model => model.ControllerSerialNum)
                        </td>
                    </tr>}
                    @if (Model.FieldsToDisplay.Contains("FIRMWARE_VERSION"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.FirmwareVersion)
                        </td>
                        <td>@Html.TextBoxFor(model => model.FirmwareVersion, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 12 })@Html.ValidationMessageFor(model => model.FirmwareVersion)
                        </td>
                    </tr>}
                    @if (Model.FieldsToDisplay.Contains("SOFTWARE_VERSION"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.SoftwareVersion)
                        </td>
                        <td>@Html.TextBoxFor(model => model.SoftwareVersion, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 12 })@Html.ValidationMessageFor(model => model.SoftwareVersion)
                        </td>
                    </tr>}
                    @if (Model.FieldsToDisplay.Contains("SPECIAL_CONDITIONS"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.SpecialConditions)
                        </td>
                        <td>@Html.TextAreaFor(model => model.SpecialConditions, 5, 15, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 250, @class = "form-control" })@Html.ValidationMessageFor(model => model.SpecialConditions)
                        </td>
                    </tr>}
@* @if (Model.FieldsToDisplay.Contains("ENGINEERING_DOCUMENT"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.EngineeringDocument)
                        </td>
                        <td>@Html.DropDownListFor(model => model.EngineeringDocument, Model.EngineeringDocumentList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.EngineeringDocument)
                        </td>
                    </tr>}*@
                    <!------------------ Bypass ------------------>
                    <tr>
                        <td colspan="2" style="padding-left: 10px; padding-right: 10px; width: 100%">
                            <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                <tr>
                                    <td colspan="2" class="sectionHeader">
                                        <b>General</b>
                                    </td>
                                </tr>
                                @if (Model.FieldsToDisplay.Contains("OK_TO_BYPASS"))
                                {<tr>
                                    <td>@Html.LabelForRequired(model => model.OkToBypass)
                                    </td>
                                    <td>@Html.DropDownListFor(model => model.OkToBypass, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.OkToBypass)
                                    @*<td>@Html.DropDownListFor(model => model.OkToBypass, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { onchange = Model.DropDownPostbackScript })@Html.ValidationMessageFor(model => model.OkToBypass)*@
                                    </td>
                                </tr>}
@*@if (Model.OkToBypass != null && Model.OkToBypass.ToUpper() == "N")
                                {
                                    if (Model.FieldsToDisplay.Contains("BYPASS_PLANS"))
                                    {*@
                                <tr>
                                    <td>@Html.LabelForRequired(model => model.BypassPlan)
                                    </td>
                                    <td>@Html.TextAreaFor(model => model.BypassPlan, 5, 15, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 500, @class = "form-control" })@Html.ValidationMessageFor(model => model.BypassPlan)
                                    </td>
                                </tr>
                                @*}}*@
                                @if (Model.FieldsToDisplay.Contains("PERMIT_RB_CUTIN"))
                                {<tr id="PermitRbCutInID">
                                    <td>@Html.LabelForRequired(model => model.PermitRbCutIn)
                                    </td>
                                    @*<td>@Html.DropDownListFor(model => model.PermitRbCutIn, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { onchange = Model.DropDownPostbackScript })@Html.ValidationMessageFor(model => model.PermitRbCutIn)*@
                                    
                                    <td>@Html.DropDownListFor(model => model.PermitRbCutIn, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { id = "PermitRbCutIndd" })@Html.ValidationMessageFor(model => model.PermitRbCutIn)
                                    </td>
                                </tr>}
                                    
                                @if (Model.FieldsToDisplay.Contains("DIRECT_TRANSFER_TRIP"))
                                {<tr>
                                    <td>@Html.LabelForRequired(model => model.DirectTransferTrip)
                                    </td>
                                    <td>@Html.DropDownListFor(model => model.DirectTransferTrip, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.DirectTransferTrip)
                                    </td>
                                </tr>}
                          @if (ViewBag.PageMode == "FUTURE")
                          {
                              if (Model.FieldsToDisplay.Contains("BOC_VOLTAGE"))
                              {<tr id="BocVoltageID">
                                        <td>@Html.LabelForRequired(model => model.BocVoltage)
                                        </td>
                                        <td>@Html.TextBoxFor(model => model.BocVoltage, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.BocVoltage)
                                        </td>
                                    </tr>}
                              if (Model.FieldsToDisplay.Contains("RB_CUTOUT_TIME"))
                              {<tr id="RbCutoutTimeID">
                                        <td>@Html.LabelForRequired(model => model.RbCutoutTime)
                                        </td>
                                        <td>@Html.TextBoxFor(model => model.RbCutoutTime, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.RbCutoutTime)
                                        </td>
                                    </tr>
                              }

                          }
                          else
                          {
                              if (Model.PermitRbCutIn != null && Model.PermitRbCutIn.ToUpper() == "Y")
                              {
                                  if (Model.FieldsToDisplay.Contains("BOC_VOLTAGE"))
                                  {<tr>
                                        <td>@Html.LabelForRequired(model => model.BocVoltage)
                                        </td>
                                        <td>@Html.TextBoxFor(model => model.BocVoltage, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.BocVoltage)
                                        </td>
                                    </tr>}
                                  if (Model.FieldsToDisplay.Contains("RB_CUTOUT_TIME"))
                                  {<tr>
                                        <td>@Html.LabelForRequired(model => model.RbCutoutTime)
                                        </td>
                                        <td>@Html.TextBoxFor(model => model.RbCutoutTime, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.RbCutoutTime)
                                        </td>
                                    </tr>}
                              }
                          }
                            </table>
                        </td>
                    </tr>
                    <!------------------ FLISR ------------------>
                    <tr>
                        <td colspan="2" style="padding-left: 10px; padding-right: 10px; width: 100%">
                            <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                <tr>
                                    <td colspan="2" class="sectionHeader">
                                        <b>FLISR - Settings</b>
                                    </td>
                                </tr>

                                @if (Model.Scada == "Y")
                                {
                                    if (Model.FieldsToDisplay.Contains("FLISR"))
                                    {<tr>
                                    <td>@Html.LabelForRequired(model => model.FlisrDevice)
                                    </td>
                                    @if (Model.FlisrDevice != null && Model.FlisrDevice != "")
                                    {
                                        <td>@Html.DropDownListFor(model => model.FlisrDevice, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { @id = "FlisrDeviceDropDown" })
                                        </td>
                                    }
                                    else
                                    {
                                        <td>@Html.DropDownListFor(model => model.FlisrDevice, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { @id = "FlisrDeviceDropDown" })@Html.ValidationMessageFor(model => model.FlisrDevice)
                                        </td>
                                    }
                                    </tr>}
                                }
                                else
                                {
                                    if (Model.FieldsToDisplay.Contains("FLISR"))
                                    {<tr>
                            <td>@Html.LabelForRequired(model => model.FlisrDevice)
                            </td>
                            @if (Model.FlisrDevice != null && Model.FlisrDevice != "")
                            {
                                <td>@Html.DropDownListFor(model => model.FlisrDevice, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), (object)new { disabled = "disabled", @id = "FlisrDeviceDropDown" })
                                </td>
                            }
                            else
                            {
                                <td>@Html.DropDownListFor(model => model.FlisrDevice, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), (object)new { disabled = "disabled", @id = "FlisrDeviceDropDown" })@Html.ValidationMessageFor(model => model.FlisrDevice)
                                </td>
                            }
                        </tr>}
                                }

                                @if (Model.FieldsToDisplay.Contains("SUMMER_LOAD_LIMIT"))
                                {<tr>
                                    <td>@Html.LabelForRequired(model => model.SummerLoadLimit)
                                    </td>
                                    <td>@Html.TextBoxFor(model => model.SummerLoadLimit, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.SummerLoadLimit)
                                    </td>
                                </tr>}
                                @if (Model.FieldsToDisplay.Contains("WINTER_LOAD_LIMIT"))
                                {<tr>
                                    <td>@Html.LabelForRequired(model => model.WinterLoadLimit)
                                    </td>
                                    <td>@Html.TextBoxFor(model => model.WinterLoadLimit, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.WinterLoadLimit)
                                    </td>
                                </tr>}
                                @if (Model.FieldsToDisplay.Contains("LIMITING_FACTOR"))
                                {<tr>
                                    <td>@Html.LabelForRequired(model => model.LimitingFactor)
                                    </td>
                                    <td>@Html.TextBoxFor(model => model.LimitingFactor, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 250 })@Html.ValidationMessageFor(model => model.LimitingFactor)
                                    </td>
                                </tr>}
                                @if (Model.FieldsToDisplay.Contains("FLISR_ENGINEERING_COMMENTS"))
                                {<tr>
                                    <td>@Html.LabelForRequired(model => model.FlisrEngineeringComments)
                                    </td>
                                    <td>@Html.TextAreaFor(model => model.FlisrEngineeringComments, 5, 15, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 250 })@Html.ValidationMessageFor(model => model.FlisrEngineeringComments)
                                    </td>
                                </tr>}
@*@if (Model.FieldsToDisplay.Contains("FLISR_OPERATING_MODE"))
                                {<tr>
                                    <td>@Html.LabelForRequired(model => model.OperatingMode)
                                    </td>
                                    <td>@Html.TextBoxFor(model => model.OperatingMode, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 4 })@Html.ValidationMessageFor(model => model.OperatingMode)
                                    </td>
                                </tr>}*@
                            </table>
                        </td>
                    </tr>
                    <!------------------ Normal ------------------>
                    @if (Model.ControllerUnitType != "BECK" || (Model.ControllerUnitType == "BECK" && (Model.ActiveProfile == "R1" || Model.ActiveProfile == "R2" || Model.ActiveProfile == "R3" || Model.ActiveProfile == "SW" || Model.ActiveProfile == "SEC")))
                    {
                        <tr valign="top">
                        <td colspan="2" style="padding-left: 10px; padding-right: 10px; width: 100%">
                            <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%"
                                class="multicolumn100">
                                <tr>
                                    
                                      @if (Model.ControllerUnitType == "BECK")
                                      {
                                          if (Model.ActiveProfile == "R1")
                                          {
                                              <td colspan="2" class="sectionHeader">
                                                 Recloser Mode 1
                                              </td>
                                          }
                                          else if (Model.ActiveProfile == "R2")
                                          {
                                              <td colspan="2" class="sectionHeader">
                                                 Recloser Mode 2
                                              </td>
                                          }
                                          else if (Model.ActiveProfile == "R3")
                                          {
                                              <td colspan="2" class="sectionHeader">
                                                 Recloser Mode 3
                                              </td>
                                          }
                                          else if (Model.ActiveProfile == "SW")
                                          {
                                              <td colspan="2" class="sectionHeader">
                                                 Switch Mode
                                              </td>
                                          }
                                          else if (Model.ActiveProfile == "SEC")
                                          {
                                              <td colspan="2" class="sectionHeader">
                                                 Sectionalizer Mode
                                              </td>
                                          }
                                      }
                                      else
                                      {
                                              <td colspan="2" class="sectionHeader">
                                                Normal
                                              </td>
                                      }
                                </tr>
                                <tr valign="top">
                                    <td>
                                        <table style="width: 100% !important">
                                            <tr>
                                                <td>
                                                    <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                            <tr>
                                                
                                                @*ME Q2 2020 -- START*@
                                                @if (Model.ControllerUnitType == "BECK" && Model.ActiveProfile == "SW")
                                                {
                                                      <td colspan="4" class="sectionHeader">
                                                    PHASE
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td align="center" colspan="2" class="sectionHeader">
                                                    PHASE
                                                    </td>
                                                    <td align="center" colspan="2" class="sectionHeader">
                                                     GROUND
                                                     </td>
                                                }  
                                                @*ME Q2 2020 -- END  *@                                           
                                            </tr>
                                            @if (Model.FieldsToDisplay.Contains("PHA_MIN_TRIP") || Model.FieldsToDisplay.Contains("GRD_MIN_TRIP"))
                                            {
                                                <tr>
                                                @if (Model.FieldsToDisplay.Contains("PHA_MIN_TRIP"))
                                                {<td>@Html.LabelForRequired(model => model.PhaMinTrip)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.PhaMinTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaMinTrip)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("GRD_MIN_TRIP"))
                                                {<td>@Html.LabelForRequired(model => model.GrdMinTrip)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.GrdMinTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdMinTrip)
                                                    </td>
                                                }
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            }
                                            @if (Model.FieldsToDisplay.Contains("PHA_INST_TRIP_CD") || Model.FieldsToDisplay.Contains("GRD_INST_TRIP_CD"))
                                            {
                                                <tr>
                                                @if (Model.FieldsToDisplay.Contains("PHA_INST_TRIP_CD"))
                                                {<td>@Html.LabelForRequired(model => model.PhaInstTrip)
                                                </td>
                                                   @* <td>@Html.DropDownListFor(model => model.PhaInstTrip, Model.PhaInstTripList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaInstTrip)
                                                    </td>*@
                                                     <td>@Html.TextBoxFor(model => model.PhaInstTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaInstTrip)
                                                    </td>
                                                }
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("GRD_INST_TRIP_CD"))
                                                {<td>@Html.LabelForRequired(model => model.GrdInstTrip)
                                                </td>
                                                    @*<td>@Html.DropDownListFor(model => model.GrdInstTrip, Model.GrdInstTripList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdInstTrip)
                                                    </td>*@
                                                    <td>@Html.TextBoxFor(model => model.GrdInstTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdInstTrip)
                                                    </td>
                                                }
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            }
                                                
                                            @if (Model.FieldsToDisplay.Contains("DEF_TIME_PHA") || Model.FieldsToDisplay.Contains("DEF_TIME_GROUND"))
                                            {
                                                <tr>
                                                @if (Model.FieldsToDisplay.Contains("DEF_TIME_PHA"))
                                                {<td>@Html.LabelForRequired(model => model.PhaDefiniteTime)
                                                </td>
                                                     <td>@Html.TextBoxFor(model => model.PhaDefiniteTime, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaDefiniteTime)
                                                    </td>
                                                }
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("DEF_TIME_GROUND"))
                                                {<td>@Html.LabelForRequired(model => model.GrdDefiniteTime)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.GrdDefiniteTime, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdDefiniteTime)
                                                    </td>
                                                }
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            }
                                            @if (Model.ControllerUnitType != "BECK" || (Model.ControllerUnitType == "BECK" && Model.ActiveProfile != "SEC"))
                                            {
                                                if (Model.FieldsToDisplay.Contains("TCC1_FAST_CURVES_USED"))
                                                {
                                                 <tr>
                                                @if (Model.FieldsToDisplay.Contains("TCC1_FAST_CURVES_USED"))
                                                {<td>@Html.LabelForRequired(model => model.Tcc1FastCurvesUsed)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.Tcc1FastCurvesUsed, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Tcc1FastCurvesUsed)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                <td>
                                                </td>
                                                <td>
                                                </td>
                                            </tr>
                                                }
                                                if (Model.FieldsToDisplay.Contains("PHA_OP_F_CRV") || Model.FieldsToDisplay.Contains("GRD_OP_F_CRV"))
                                                {
                                                    <tr>
                                                @if (Model.FieldsToDisplay.Contains("PHA_OP_F_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.PhaFastCurveOps)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.PhaFastCurveOps, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaFastCurveOps)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("GRD_OP_F_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.GrdOpFastCurveOps)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.GrdOpFastCurveOps, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdOpFastCurveOps)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                                }
                                                if (Model.FieldsToDisplay.Contains("PHA_FAST_CRV") || Model.FieldsToDisplay.Contains("GRD_FAST_CRV"))
                                                {
                                                    <tr>
                                                @if (Model.FieldsToDisplay.Contains("PHA_FAST_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.PhaFastCurve)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.PhaFastCurve, Model.PhaFastCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaFastCurve)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("GRD_FAST_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.GrdFastCurve)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.GrdFastCurve, Model.GrdFastCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdFastCurve)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                                }
                                                if (Model.FieldsToDisplay.Contains("PHA_TMUL_FAST") || Model.FieldsToDisplay.Contains("GRD_TMUL_FAST"))
                                                {
                                                    <tr>
                                                @if (Model.FieldsToDisplay.Contains("PHA_TMUL_FAST"))
                                                {<td>@Html.LabelForRequired(model => model.PhaTmulFast)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.PhaTmulFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaTmulFast)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("GRD_TMUL_FAST"))
                                                {<td>@Html.LabelForRequired(model => model.GrdTmulFast)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.GrdTmulFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdTmulFast)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                                }
                                                if (Model.FieldsToDisplay.Contains("PHA_TADD_FAST") || Model.FieldsToDisplay.Contains("GRD_TADD_FAST"))
                                                {
                                                    <tr>
                                                @if (Model.FieldsToDisplay.Contains("PHA_TADD_FAST"))
                                                {<td>@Html.LabelForRequired(model => model.PhaTaddFast)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.PhaTaddFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaTaddFast)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("GRD_TADD_FAST"))
                                                {<td>@Html.LabelForRequired(model => model.GrdTaddFast)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.GrdTaddFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdTaddFast)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                                }
                                                if (Model.FieldsToDisplay.Contains("TCC2_SLOW_CURVES_USED"))
                                                {
                                                    <tr>
                                                @if (Model.FieldsToDisplay.Contains("TCC2_SLOW_CURVES_USED"))
                                                {<td>@Html.LabelForRequired(model => model.Tcc2SlowCurvesUsed)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.Tcc2SlowCurvesUsed, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Tcc2SlowCurvesUsed)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                <td>
                                                </td>
                                                <td>
                                                </td>
                                            </tr>
                                                }
                                                if (Model.FieldsToDisplay.Contains("PHA_SLOW_CRV_OPS") || Model.FieldsToDisplay.Contains("GRD_SLOW_CRV_OPS"))
                                                {
                                                    <tr>
                                                @if (Model.FieldsToDisplay.Contains("PHA_SLOW_CRV_OPS"))
                                                {<td>@Html.LabelForRequired(model => model.PhaSlowCurveOps)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.PhaSlowCurveOps, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaSlowCurveOps)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("GRD_SLOW_CRV_OPS"))
                                                {<td>@Html.LabelForRequired(model => model.GrdSlowCurveOps)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.GrdSlowCurveOps, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdSlowCurveOps)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                                }
                                                if (Model.FieldsToDisplay.Contains("PHA_SLOW_CRV") || Model.FieldsToDisplay.Contains("GRD_SLOW_CRV"))
                                                {
                                                    <tr>
                                                @if (Model.FieldsToDisplay.Contains("PHA_SLOW_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.PhaSlowCurve)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.PhaSlowCurve, Model.PhaSlowCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaSlowCurve)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("GRD_SLOW_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.GrdSlowCurve)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.GrdSlowCurve, Model.GrdSlowCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdSlowCurve)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                                }
                                                if (Model.FieldsToDisplay.Contains("PHA_TMUL_SLOW") || Model.FieldsToDisplay.Contains("GRD_TMUL_SLOW"))
                                                {
                                                     <tr>
                                                @if (Model.FieldsToDisplay.Contains("PHA_TMUL_SLOW"))
                                                {<td>@Html.LabelForRequired(model => model.PhaTmulSlow)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.PhaTmulSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaTmulSlow)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("GRD_TMUL_SLOW"))
                                                {<td>@Html.LabelForRequired(model => model.GrdTmulSlow)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.GrdTmulSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdTmulSlow)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                                }
                                                if (Model.FieldsToDisplay.Contains("PHA_TADD_SLOW") || Model.FieldsToDisplay.Contains("GRD_TADD_SLOW"))
                                                {
                                                    <tr>
                                                @if (Model.FieldsToDisplay.Contains("PHA_TADD_SLOW"))
                                                {<td>@Html.LabelForRequired(model => model.PhaTaddSlow)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.PhaTaddSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaTaddSlow)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("GRD_TADD_SLOW"))
                                                {<td>@Html.LabelForRequired(model => model.GrdTaddSlow)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.GrdTaddSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdTaddSlow)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                                }
                                                if (Model.FieldsToDisplay.Contains("MIN_RESP_TADDR_PHA") || Model.FieldsToDisplay.Contains("MIN_RESP_TADDR_GRO"))
                                                {
                                                    <tr>
                                                @if (Model.FieldsToDisplay.Contains("MIN_RESP_TADDR_PHA"))
                                                {<td>@Html.LabelForRequired(model => model.PhaMinResponseTAddr)
                                                </td>
                                                     <td>@Html.TextBoxFor(model => model.PhaMinResponseTAddr, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaMinResponseTAddr)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("MIN_RESP_TADDR_GRO"))
                                                {<td>@Html.LabelForRequired(model => model.GrdMinResponseTAddr)
                                                </td>
                                                     <td>@Html.TextBoxFor(model => model.GrdMinResponseTAddr, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdMinResponseTAddr)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                                }
                                            }
                                                     @if (Model.FieldsToDisplay.Contains("PHA_RESP_TIME") || Model.FieldsToDisplay.Contains("GRD_RESP_TIME"))
                                                     {
                                                        <tr>
                                                @if (Model.FieldsToDisplay.Contains("PHA_RESP_TIME"))
                                                {<td>@Html.LabelForRequired(model => model.PhaResponseTime)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.PhaResponseTime, Model.PhaResponseTimeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaResponseTime)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("GRD_RESP_TIME"))
                                                {<td>@Html.LabelForRequired(model => model.GrdResponseTime)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.GrdResponseTime, Model.GrdResponseTimeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdResponseTime)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                                     }
                                                    @if (Model.FieldsToDisplay.Contains("PHA_LOCKOUT_OPS") || Model.FieldsToDisplay.Contains("GRD_LOCKOUT_OPS"))
                                                    {
                                                        <tr>
                                                @if (Model.FieldsToDisplay.Contains("PHA_LOCKOUT_OPS"))
                                                {<td>@Html.LabelForRequired(model => model.PhaOpsToLockout)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.PhaOpsToLockout, Model.PhaOpsToLockoutList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaOpsToLockout)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("GRD_LOCKOUT_OPS"))
                                                {<td>@Html.LabelForRequired(model => model.GrdOpsToLockout)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.GrdOpsToLockout, Model.GrdOpsToLockoutList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdOpsToLockout)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                                    }
                                                </table>
                                              </td>
                                            </tr>
                                            @if (Model.FieldsToDisplay.Contains("HLT_ENAB") || Model.FieldsToDisplay.Contains("PHASE") || Model.FieldsToDisplay.Contains("GROUND"))
                                            {
                                                <tr>
                                                    <td>
                                                    <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000">
                                                        @if (Model.FieldsToDisplay.Contains("HLT_ENAB"))
                                                        {<tr>
                                                           <td class="lable">
                                                                <label>
                                                                    HLT Enabled</label>
                                                            </td>
                                                            <td>@Html.CheckBoxFor(model => model.HLTEnabled, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("PHASE"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Phase)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.Phase, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Phase)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("GROUND"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Ground)
                                                            </td>
                                                             <td>@Html.TextBoxFor(model => model.Ground, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Ground)
                                                            </td>
                                                        </tr>}
                                                    </table>
                                                </td>
                                            </tr>
                                            }
                                            
                                            @if (Model.ControllerUnitType == "BECK" && Model.ActiveProfile == "SEC")
                                            {
                                                <tr>
                                                    <td>
                                                        <table cellpadding="0" cellspacing="0">
                                                            <td>
                                                        <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000">
                                                            <tr>
                                                                <td colspan="3">
                                                                    <label style="text-align: left !important">Trigger</label>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td colspan="3">
                                                                    <table class="radiowidth_20px" >
                                                                        <tr>
                                                                            <td style="text-align: left">@Html.RadioButtonFor(model => model.FaultCurrentOnly, "Y", ViewBag.IsDisabled ? (object)new { disabled = "disabled", id = "FaultCurOnlyRadio" } : new { onchange = "OnTriggerChange(this);", id = "FaultCurOnlyRadio" })Fault Current Only</td>
                                                                        </tr>
                                                                        <tr>
                                                                            <td style="text-align: left">@Html.RadioButtonFor(model => model.VoltageLossOnly, "Y", ViewBag.IsDisabled ? (object)new { disabled = "disabled", id = "VoltLossOnlyRadio" } : new { onchange = "OnTriggerChange(this);", id = "VoltLossOnlyRadio" })Voltage Loss Only</td>
                                                                        </tr>
                                                                        <tr>
                                                                            <td style="text-align: left">@Html.RadioButtonFor(model => model.FaultCurVoltLoss, "Y", ViewBag.IsDisabled ? (object)new { disabled = "disabled", id = "FaultCurVoltLossRadio" } : new { onchange = "OnTriggerChange(this);", id = "FaultCurVoltLossRadio" })Fault Current with Voltage Loss (Voltage Restraint)</td>
                                                                        </tr>
                                                                    </table>
                                                                </td>
                                                            </tr>
                                                        @if (Model.FieldsToDisplay.Contains("VOLT_LOSS_DISP"))
                                                        {<tr>
                                                           <td style="width: 150px !important">@Html.LabelForRequired(model => model.VoltLossDelay)
                                                            </td>
                                                            <td style="width: 100px !important">
                                                                @Html.TextBoxFor(model => model.VoltLossDelay, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.VoltLossDelay)
                                                            </td>
                                                            <td>
                                                                <label style="text-align: left !important">s</label>
                                                            </td>
                                                        </tr>}
                                                    </table>
                                                     </td>
                                                            <td>
                                                         <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000">
                                                            @if (Model.FieldsToDisplay.Contains("ENA_SWIT_MOD"))
                                                            {
                                                                <tr>
                                                                    <td colspan="2">
                                                                        <table>
                                                                            <tr>
                                                                                <td>@Html.CheckBoxFor(model => model.EnabSwitchMode, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })
                                                                                </td> 
                                                                                <td class="lable">
                                                                                    <label>Enable Switch Mode (One Shot Sectionalizing)</label>
                                                                                </td>
                                                                            </tr>
                                                                        </table>
                                                                    </td>
                                                                </tr>
                                                            }
                                                            @if (Model.FieldsToDisplay.Contains("COUT_T_TRIP_VOLT_LOSS"))
                                                            {
                                                                <tr>
                                                                    <td colspan="2">
                                                                        <table>
                                                                            <tr>
                                                                                 <td>@Html.LabelForRequired(model => model.CountToTripVolt)
                                                                                 </td>
                                                                                 <td>@Html.DropDownListFor(model => model.CountToTripVolt, Model.CountToTripVoltList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.CountToTripVolt)
                                                                                 </td>
                                                                            </tr>
                                                                        </table>
                                                                    </td>
                                                                </tr>
                                                            }
                                                                 @if (Model.FieldsToDisplay.Contains("RESET_TIMERR"))
                                                                 {
                                                                    <tr>
                                                                        <td colspan="2">
                                                                            <table>
                                                                                <tr>
                                                                                     <td style="width: 150px !important">@Html.LabelForRequired(model => model.ResetTimerSecMode)
                                                                                     </td>
                                                                                     <td>@Html.TextBoxFor(model => model.ResetTimerSecMode, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ResetTimerSecMode)
                                                                                     </td>
                                                                                </tr>
                                                                            </table>
                                                                        </td>
                                                                    </tr>
                                                                 }
                                                        </table>
                                                    </td>
                                                        </table>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100% !important">
                                                        @if (Model.FieldsToDisplay.Contains("SEQ_COORDI_MODE"))
                                                        {
                                                            <tr>
                                                                <td colspan="2">
                                                                    <label style="text-align: left !important">Sequence Coordination Mode - "Blink Save"</label>
                                                                </td>
                                                            </tr>
                                                                
                                                            <tr>
                                                                <td style="width:15px !important; text-align: right !important">@Html.CheckBoxFor(model => model.SeqCoordMode, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })
                                                                </td> 
                                                                <td class="lable">
                                                                    <label style="text-align: left !important">Enabled</label>
                                                                </td>
                                                            </tr>
                                                            }
                                                            <tr>
                                                                <td colspan="2">
                                                                    <table cellpadding="0" cellspacing="0" style="width: 100% !important">
                                                                 @if (Model.FieldsToDisplay.Contains("TCC1_FAST_CURVES_USED"))
                                                                {
                                                                    <tr>
                                                                        @if (Model.FieldsToDisplay.Contains("TCC1_FAST_CURVES_USED"))
                                                                        {<td>@Html.LabelForRequired(model => model.Tcc1FastCurvesUsed)
                                                                        </td>
                                                                            <td>@Html.DropDownListFor(model => model.Tcc1FastCurvesUsed, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Tcc1FastCurvesUsed)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                        <td>
                                                                        </td>
                                                                        <td>
                                                                        </td>
                                                                    </tr>
                                                                }
                                                                @if (Model.FieldsToDisplay.Contains("PHA_FAST_CRV") || Model.FieldsToDisplay.Contains("GRD_FAST_CRV"))
                                                                {
                                                                    <tr>
                                                                        @if (Model.FieldsToDisplay.Contains("PHA_FAST_CRV"))
                                                                        {<td>@Html.LabelForRequired(model => model.PhaFastCurve)
                                                                        </td>
                                                                            <td>@Html.DropDownListFor(model => model.PhaFastCurve, Model.PhaFastCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaFastCurve)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                        @if (Model.FieldsToDisplay.Contains("GRD_FAST_CRV"))
                                                                        {<td>@Html.LabelForRequired(model => model.GrdFastCurve)
                                                                        </td>
                                                                            <td>@Html.DropDownListFor(model => model.GrdFastCurve, Model.GrdFastCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdFastCurve)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                    </tr>
                                                                }
                                                                @if (Model.FieldsToDisplay.Contains("PHA_TMUL_FAST") || Model.FieldsToDisplay.Contains("GRD_TMUL_FAST"))
                                                                {
                                                                    <tr>
                                                                        @if (Model.FieldsToDisplay.Contains("PHA_TMUL_FAST"))
                                                                        {<td>@Html.LabelForRequired(model => model.PhaTmulFast)
                                                                        </td>
                                                                            <td>@Html.TextBoxFor(model => model.PhaTmulFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaTmulFast)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                        @if (Model.FieldsToDisplay.Contains("GRD_TMUL_FAST"))
                                                                        {<td>@Html.LabelForRequired(model => model.GrdTmulFast)
                                                                        </td>
                                                                            <td>@Html.TextBoxFor(model => model.GrdTmulFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdTmulFast)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                    </tr>
                                                                }
                                                                @if (Model.FieldsToDisplay.Contains("PHA_TADD_FAST") || Model.FieldsToDisplay.Contains("GRD_TADD_FAST"))
                                                                {
                                                                    <tr>
                                                                        @if (Model.FieldsToDisplay.Contains("PHA_TADD_FAST"))
                                                                        {<td>@Html.LabelForRequired(model => model.PhaTaddFast)
                                                                        </td>
                                                                            <td>@Html.TextBoxFor(model => model.PhaTaddFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaTaddFast)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                        @if (Model.FieldsToDisplay.Contains("GRD_TADD_FAST"))
                                                                        {<td>@Html.LabelForRequired(model => model.GrdTaddFast)
                                                                        </td>
                                                                            <td>@Html.TextBoxFor(model => model.GrdTaddFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdTaddFast)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                    </tr>
                                                                }
                                                                @if (Model.FieldsToDisplay.Contains("TCC2_SLOW_CURVES_USED"))
                                                                {
                                                                    <tr>
                                                                        @if (Model.FieldsToDisplay.Contains("TCC2_SLOW_CURVES_USED"))
                                                                        {<td>@Html.LabelForRequired(model => model.Tcc2SlowCurvesUsed)
                                                                        </td>
                                                                            <td>@Html.DropDownListFor(model => model.Tcc2SlowCurvesUsed, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Tcc2SlowCurvesUsed)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                        <td>
                                                                        </td>
                                                                        <td>
                                                                        </td>
                                                                    </tr>
                                                                }
                                                                @if (Model.FieldsToDisplay.Contains("PHA_SLOW_CRV") || Model.FieldsToDisplay.Contains("GRD_SLOW_CRV"))
                                                                {
                                                                    <tr>
                                                                        @if (Model.FieldsToDisplay.Contains("PHA_SLOW_CRV"))
                                                                        {<td>@Html.LabelForRequired(model => model.PhaSlowCurve)
                                                                        </td>
                                                                            <td>@Html.DropDownListFor(model => model.PhaSlowCurve, Model.PhaSlowCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaSlowCurve)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                        @if (Model.FieldsToDisplay.Contains("GRD_SLOW_CRV"))
                                                                        {<td>@Html.LabelForRequired(model => model.GrdSlowCurve)
                                                                        </td>
                                                                            <td>@Html.DropDownListFor(model => model.GrdSlowCurve, Model.GrdSlowCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdSlowCurve)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                    </tr>
                                                                }
                                                                @if (Model.FieldsToDisplay.Contains("PHA_TMUL_SLOW") || Model.FieldsToDisplay.Contains("GRD_TMUL_SLOW"))
                                                                {
                                                                    <tr>
                                                                        @if (Model.FieldsToDisplay.Contains("PHA_TMUL_SLOW"))
                                                                        {<td>@Html.LabelForRequired(model => model.PhaTmulSlow)
                                                                        </td>
                                                                            <td>@Html.TextBoxFor(model => model.PhaTmulSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaTmulSlow)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                        @if (Model.FieldsToDisplay.Contains("GRD_TMUL_SLOW"))
                                                                        {<td>@Html.LabelForRequired(model => model.GrdTmulSlow)
                                                                        </td>
                                                                            <td>@Html.TextBoxFor(model => model.GrdTmulSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdTmulSlow)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                    </tr>
                                                                }
                                                                @if (Model.FieldsToDisplay.Contains("PHA_TADD_SLOW") || Model.FieldsToDisplay.Contains("GRD_TADD_SLOW"))
                                                                {
                                                                    <tr>
                                                                        @if (Model.FieldsToDisplay.Contains("PHA_TADD_SLOW"))
                                                                        {<td>@Html.LabelForRequired(model => model.PhaTaddSlow)
                                                                        </td>
                                                                            <td>@Html.TextBoxFor(model => model.PhaTaddSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaTaddSlow)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                        @if (Model.FieldsToDisplay.Contains("GRD_TADD_SLOW"))
                                                                        {<td>@Html.LabelForRequired(model => model.GrdTaddSlow)
                                                                        </td>
                                                                            <td>@Html.TextBoxFor(model => model.GrdTaddSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdTaddSlow)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                    </tr>
                                                                }
                                                                @if (Model.FieldsToDisplay.Contains("MIN_RESP_TADDR_PHA") || Model.FieldsToDisplay.Contains("MIN_RESP_TADDR_GRO"))
                                                                {
                                                                    <tr>
                                                                        @if (Model.FieldsToDisplay.Contains("MIN_RESP_TADDR_PHA"))
                                                                        {<td>@Html.LabelForRequired(model => model.PhaMinResponseTAddr)
                                                                        </td>
                                                                             <td>@Html.TextBoxFor(model => model.PhaMinResponseTAddr, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaMinResponseTAddr)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                        @if (Model.FieldsToDisplay.Contains("MIN_RESP_TADDR_GRO"))
                                                                        {<td>@Html.LabelForRequired(model => model.GrdMinResponseTAddr)
                                                                        </td>
                                                                             <td>@Html.TextBoxFor(model => model.GrdMinResponseTAddr, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdMinResponseTAddr)
                                                                            </td>}
                                                                        else
                                                                        { <td>
                                                                        </td>
                                                                            <td>
                                                                            </td>}
                                                                    </tr>
                                                                }
                                                                </table>
                                                              </td>
                                                            </tr>
                                                        </table>
                                                    </td>
                                                </tr>
                                            }

                                        </table>
                                    </td>
                                    <td>
                                        <table>
                                          @if (Model.ControllerUnitType == "BECK" && (Model.ActiveProfile == "R1" || Model.ActiveProfile == "R2" || Model.ActiveProfile == "R3"))
                                          {
                                              <tr>
                                                <td>
                                                    <table cellpadding="0" cellspacing="0" style="width: 100%">
                                                         <tr>
                                                             <td style="width: 50% !important"></td>
                                                             <td style="width: 25% !important; text-align: center !important"><label style="text-align:center !important">Phase</label></td>
                                                             <td style="width: 25% !important; text-align: center !important"><label style="text-align:center !important">Ground</label></td>
                                                         </tr>
                                                   </table>
                                                     <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%; margin-top: 0px !important">
                                                         <tr class="text_width_50px">
                                                           @if (Model.FieldsToDisplay.Contains("OPT_LOCK_PHA") || Model.FieldsToDisplay.Contains("OPT_LOCK_GRO"))
                                                           {
                                                               <td style="width: 50% !important">@Html.LabelForRequired(model => model.PhaOpsToLock)
                                                               </td>
                                                           }
                                                           else
                                                           { <td></td>}
                                                              @if (Model.FieldsToDisplay.Contains("OPT_LOCK_PHA"))
                                                              {
                                                               <td>@Html.TextBoxFor(model => model.PhaOpsToLock, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaOpsToLock)
                                                               </td>
                                                              }
                                                              else
                                                              { <td></td>}
                                                            @if (Model.FieldsToDisplay.Contains("OPT_LOCK_GRO"))
                                                            {
                                                               <td>@Html.TextBoxFor(model => model.GrdOpsToLock, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdOpsToLock)
                                                               </td>
                                                            }
                                                            else
                                                            { <td></td>}
                                                         </tr>
                                                         <tr class="text_width_50px">
                                                           @if (Model.FieldsToDisplay.Contains("FIRST_RECLO_PHA") || Model.FieldsToDisplay.Contains("FIRST_RECLO_GRO"))
                                                           {
                                                               <td>@Html.LabelForRequired(model => model.PhaFirstRec)
                                                               </td>
                                                           }
                                                           else
                                                           { <td></td>}
                                                              @if (Model.FieldsToDisplay.Contains("FIRST_RECLO_PHA"))
                                                              {
                                                               <td>@Html.TextBoxFor(model => model.PhaFirstRec, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaFirstRec)
                                                               </td>
                                                              }
                                                              else
                                                              { <td></td>}
                                                            @if (Model.FieldsToDisplay.Contains("FIRST_RECLO_GRO"))
                                                            {
                                                               <td>@Html.TextBoxFor(model => model.GrdFirstRec, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdFirstRec)
                                                               </td>
                                                            }
                                                            else
                                                            { <td></td>}
                                                         </tr>
                                                         <tr class="text_width_50px">
                                                             @if (Model.FieldsToDisplay.Contains("SEC_RECLO_PHA") || Model.FieldsToDisplay.Contains("SEC_RECLO_GRO"))
                                                             {
                                                               <td>@Html.LabelForRequired(model => model.PhaSecondRec)
                                                               </td>
                                                             }
                                                             else
                                                             { <td></td>}
                                                              @if (Model.FieldsToDisplay.Contains("SEC_RECLO_PHA"))
                                                              {
                                                               <td>@Html.TextBoxFor(model => model.PhaSecondRec, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaSecondRec)
                                                               </td>
                                                              }
                                                              else
                                                              { <td></td>}
                                                            @if (Model.FieldsToDisplay.Contains("SEC_RECLO_GRO"))
                                                            {
                                                               <td>@Html.TextBoxFor(model => model.GrdSecondRec, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdSecondRec)
                                                               </td>
                                                            }
                                                            else
                                                            { <td></td>}
                                                         </tr>
                                                         <tr class="text_width_50px">
                                                            @if (Model.FieldsToDisplay.Contains("THIRD_RECLO_PHA") || Model.FieldsToDisplay.Contains("THIRD_RECLO_GRO"))
                                                            {
                                                               <td>@Html.LabelForRequired(model => model.PhaThirdRec)
                                                               </td>
                                                            }
                                                            else
                                                            { <td></td>}
                                                              @if (Model.FieldsToDisplay.Contains("THIRD_RECLO_PHA"))
                                                              {
                                                               <td>@Html.TextBoxFor(model => model.PhaThirdRec, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaThirdRec)
                                                               </td>
                                                              }
                                                              else
                                                              { <td></td>}
                                                            @if (Model.FieldsToDisplay.Contains("THIRD_RECLO_GRO"))
                                                            {
                                                               <td>@Html.TextBoxFor(model => model.GrdThirdRec, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdThirdRec)
                                                               </td>
                                                            }
                                                            else
                                                            { <td></td>}
                                                         </tr>
                                                         <tr class="text_width_50px">
                                                             @if (Model.FieldsToDisplay.Contains("RESET_TIME"))
                                                             {
                                                               <td>@Html.LabelForRequired(model => model.ResetTimeBeck)
                                                               </td>
                                                               <td>@Html.TextBoxFor(model => model.ResetTimeBeck, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ResetTimeBeck)
                                                               </td>
                                                               <td></td>
                                                             }
                                                             else
                                                             {
                                                                 <td></td>
                                                                 <td></td>
                                                                 <td></td>
                                                             }
                                                         </tr>
                                                         <tr class="text_width_80px">
                                                             @if (Model.FieldsToDisplay.Contains("RESET_TIME_LOCK"))
                                                             {
                                                                 <td colspan="3" style="padding: 0px !important">
                                                                    <table cellpadding="0" cellspacing="0" style="width: 100%; margin: 0px !important">
                                                                        <tr>
                                                                            <td>@Html.LabelForRequired(model => model.ResetTimeFrmLock)
                                                                            </td>
                                                                           <td>@Html.TextBoxFor(model => model.ResetTimeFrmLock, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ResetTimeFrmLock)
                                                                           </td>
                                                                        </tr>
                                                                    </table>
                                                                 </td>
                                                             }
                                                             else
                                                             {
                                                                 <td colspan="3"></td>
                                                             }
                                                         </tr>
                                                     </table>
                                                </td>
                                              </tr>
                                              <tr>
                                                <td>
                                                   @if (ViewBag.PageMode == "FUTURE")
                                                   {
                                                        <table id="table_Normal" cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("SGF_CD"))
                                                        {
                                                            <tr>
                                                            <td>@Html.LabelForRequired(model => model.SgfCd)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.SgfCd, Model.SgfCdList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { @id = "SFGNRMAL" })@Html.ValidationMessageFor(model => model.SgfCd)
                                                           @*<td>@Html.DropDownListFor(model => model.SgfCd, Model.SgfCdList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { onchange = Model.DropDownPostbackScript })@Html.ValidationMessageFor(model => model.SgfCd)*@
                                                            </td>
                                                        </tr>
                                                        }
                                                          
                                                       @* @if (Model.SgfCd != null && Model.SgfCd.ToUpper() == "ON")
                                                        {
*@
                                                            @if (Model.FieldsToDisplay.Contains("SGF_MIN_TRIP_PERCENT"))
                                                            {<tr id="NormalTripAmp">
                                                                @if (Model.ControllerUnitType != "6")
                                                                {
                                                                    <td>@Html.LabelForRequired(model => model.SgfMinTripPercent)
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td>
                                                                        <label>
                                                                            Min. Trip Amp :</label>
                                                                    </td>
                                                                }
                                                                <td>@Html.TextBoxFor(model => model.SgfMinTripPercent, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.SgfMinTripPercent)
                                                                </td>
                                                            </tr>}
                                                            @if (Model.FieldsToDisplay.Contains("SGF_TIME_DELAY"))
                                                            {<tr id="Normal_SGF_TIME_DELAY">
                                                                <td>@Html.LabelForRequired(model => model.SgfTimeDelay)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.SgfTimeDelay, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.SgfTimeDelay)
                                                                </td>
                                                            </tr>}
                                                            @if (Model.FieldsToDisplay.Contains("SGF_LOCKOUT"))
                                                            {<tr id="Normal_SGF_LOCKOUT">
                                                                <td>@Html.LabelForRequired(model => model.SgfLockout)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.SgfLockout, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.SgfLockout)
                                                                </td>
                                                            </tr>}

                                                       @* }
                                                        else
                                                        {
                                                        }*@
                                                   
                                                    </table>
                                                   }
                                                   else
                                                   {
                                                         <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("SGF_CD"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.SgfCd)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.SgfCd, Model.SgfCdList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { onchange = Model.DropDownPostbackScript })@Html.ValidationMessageFor(model => model.SgfCd)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.SgfCd != null && Model.SgfCd.ToUpper() == "ON")
                                                        {
                                                            if (Model.FieldsToDisplay.Contains("SGF_MIN_TRIP_PERCENT"))
                                                            {<tr>
                                                                @if (Model.ControllerUnitType != "6")
                                                                {
                                                                    <td>@Html.LabelForRequired(model => model.SgfMinTripPercent)
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td>
                                                                        <label>
                                                                            Min. Trip Amp :</label>
                                                                    </td>
                                                                }
                                                                <td>@Html.TextBoxFor(model => model.SgfMinTripPercent, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.SgfMinTripPercent)
                                                                </td>
                                                            </tr>}
                                                            if (Model.FieldsToDisplay.Contains("SGF_TIME_DELAY"))
                                                            {<tr>
                                                                <td>@Html.LabelForRequired(model => model.SgfTimeDelay)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.SgfTimeDelay, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.SgfTimeDelay)
                                                                </td>
                                                            </tr>}
                                                            if (Model.FieldsToDisplay.Contains("SGF_LOCKOUT"))
                                                            {<tr>
                                                                <td>@Html.LabelForRequired(model => model.SgfLockout)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.SgfLockout, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.SgfLockout)
                                                                </td>
                                                            </tr>}
                                                        }
                                                    </table>
                                                   }
                                                </td>
                                              </tr>
                                              <tr>
                                                <td>
                                                    <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%; margin-top: 0px !important">
                                                        <tr>
                                                            <td colspan="4"><label style="text-align:center !important">High current Lock out</label></td>
                                                        </tr>
                                                        <tr>
                                                            @if (Model.FieldsToDisplay.Contains("HIGH_CURRENT_LOCKOUT_PHA"))
                                                            {<td>@Html.LabelForRequired(model => model.HighCurrentLockoutPhase)
                                                            </td>
                                                               <td>@Html.DropDownListFor(model => model.HighCurrentLockoutPhase, Model.HighCurrentLockoutPhaseList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.HighCurrentLockoutPhase)
                                                            </td>}
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                            @if (Model.FieldsToDisplay.Contains("HIGH_CURRENT_LOCKUOUT_GRD"))
                                                            {<td>@Html.LabelForRequired(model => model.HighCurrentLockoutGround)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.HighCurrentLockoutGround, Model.HighCurrentLockoutGroundList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.HighCurrentLockoutGround)
                                                            </td>
                                                            }
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                        </tr>
                                                        <tr class="text_width_50px">
                                                            @if (Model.FieldsToDisplay.Contains("MTT_PHA"))
                                                            {<td>@Html.LabelForRequired(model => model.PhaMTTHighCurLock)
                                                            </td>
                                                               <td>@Html.TextBoxFor(model => model.PhaMTTHighCurLock, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaMTTHighCurLock)
                                                               </td>}
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                            @if (Model.FieldsToDisplay.Contains("MTT_GROU"))
                                                            {<td>@Html.LabelForRequired(model => model.GrdMTTHighCurLock)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.GrdMTTHighCurLock, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdMTTHighCurLock)
                                                               </td>
                                                            }
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                        </tr>
                                                         <tr class="text_width_50px">
                                                            @if (Model.FieldsToDisplay.Contains("TIME_DEL_PHA"))
                                                            {<td>@Html.LabelForRequired(model => model.PhaTimeDelay)
                                                            </td>
                                                               <td>@Html.TextBoxFor(model => model.PhaTimeDelay, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaTimeDelay)
                                                               </td>}
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                            @if (Model.FieldsToDisplay.Contains("TIME_DEL_GROU"))
                                                            {<td>@Html.LabelForRequired(model => model.GrdTimeDelay)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.GrdTimeDelay, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdTimeDelay)
                                                               </td>
                                                            }
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                        </tr>
                                                    </table>
                                                </td>
                                              </tr>
                                              <tr>
                                                <td>
                                                    <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%; margin-top: 0px !important">
                                                        <tr>
                                                            <td colspan="4"> <label style="text-align:center !important">Cold Load PU</label></td>
                                                        </tr>
                                                        <tr class="text_width_50px">
                                                            @if (Model.FieldsToDisplay.Contains("COLD_LOAD_PLI_PHA"))
                                                            {<td>@Html.LabelForRequired(model => model.ColdLoadPliPhase)
                                                            </td>
                                                               <td>@Html.TextBoxFor(model => model.ColdLoadPliPhase, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ColdLoadPliPhase)
                                                            </td>}
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                            @if (Model.FieldsToDisplay.Contains("COLD_LOAD_PLI_GRD"))
                                                            {<td>@Html.LabelForRequired(model => model.ColdLoadPliGround)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.ColdLoadPliGround, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ColdLoadPliGround)
                                                            </td>
                                                            }
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                        </tr>
                                                        <tr class="text_width_50px">
                                                            @if (Model.FieldsToDisplay.Contains("PU_MTT_PHA"))
                                                            {<td>@Html.LabelForRequired(model => model.PhaMTTPU)
                                                            </td>
                                                               <td>@Html.TextBoxFor(model => model.PhaMTTPU, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaMTTPU)
                                                               </td>}
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                            @if (Model.FieldsToDisplay.Contains("PU_MTT_GROU"))
                                                            {<td>@Html.LabelForRequired(model => model.GrdMTTPU)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.GrdMTTPU, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdMTTPU)
                                                               </td>
                                                            }
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                        </tr>
                                                         <tr class="select_width_50px">
                                                            @if (Model.FieldsToDisplay.Contains("PU_CURVE_PHA"))
                                                            {<td>@Html.LabelForRequired(model => model.PhaCurvePU)
                                                            </td>
                                                               <td>@Html.DropDownListFor(model => model.PhaCurvePU, Model.PhaCurveColdLoadPUList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaCurvePU)
                                                            </td>}
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                            @if (Model.FieldsToDisplay.Contains("PU_CURVE_GROU"))
                                                            {<td>@Html.LabelForRequired(model => model.GrdCurvePU)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.GrdCurvePU, Model.GrdCurveColdLoadPUList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdCurvePU)
                                                            </td>
                                                            }
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                        </tr>
                                                         <tr class="text_width_50px">
                                                            @if (Model.FieldsToDisplay.Contains("TADDR_PHA"))
                                                            {<td>@Html.LabelForRequired(model => model.PhaTAddr)
                                                            </td>
                                                               <td>@Html.TextBoxFor(model => model.PhaTAddr, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaTAddr)
                                                               </td>}
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                            @if (Model.FieldsToDisplay.Contains("TADDR_GROU"))
                                                            {<td>@Html.LabelForRequired(model => model.GrdTAddr)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.GrdTAddr, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdTAddr)
                                                               </td>
                                                            }
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                        </tr>
                                                        <tr class="text_width_50px">
                                                            @if (Model.FieldsToDisplay.Contains("MIN_RESP_TADDR_T_D_PHA"))
                                                            {<td style="width: 60px !important">@Html.LabelForRequired(model => model.PhaMinRespTAddrTime)
                                                            </td>
                                                               <td>@Html.TextBoxFor(model => model.PhaMinRespTAddrTime, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.PhaMinRespTAddrTime)
                                                               </td>}
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                            @if (Model.FieldsToDisplay.Contains("MIN_RESP_TADDR_T_D_GR"))
                                                            {<td style="width: 60px !important">@Html.LabelForRequired(model => model.GrdMinRespTAddrTime)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.GrdMinRespTAddrTime, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.GrdMinRespTAddrTime)
                                                               </td>
                                                            }
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                        </tr>
                                                      @*  ME Q2*@
                                                         <tr class="text_width_50px">
                                                            @if (Model.FieldsToDisplay.Contains("COLD_PHA_TMUL_FAST"))
                                                            {<td style="width: 60px !important">@Html.LabelForRequired(model => model.ColdPhaTmulFast)
                                                            </td>
                                                               <td>@Html.TextBoxFor(model => model.ColdPhaTmulFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ColdPhaTmulFast)
                                                               </td>}
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                            @if (Model.FieldsToDisplay.Contains("COLD_GRD_TMUL_FAST"))
                                                            {<td style="width: 60px !important">@Html.LabelForRequired(model => model.ColdGrdTmulFast)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.ColdGrdTmulFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ColdGrdTmulFast)
                                                               </td>
                                                            }
                                                            else
                                                            { <td>
                                                            </td>
                                                                <td>
                                                                </td>}
                                                        </tr>
                                                        <tr class="text_width_80px">
                                                             @if (Model.FieldsToDisplay.Contains("TIME_T_ACTI"))
                                                             {
                                                                 <td colspan="4" style="padding: 0px !important">
                                                                    <table cellpadding="0" cellspacing="0" style="width: 100%; margin: 0px !important">
                                                                        <tr>
                                                                            <td>@Html.LabelForRequired(model => model.TimeToActivate)
                                                                            </td>
                                                                           <td>@Html.TextBoxFor(model => model.TimeToActivate, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.TimeToActivate)
                                                                           </td>
                                                                        </tr>
                                                                    </table>
                                                                 </td>
                                                             }
                                                             else
                                                             {
                                                                 <td colspan="4"></td>
                                                             }
                                                         </tr>                                              
                                                    </table>
                                                </td>
                                              </tr>
                                          }
                                          else if (Model.ControllerUnitType != "BECK")
                                          {
                                            <tr>
                                                <td>
                                                    <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("TOT_LOCKOUT_OPS"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.TotOpsToLockout)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.TotOpsToLockout, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.TotOpsToLockout)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("RECLOSE1_TIME"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Reclose1Time)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.Reclose1Time, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Reclose1Time)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("RECLOSE2_TIME"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Reclose2Time)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.Reclose2Time, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Reclose2Time)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("RECLOSE3_TIME"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Reclose3Time)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.Reclose3Time, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Reclose3Time)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("RESET"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.ResetTime)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.ResetTime, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ResetTime)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("RECLOSE_RETRY_ENABLED"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.RecloseRetryEnabled)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.RecloseRetryEnabled, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.RecloseRetryEnabled)
                                                            </td>
                                                        </tr>}
                                                    </table>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                   @if (ViewBag.PageMode == "FUTURE")
                                                   {
                                                   <table id="table_Normal" cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("SGF_CD"))
                                                        {
                                                            <tr>
                                                            <td>@Html.LabelForRequired(model => model.SgfCd)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.SgfCd, Model.SgfCdList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { @id = "SFGNRMAL" })@Html.ValidationMessageFor(model => model.SgfCd)
                                                           @*<td>@Html.DropDownListFor(model => model.SgfCd, Model.SgfCdList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { onchange = Model.DropDownPostbackScript })@Html.ValidationMessageFor(model => model.SgfCd)*@
                                                            </td>
                                                        </tr>
                                                        }
                                                          
                                                       @* @if (Model.SgfCd != null && Model.SgfCd.ToUpper() == "ON")
                                                        {
*@
                                                            @if (Model.FieldsToDisplay.Contains("SGF_MIN_TRIP_PERCENT"))
                                                            {<tr id="NormalTripAmp">
                                                                @if (Model.ControllerUnitType != "6")
                                                                {
                                                                    <td>@Html.LabelForRequired(model => model.SgfMinTripPercent)
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td>
                                                                        <label>
                                                                            Min. Trip Amp :</label>
                                                                    </td>
                                                                }
                                                                <td>@Html.TextBoxFor(model => model.SgfMinTripPercent, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.SgfMinTripPercent)
                                                                </td>
                                                            </tr>}
                                                            @if (Model.FieldsToDisplay.Contains("SGF_TIME_DELAY"))
                                                            {<tr id="Normal_SGF_TIME_DELAY">
                                                                <td>@Html.LabelForRequired(model => model.SgfTimeDelay)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.SgfTimeDelay, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.SgfTimeDelay)
                                                                </td>
                                                            </tr>}
                                                            @if (Model.FieldsToDisplay.Contains("SGF_LOCKOUT"))
                                                            {<tr id="Normal_SGF_LOCKOUT">
                                                                <td>@Html.LabelForRequired(model => model.SgfLockout)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.SgfLockout, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.SgfLockout)
                                                                </td>
                                                            </tr>}

                                                       @* }
                                                        else
                                                        {
                                                        }*@
                                                   
                                                    </table>
                                                   }
                                                   else
                                                   {
                                                         <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("SGF_CD"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.SgfCd)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.SgfCd, Model.SgfCdList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { onchange = Model.DropDownPostbackScript })@Html.ValidationMessageFor(model => model.SgfCd)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.SgfCd != null && Model.SgfCd.ToUpper() == "ON")
                                                        {
                                                            if (Model.FieldsToDisplay.Contains("SGF_MIN_TRIP_PERCENT"))
                                                            {<tr>
                                                                @if (Model.ControllerUnitType != "6")
                                                                {
                                                                    <td>@Html.LabelForRequired(model => model.SgfMinTripPercent)
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td>
                                                                        <label>
                                                                            Min. Trip Amp :</label>
                                                                    </td>
                                                                }
                                                                <td>@Html.TextBoxFor(model => model.SgfMinTripPercent, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.SgfMinTripPercent)
                                                                </td>
                                                            </tr>}
                                                            if (Model.FieldsToDisplay.Contains("SGF_TIME_DELAY"))
                                                            {<tr>
                                                                <td>@Html.LabelForRequired(model => model.SgfTimeDelay)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.SgfTimeDelay, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.SgfTimeDelay)
                                                                </td>
                                                            </tr>}
                                                            if (Model.FieldsToDisplay.Contains("SGF_LOCKOUT"))
                                                            {<tr>
                                                                <td>@Html.LabelForRequired(model => model.SgfLockout)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.SgfLockout, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.SgfLockout)
                                                                </td>
                                                            </tr>}
                                                        }
                                                    </table>
                                                   }
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("HIGH_CURRENT_LOCKOUT_USED"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.HighCurrentLockoutUsed)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.HighCurrentLockoutUsed, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.HighCurrentLockoutUsed)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("HIGH_CURRENT_LOCKOUT_PHA"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.HighCurrentLockoutPhase)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.HighCurrentLockoutPhase, Model.HighCurrentLockoutPhaseList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.HighCurrentLockoutPhase)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("HIGH_CURRENT_LOCKUOUT_GRD"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.HighCurrentLockoutGround)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.HighCurrentLockoutGround, Model.HighCurrentLockoutGroundList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.HighCurrentLockoutGround)
                                                            </td>
                                                        </tr>}
                                                    </table>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("COLD_LOAD_PLI_USED"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.ColdLoadPliUsed)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.ColdLoadPliUsed, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ColdLoadPliUsed)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("COLD_LOAD_PLI_PHA"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.ColdLoadPliPhase)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.ColdLoadPliPhase, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ColdLoadPliPhase)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("COLD_LOAD_PLI_CURVE_PHA"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.ColdLoadPliCurvePhase)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.ColdLoadPliCurvePhase, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ColdLoadPliCurvePhase)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("COLD_LOAD_PLI_GRD"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.ColdLoadPliGround)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.ColdLoadPliGround, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ColdLoadPliGround)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("COLD_LOAD_PLI_CURVE_GRD"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.ColdLoadPliCurveGround)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.ColdLoadPliCurveGround, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ColdLoadPliCurveGround)
                                                            </td>
                                                        </tr>}
                                                    </table>
                                                </td>
                                            </tr>
                                          }
                                        </table>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    }
                    <!------------------ Alt #1 ------------------>
                    @if (Model.ControllerUnitType != "BECK")
                    {
                        <tr valign="top">
                        <td colspan="2" style="padding-left: 10px; padding-right: 10px; width: 100%">
                            <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%"
                                class="multicolumn100">
                                <tr>
                                    <td class="sectionHeader">
                                        Alt #1
                                    </td>
                                    @*INC000004115222*@
                                    @if (ViewBag.PageMode == "FUTURE")
                                    {
                                        <td class="sectionHeader" style="text-align: right; padding-right: 10px">
                                            <input type="button" value="Apply Normal to Alt #1 Settings" onclick="this.form.action='/@ViewBag.ControllerName/CopyNormalToAlt1/@ViewBag.GlobalID/@ViewBag.LayerName?layerType=@ViewBag.layerType';this.form.submit();"
                                                @((Security.IsInAdminGroup && Model.FieldsToDisplay.Contains("ALT_PHA_MIN_TRIP")) ? Html.Raw("") : Html.Raw("disabled='disabled'")) />
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="sectionHeader"></td>
                                    }
                                </tr>
                                <tr>
                                    <td valign="top">
                                        <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                            <tr>
                                                <td align="center" colspan="2" class="sectionHeader">
                                                    PHASE
                                                </td>
                                                <td align="center" colspan="2" class="sectionHeader">
                                                    GROUND
                                                </td>
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT_PHA_MIN_TRIP"))
                                                {<td>@Html.LabelForRequired(model => model.PhaMinTrip)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.AltPhaMinTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltPhaMinTrip)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT_GRD_MIN_TRIP"))
                                                {<td>@Html.LabelForRequired(model => model.AltGrdMinTrip)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.AltGrdMinTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltGrdMinTrip)
                                                    </td>
                                                }
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT_PHA_INST_TRIP_CD"))
                                                {<td>@Html.LabelForRequired(model => model.AltPhaInstTrip)
                                                </td>
                                                     <td>@Html.TextBoxFor(model => model.AltPhaInstTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltPhaInstTrip)
                                                    </td>
                                                    @*<td>@Html.DropDownListFor(model => model.AltPhaInstTrip, Model.AltPhaInstTripList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltPhaInstTrip)
                                                    </td>*@
                                                }
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT_GRD_INST_TRIP_CD"))
                                                {<td>@Html.LabelForRequired(model => model.AltGrdInstTrip)
                                                </td>
                                                   @* <td>@Html.DropDownListFor(model => model.AltGrdInstTrip, Model.AltGrdInstTripList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltGrdInstTrip)
                                                    </td>*@
                                                    <td>@Html.TextBoxFor(model => model.AltGrdInstTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltGrdInstTrip)
                                                    </td>
                                                }
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT_TCC1_FAST_CURVES_USED"))
                                                {<td>@Html.LabelForRequired(model => model.AltTcc1FastCurvesUsed)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.AltTcc1FastCurvesUsed, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltTcc1FastCurvesUsed)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                <td>
                                                </td>
                                                <td>
                                                </td>
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT_PHA_OP_F_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.AltPhaFastCurveOps)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.AltPhaFastCurveOps, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltPhaFastCurveOps)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT_GRD_OP_F_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.AltGrdFastCurveOps)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.AltGrdFastCurveOps, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltGrdFastCurveOps)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT_PHA_FAST_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.AltPhaFastCurve)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.AltPhaFastCurve, Model.AltPhaFastCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltPhaFastCurve)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT_GRD_FAST_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.AltGrdFastCurve)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.AltGrdFastCurve, Model.AltGrdFastCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltGrdFastCurve)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT_PHA_VMUL_FAST"))
                                                {<td>@Html.LabelForRequired(model => model.AltPhaVmulFast)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.AltPhaVmulFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltPhaVmulFast)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT_GRD_VMUL_FAST"))
                                                {<td>@Html.LabelForRequired(model => model.AltGrdVmulFast)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.AltGrdVmulFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltGrdVmulFast)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT_PHA_TADD_FAST"))
                                                {<td>@Html.LabelForRequired(model => model.AltPhaTaddFast)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.AltPhaTaddFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltPhaTaddFast)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT_GRD_TADD_FAST"))
                                                {<td>@Html.LabelForRequired(model => model.AltGrdTaddFast)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.AltGrdTaddFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltGrdTaddFast)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT_TCC2_SLOW_CURVES_USED"))
                                                {<td>@Html.LabelForRequired(model => model.AltTcc2SlowCurvesUsed)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.AltTcc2SlowCurvesUsed, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltTcc2SlowCurvesUsed)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                <td>
                                                </td>
                                                <td>
                                                </td>
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT_PHA_SLOW_CRV_OPS"))
                                                {<td>@Html.LabelForRequired(model => model.AltPhaSlowCurveOps)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.AltPhaSlowCurveOps, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltPhaSlowCurveOps)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT_GRD_SLOW_CRV_OPS"))
                                                {<td>@Html.LabelForRequired(model => model.AltGrdSlowCurveOps)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.AltGrdSlowCurveOps, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltGrdSlowCurveOps)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT_PHA_SLOW_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.AltPhaSlowCurve)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.AltPhaSlowCurve, Model.AltPhaSlowCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltPhaSlowCurve)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT_GRD_SLOW_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.AltGrdSlowCurve)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.AltGrdSlowCurve, Model.AltGrdSlowCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltGrdSlowCurve)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT_PHA_VMUL_SLOW"))
                                                {<td>@Html.LabelForRequired(model => model.AltPhaVmulSlow)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.AltPhaVmulSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltPhaVmulSlow)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT_GRD_VMUL_SLOW"))
                                                {<td>@Html.LabelForRequired(model => model.AltGrdVmulSlow)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.AltGrdVmulSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltGrdVmulSlow)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT_PHA_TADD_SLOW"))
                                                {<td>@Html.LabelForRequired(model => model.AltPhaTaddSlow)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.AltPhaTaddSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltPhaTaddSlow)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT_GRD_TADD_SLOW"))
                                                {<td>@Html.LabelForRequired(model => model.AltGrdTaddSlow)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.AltGrdTaddSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltGrdTaddSlow)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT_PHA_RESP_TIME"))
                                                {<td>@Html.LabelForRequired(model => model.AltPhaResponseTime)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.AltPhaResponseTime, Model.AltPhaResponseTimeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltPhaResponseTime)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT_GRD_RESP_TIME"))
                                                {<td>@Html.LabelForRequired(model => model.AltGrdResponseTime)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.AltGrdResponseTime, Model.AltGrdResponseTimeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltGrdResponseTime)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            @*INC000004115018 start*@
                                             <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT_PHA_LOCKOUT_OPS"))
                                                {<td>@Html.LabelForRequired(model => model.AltPhaOpsToLockout)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.AltPhaOpsToLockout, Model.AltPhaOpsToLockoutList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltPhaOpsToLockout)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT_GRD_LOCKOUT_OPS"))
                                                {<td>@Html.LabelForRequired(model => model.AltGrdOpsToLockout)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.AltGrdOpsToLockout, Model.AltGrdOpsToLockoutList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltGrdOpsToLockout)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            @*INC000004115018 end*@
                                        </table>
                                    </td>
                                    <td valign="top">
                                        <table>
                                            <tr>
                                                <td>
                                                    <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("ALT_TOT_LOCKOUT_OPS"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltTotOpsToLockout)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.AltTotOpsToLockout, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltTotOpsToLockout)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT_RECLOSE1_TIME"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltReclose1Time)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.AltReclose1Time, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltReclose1Time)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT_RECLOSE2_TIME"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltReclose2Time)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.AltReclose2Time, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltReclose2Time)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT_RECLOSE3_TIME"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltReclose3Time)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.AltReclose3Time, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltReclose3Time)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT_RESET"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltResetTime)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.AltResetTime, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltResetTime)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT_RECLOSE_RETRY_ENABLED"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltRecloseRetryEnabled)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.AltRecloseRetryEnabled, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltRecloseRetryEnabled)
                                                            </td>
                                                        </tr>}
                                                    </table>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                   @if (ViewBag.PageMode == "FUTURE")
                                                   {
                                                        <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("ALT_SGF_CD"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltSfg)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.AltSfg, Model.AltSfgList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { id = "Altdd1" })@Html.ValidationMessageFor(model => model.AltSfg)
                                                            </td>
                                                        </tr>}
                                                      
                                                           @if (Model.FieldsToDisplay.Contains("ALT_SGF_MIN_TRIP_PERCENT"))
                                                           {<tr id ="Altsfg_Min">
                                                                @if (Model.ControllerUnitType != "6")
                                                                {
                                                                    <td>@Html.LabelForRequired(model => model.AltSgfMinTripPercent)
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td>
                                                                        <label>
                                                                            Min. Trip Amp :</label>
                                                                    </td>
                                                                }
                                                                <td>@Html.TextBoxFor(model => model.AltSgfMinTripPercent, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltSgfMinTripPercent)
                                                                </td>
                                                            </tr>}
                                                           @if (Model.FieldsToDisplay.Contains("ALT_SGF_TIME_DELAY"))
                                                           {<tr id="Altsfg_delay">
                                                                <td>@Html.LabelForRequired(model => model.AltSgfTimeDelay)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.AltSgfTimeDelay, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltSgfTimeDelay)
                                                                </td>
                                                            </tr>}
                                                           @if (Model.FieldsToDisplay.Contains("ALT_SGF_LOCKOUT"))
                                                           {<tr id="Altsfg_lockout">
                                                                <td>@Html.LabelForRequired(model => model.AltSgfLockout)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.AltSgfLockout, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltSgfLockout)
                                                                </td>
                                                            </tr>}
                                                        
                                                    </table>
                                                   }
                                                   else
                                                   {
                                                    <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("ALT_SGF_CD"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltSfg)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.AltSfg, Model.AltSfgList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { onchange = Model.DropDownPostbackScript })@Html.ValidationMessageFor(model => model.AltSfg)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.AltSfg != null && Model.AltSfg.ToUpper() == "ON")
                                                        {
                                                            if (Model.FieldsToDisplay.Contains("ALT_SGF_MIN_TRIP_PERCENT"))
                                                            {<tr>
                                                                @if (Model.ControllerUnitType != "6")
                                                                {
                                                                    <td>@Html.LabelForRequired(model => model.AltSgfMinTripPercent)
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td>
                                                                        <label>
                                                                            Min. Trip Amp :</label>
                                                                    </td>
                                                                }
                                                                <td>@Html.TextBoxFor(model => model.AltSgfMinTripPercent, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltSgfMinTripPercent)
                                                                </td>
                                                            </tr>}
                                                            if (Model.FieldsToDisplay.Contains("ALT_SGF_TIME_DELAY"))
                                                            {<tr>
                                                                <td>@Html.LabelForRequired(model => model.AltSgfTimeDelay)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.AltSgfTimeDelay, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltSgfTimeDelay)
                                                                </td>
                                                            </tr>}
                                                            if (Model.FieldsToDisplay.Contains("ALT_SGF_LOCKOUT"))
                                                            {<tr>
                                                                <td>@Html.LabelForRequired(model => model.AltSgfLockout)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.AltSgfLockout, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltSgfLockout)
                                                                </td>
                                                            </tr>}
                                                        }
                                                    </table>
                                                   }
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("ALT_HIGH_CURRENT_LOCKOUT_USED"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltHighCurrentLockoutUsed)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.AltHighCurrentLockoutUsed, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltHighCurrentLockoutUsed)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT_HIGH_CURRENT_LOCKOUT_PHA"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltHighCurrentLockoutPhase)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.AltHighCurrentLockoutPhase, Model.HighCurrentLockoutPhaseList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltHighCurrentLockoutPhase)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT_HIGH_CURRENT_LOCKUOUT_GRD"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltHighCurrentLockoutGround)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.AltHighCurrentLockoutGround, Model.HighCurrentLockoutGroundList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltHighCurrentLockoutGround)
                                                            </td>
                                                        </tr>}
                                                    </table>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("ALT_COLD_LOAD_PLI_USED"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltColdLoadPliUsed)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.AltColdLoadPliUsed, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltColdLoadPliUsed)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT_COLD_LOAD_PLI_PHA"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltColdLoadPliPhase)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.AltColdLoadPliPhase, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltColdLoadPliPhase)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT_COLD_LOAD_PLI_CURVE_PHA"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltColdLoadPliCurvePha)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.AltColdLoadPliCurvePha, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltColdLoadPliCurvePha)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT_COLD_LOAD_PLI_GRD"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltColdLoadPliGround)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.AltColdLoadPliGround, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltColdLoadPliGround)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT_COLD_LOAD_PLI_CURVE_GRD"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.AltColdLoadPliCurveGround)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.AltColdLoadPliCurveGround, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltColdLoadPliCurveGround)
                                                            </td>
                                                        </tr>}
                                                    </table>
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    }
                    <!------------------ Alt #2 ------------------>
                     @if (Model.ControllerUnitType != "4C" && Model.ControllerUnitType != "BECK")
                     {
                    <tr valign="top">
                        <td colspan="2" style="padding-left: 10px; padding-right: 10px; width: 100%">
                            <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%"
                                class="multicolumn100">
                                <tr>
                                    <td class="sectionHeader">
                                        Alt #2
                                    </td>
                                      @*INC000004115222*@
                                      @if (ViewBag.PageMode == "FUTURE")
                                      {
                                        <td class="sectionHeader" style="text-align: right; padding-right: 10px">
                                            <input type="button" value="Apply Normal to Alt #2 Settings" onclick="this.form.action='/@ViewBag.ControllerName/CopyNormalToAlt2/@ViewBag.GlobalID/@ViewBag.LayerName?layerType=@ViewBag.layerType';this.form.submit();"
                                                @((Security.IsInAdminGroup && Model.FieldsToDisplay.Contains("ALT2_PHA_ARMING_THRESHOLD")) ? Html.Raw("") : Html.Raw("disabled='disabled'")) />
                                        </td>
                                      }
                                      else
                                      {
                                          <td class="sectionHeader"></td>
                                      }
                                </tr>
                                <tr valign="top">
                                    <td colspan="2">
                                        <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                            <tr>
                                                <td align="center" colspan="2" class="sectionHeader">
                                                    PHASE
                                                </td>
                                                <td align="center" colspan="2" class="sectionHeader">
                                                    GROUND
                                                </td>
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT2_PHA_ARMING_THRESHOLD"))
                                                {<td>@Html.LabelForRequired(model => model.Alt2PhaArmingThreshold)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt2PhaArmingThreshold, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2PhaArmingThreshold)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT2_GRD_ARMING_THRESHOLD"))
                                                {<td>@Html.LabelForRequired(model => model.Alt2GrdArmingThreshold)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt2GrdArmingThreshold, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2GrdArmingThreshold)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT2_PHA_INRUSH_THRESHOLD"))
                                                {<td>@Html.LabelForRequired(model => model.Alt2PhaInrushThreshold)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt2PhaInrushThreshold, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2PhaInrushThreshold)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT2_GRD_INRUSH_THRESHOLD"))
                                                {<td>@Html.LabelForRequired(model => model.Alt2GrdInrushThreshold)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt2GrdInrushThreshold, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2GrdInrushThreshold)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2">
                                        <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                            @if (Model.FieldsToDisplay.Contains("ALT2_PERMIT_LS_ENABLING"))
                                            {<tr>
                                                <td>@Html.LabelForRequired(model => model.Alt2PermitLsEnabling)
                                                </td>
                                                <td>@Html.DropDownListFor(model => model.Alt2PermitLsEnabling, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2PermitLsEnabling)
                                                </td>
                                            </tr>}
                                            @if (Model.FieldsToDisplay.Contains("ALT2_INRUSH_DURATION"))
                                            {<tr>
                                                <td>@Html.LabelForRequired(model => model.Alt2InrushDuration)
                                                </td>
                                                <td>@Html.TextBoxFor(model => model.Alt2InrushDuration, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2InrushDuration)
                                                </td>
                                            </tr>}
                                            @if (Model.FieldsToDisplay.Contains("ALT2_LS_RESET_TIME"))
                                            {<tr>
                                                <td>@Html.LabelForRequired(model => model.Alt2LsResetTime)
                                                </td>
                                                <td>@Html.TextBoxFor(model => model.Alt2LsResetTime, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2LsResetTime)
                                                </td>
                                            </tr>}
                                            @if (Model.FieldsToDisplay.Contains("ALT2_LS_LOCKOUT_OPS"))
                                            {<tr>
                                                <td>@Html.LabelForRequired(model => model.Alt2LsOpsToLockout)
                                                </td>
                                                <td>@Html.TextBoxFor(model => model.Alt2LsOpsToLockout, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2LsOpsToLockout)
                                                </td>
                                            </tr>}
                                        </table>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2">
                                        <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                            <tr>
                                                <td align="center" colspan="2" class="sectionHeader">
                                                    PHASE
                                                </td>
                                                <td align="center" colspan="2" class="sectionHeader">
                                                    GROUND
                                                </td>
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT2_PHA_MIN_TRIP"))
                                                {<td>@Html.LabelForRequired(model => model.Alt2PhaMinTrip)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt2PhaMinTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2PhaMinTrip)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT2_GRD_MIN_TRIP"))
                                                {<td>@Html.LabelForRequired(model => model.Alt2GrdMinTrip)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt2GrdMinTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2GrdMinTrip)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT2_PHA_INST_TRIP_CD"))
                                                {<td>@Html.LabelForRequired(model => model.Alt2PhaInstTrip)
                                                </td>
                                                   @* <td>@Html.DropDownListFor(model => model.Alt2PhaInstTrip, Model.Alt2PhaInstTripList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2PhaInstTrip)
                                                    </td>*@
                                                     <td>@Html.TextBoxFor(model => model.Alt2PhaInstTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2PhaInstTrip)
                                                    </td>
                                                }
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT2_GRD_INST_TRIP_CD"))
                                                {<td>@Html.LabelForRequired(model => model.Alt2GrdInstTrip)
                                                </td>
                                                   @* <td>@Html.DropDownListFor(model => model.Alt2GrdInstTrip, Model.Alt2GrdInstTripList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2GrdInstTrip)
                                                    </td>*@
                                                    
                                                     <td>@Html.TextBoxFor(model => model.Alt2GrdInstTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2GrdInstTrip)
                                                    </td>
                                                }
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT2_PHA_FAST_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.Alt2PhaCurve)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.Alt2PhaCurve, Model.Alt2PhaCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2PhaCurve)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT2_GRD_FAST_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.Alt2GrdCurve)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.Alt2GrdCurve, Model.Alt2GrdCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2GrdCurve)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT2_PHA_VMUL_FAST"))
                                                {<td>@Html.LabelForRequired(model => model.Alt2PhaVmul)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt2PhaVmul, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2PhaVmul)
                                                    </td>
                                                }
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT2_GRD_VMUL_SLOW"))
                                                {<td>@Html.LabelForRequired(model => model.Alt2GrdVmul)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt2GrdVmul, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2GrdVmul)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT2_PHA_TADD_FAST"))
                                                {<td>@Html.LabelForRequired(model => model.Alt2PhaTadd)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt2PhaTadd, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2PhaTadd)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT2_GRD_TADD_FAST"))
                                                {<td>@Html.LabelForRequired(model => model.Alt2GrdTadd)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt2GrdTadd, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt2GrdTadd)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <!------------------ Alt #3 ------------------>
                    <tr>
                        <td colspan="2" style="padding-left: 10px; padding-right: 10px; width: 100%">
                            <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%"
                                class="multicolumn100">
                                <tr>
                                    <td class="sectionHeader">
                                        Alt #3
                                    </td>
                                      @*INC000004115222*@
                                     @if (ViewBag.PageMode == "FUTURE")
                                     {
                                        <td class="sectionHeader" style="text-align: right; padding-right: 10px">
                                            <input type="button" value="Apply Normal to Alt #3 Settings" onclick="this.form.action='/@ViewBag.ControllerName/CopyNormalToAlt3/@ViewBag.GlobalID/@ViewBag.LayerName?layerType=@ViewBag.layerType';this.form.submit();"
                                                @((Security.IsInAdminGroup && Model.FieldsToDisplay.Contains("ALT3_PHA_MIN_TRIP")) ? Html.Raw("") : Html.Raw("disabled='disabled'")) />
                                        </td>
                                     }
                                     else
                                     {
                                          <td class="sectionHeader" ></td>
                                     }
                                </tr>
                                <tr valign="top">
                                    <td>
                                        <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                            <tr>
                                                <td align="center" colspan="2" class="sectionHeader">
                                                    PHASE
                                                </td>
                                                <td align="center" colspan="2" class="sectionHeader">
                                                    GROUND
                                                </td>
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT3_PHA_MIN_TRIP"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3PhaMinTrip)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3PhaMinTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3PhaMinTrip)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT3_GRD_MIN_TRIP"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3GrdMinTrip)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3GrdMinTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3GrdMinTrip)
                                                    </td>
                                                }
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT3_PHA_INST_TRIP_CD"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3PhaInstTrip)
                                                </td>
                                                   @* <td>@Html.DropDownListFor(model => model.Alt3PhaInstTrip, Model.Alt3PhaInstTripList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3PhaInstTrip)
                                                    </td>*@
                                                     <td>@Html.TextBoxFor(model => model.Alt3PhaInstTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3PhaInstTrip)
                                                    </td>
                                                }
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT3_GRD_INST_TRIP_CD"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3GrdInstTrip)
                                                </td>
                                                  @*  <td>@Html.DropDownListFor(model => model.Alt3GrdInstTrip, Model.Alt3GrdInstTripList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3GrdInstTrip)
                                                    </td>*@
                                                    <td>@Html.TextBoxFor(model => model.Alt3GrdInstTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3GrdInstTrip)
                                                    </td>
                                                }
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT3_TCC1_FAST_CURVES_USED"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3Tcc1FastCurvesUsed)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.Alt3Tcc1FastCurvesUsed, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3Tcc1FastCurvesUsed)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                <td>
                                                </td>
                                                <td>
                                                </td>
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT3_PHA_OP_F_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3PhaFastCurveOps)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3PhaFastCurveOps, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3PhaFastCurveOps)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT3_GRD_OP_F_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3GrdFastCurveOps)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3GrdFastCurveOps, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3GrdFastCurveOps)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT3_PHA_FAST_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3PhaFastCurve)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.Alt3PhaFastCurve, Model.Alt3PhaFastCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3PhaFastCurve)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT3_GRD_FAST_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.AltGrdFastCurve)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.AltGrdFastCurve, Model.AltGrdFastCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.AltGrdFastCurve)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT3_PHA_VMUL_FAST"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3PhaVmulFast)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3PhaVmulFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3PhaVmulFast)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT3_GRD_VMUL_FAST"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3GrdVmulFast)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3GrdVmulFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3GrdVmulFast)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT3_PHA_TADD_FAST"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3PhaTaddFast)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3PhaTaddFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3PhaTaddFast)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT3_GRD_TADD_FAST"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3GrdTaddFast)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3GrdTaddFast, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3GrdTaddFast)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT3_TCC2_SLOW_CURVES_USED"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3Tcc2SlowCurvesUsed)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.Alt3Tcc2SlowCurvesUsed, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3Tcc2SlowCurvesUsed)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                <td>
                                                </td>
                                                <td>
                                                </td>
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT3_GRD_SLOW_CRV_OPS"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3PhaSlowCurveOps)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3PhaSlowCurveOps, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3PhaSlowCurveOps)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT3_GRD_SLOW_CRV_OPS"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3GrdSlowCurveOps)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3GrdSlowCurveOps, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3GrdSlowCurveOps)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT3_PHA_SLOW_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3PhaSlowCurve)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.Alt3PhaSlowCurve, Model.Alt3PhaSlowCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3PhaSlowCurve)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT3_GRD_SLOW_CRV"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3GrdSlowCurve)
                                                </td>
                                                    <td>@Html.DropDownListFor(model => model.Alt3GrdSlowCurve, Model.Alt3GrdSlowCurveList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3GrdSlowCurve)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT3_PHA_VMUL_SLOW"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3PhaVmulSlow)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3PhaVmulSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3PhaVmulSlow)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT3_GRD_VMUL_SLOW"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3GrdVmulSlow)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3GrdVmulSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3GrdVmulSlow)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT3_PHA_TADD_SLOW"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3PhaTaddSlow)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3PhaTaddSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3PhaTaddSlow)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT3_GRD_TADD_SLOW"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3GrdTaddSlow)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3GrdTaddSlow, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3GrdTaddSlow)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("ALT3_PHA_DELAY"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3PhaDelay)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3PhaDelay, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3PhaDelay)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                                @if (Model.FieldsToDisplay.Contains("ALT3_GRD_DELAY"))
                                                {<td>@Html.LabelForRequired(model => model.Alt3GrdDelay)
                                                </td>
                                                    <td>@Html.TextBoxFor(model => model.Alt3GrdDelay, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3GrdDelay)
                                                    </td>}
                                                else
                                                { <td>
                                                </td>
                                                    <td>
                                                    </td>}
                                            </tr>
                                        </table>
                                    </td>
                                    <td>
                                        <table>
                                            <tr>
                                                <td>
                                                    <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_TOT_LOCKOUT_OPS"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3TotOpsToLockout)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.Alt3TotOpsToLockout, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3TotOpsToLockout)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_RECLOSE1_TIME"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3Reclose1Time)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.Alt3Reclose1Time, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3Reclose1Time)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_RECLOSE2_TIME"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3Reclose2Time)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.Alt3Reclose2Time, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3Reclose2Time)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_RECLOSE3_TIME"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3Reclose3Time)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.Alt3Reclose3Time, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3Reclose3Time)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_RESET"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3ResetTime)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.Alt3ResetTime, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3ResetTime)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_RECLOSE_RETRY_ENABLED"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3RecloseRetryEnabled)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.Alt3RecloseRetryEnabled, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3RecloseRetryEnabled)
                                                            </td>
                                                        </tr>}
                                                    </table>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                   @if (ViewBag.PageMode == "FUTURE")
                                                   { <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_SGF_CD"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3SensitiveGroundFault)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.Alt3SensitiveGroundFault, Model.Alt3SensitiveGroundFaultList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { id = "Alt3dd3" })@Html.ValidationMessageFor(model => model.Alt3SensitiveGroundFault)
                                                            </td>
                                                        </tr>}
                                                       
                                                            @if (Model.FieldsToDisplay.Contains("ALT3_SGF_MIN_TRIP_PERCENT"))
                                                            {<tr id="Alt3TripAmp">
                                                                @if (Model.ControllerUnitType != "6")
                                                                {
                                                                    <td>@Html.LabelForRequired(model => model.Alt3SgfMinTripPercent)
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td>
                                                                        <label>
                                                                            Trip Amp :</label>
                                                                    </td>
                                                                }
                                                                <td>@Html.TextBoxFor(model => model.Alt3SgfMinTripPercent, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3SgfMinTripPercent)
                                                                </td>
                                                            </tr>}
                                                            @if (Model.FieldsToDisplay.Contains("ALT3_SGF_TIME_DELAY"))
                                                            {<tr id="Alt3Delay">
                                                                <td>@Html.LabelForRequired(model => model.Alt3SgfTimeDelay)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.Alt3SgfTimeDelay, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3SgfTimeDelay)
                                                                </td>
                                                            </tr>}
                                                            @if (Model.FieldsToDisplay.Contains("ALT3_SGF_LOCKOUT"))
                                                            {<tr id="Alt3Lockout">
                                                                <td>@Html.LabelForRequired(model => model.Alt3SgfLockout)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.Alt3SgfLockout, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3SgfLockout)
                                                                </td>
                                                            </tr>}
                                                        
                                                    </table>}
                                                   else
                                                   {
                                                    <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_SGF_CD"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3SensitiveGroundFault)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.Alt3SensitiveGroundFault, Model.Alt3SensitiveGroundFaultList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { onchange = Model.DropDownPostbackScript })@Html.ValidationMessageFor(model => model.Alt3SensitiveGroundFault)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.Alt3SensitiveGroundFault != null && Model.Alt3SensitiveGroundFault.ToUpper() == "ON")
                                                        {
                                                            if (Model.FieldsToDisplay.Contains("ALT3_SGF_MIN_TRIP_PERCENT"))
                                                            {<tr>
                                                                @if (Model.ControllerUnitType != "6")
                                                                {
                                                                    <td>@Html.LabelForRequired(model => model.Alt3SgfMinTripPercent)
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td>
                                                                        <label>
                                                                            Trip Amp :</label>
                                                                    </td>
                                                                }
                                                                <td>@Html.TextBoxFor(model => model.Alt3SgfMinTripPercent, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3SgfMinTripPercent)
                                                                </td>
                                                            </tr>}
                                                            if (Model.FieldsToDisplay.Contains("ALT3_SGF_TIME_DELAY"))
                                                            {<tr>
                                                                <td>@Html.LabelForRequired(model => model.Alt3SgfTimeDelay)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.Alt3SgfTimeDelay, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3SgfTimeDelay)
                                                                </td>
                                                            </tr>}
                                                            if (Model.FieldsToDisplay.Contains("ALT3_SGF_LOCKOUT"))
                                                            {<tr>
                                                                <td>@Html.LabelForRequired(model => model.Alt3SgfLockout)
                                                                </td>
                                                                <td>@Html.TextBoxFor(model => model.Alt3SgfLockout, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3SgfLockout)
                                                                </td>
                                                            </tr>}
                                                        }
                                                    </table>
                                                       
                                                   }
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_HIGH_CURRENT_LOCKOUT_USED"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3HighCurrentLockoutUsed)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.Alt3HighCurrentLockoutUsed, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3HighCurrentLockoutUsed)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_HIGH_CURRENT_LOCKOUT_PHA"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3HighCurrentLockoutPhase)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.Alt3HighCurrentLockoutPhase, Model.HighCurrentLockoutPhaseList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3HighCurrentLockoutPhase)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_HIGH_CURRENT_LOCKUOUT_GRD"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3HighCurrentLockoutGround)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.Alt3HighCurrentLockoutGround, Model.HighCurrentLockoutGroundList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3HighCurrentLockoutGround)
                                                            </td>
                                                        </tr>}
                                                    </table>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_COLD_LOAD_PLI_USED"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3ColdLoadPliUsed)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.Alt3ColdLoadPliUsed, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3ColdLoadPliUsed)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_COLD_LOAD_PLI_PHA"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3ColdLoadPliPhase)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.Alt3ColdLoadPliPhase, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3ColdLoadPliPhase)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_COLD_LOAD_PLI_CURVE_PHA"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3ColdLoadPliCurvePhase)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.Alt3ColdLoadPliCurvePhase, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3ColdLoadPliCurvePhase)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_COLD_LOAD_PLI_GRD"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3ColdLoadPliGround)
                                                            </td>
                                                            <td>@Html.TextBoxFor(model => model.Alt3ColdLoadPliGround, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3ColdLoadPliGround)
                                                            </td>
                                                        </tr>}
                                                        @if (Model.FieldsToDisplay.Contains("ALT3_COLD_LOAD_PLI_CURVE_GRD"))
                                                        {<tr>
                                                            <td>@Html.LabelForRequired(model => model.Alt3ColdLoadPliCurveGround)
                                                            </td>
                                                            <td>@Html.DropDownListFor(model => model.Alt3ColdLoadPliCurveGround, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.Alt3ColdLoadPliCurveGround)
                                                            </td>
                                                        </tr>}
                                                    </table>
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                     }
                    @if (Model.FieldsToDisplay.Contains("ENGINEERING_COMMENTS"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.EngineeringComments)
                        </td>
                        <td>@Html.TextAreaFor(model => model.EngineeringComments, 5, 15, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 250, @class = "form-control" })@Html.ValidationMessageFor(model => model.EngineeringComments)
                        </td>
                    </tr>}
                    <!------------------ Scada ------------------>
                    <tr>
                        <td colspan="4" style="padding: 0px; width: 100%">
                            <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; padding: 0px;
                                width: 100%;">
                                <tr>
                                    <td>
                                        <table cellpadding="0" cellspacing="0" style="margin: 0px; width: 103%;">
                                            <tr>
                                                <td colspan="4" class="sectionHeader">
                                                    SCADA
                                                </td>
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("SCADA"))
                                                {
                                                    <td>@Html.LabelForRequired(model => model.Scada)
                                                    </td>
                                                    @*<td>@Html.DropDownListFor(model => model.Scada, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { onchange = Model.DropDownPostbackScriptScada })@Html.ValidationMessageFor(model => model.Scada)*@
                                                    var isDisabled = ViewBag.isDisabled;
                                                    <td>@Html.DropDownListFor(model => model.Scada, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { onchange = "OnScadaChange();", @id = "ScadaDropDown" })@Html.ValidationMessageFor(model => model.Scada)
                                                    </td>
                                                }
                                                <td>@Html.LabelForRequired(model => model.RTUExists)
                                                </td>
                                                <td>@Html.DropDownListFor(model => model.RTUExists, new SelectList(SiteCache.GetYesNoLookUp, "Key", "Value"), ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.RTUExists)
                                                </td>
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("SCADA_TYPE"))
                                                {
                                                    <td>@Html.LabelForRequired(model => model.ScadaType)
                                                    </td>
                                                    <td>@Html.DropDownListFor(model => model.ScadaType, Model.ScadaTypeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ScadaType)
                                                    </td>
                                                }
                                                <td>@Html.LabelForRequired(model => model.RTUManufacture)
                                                </td>
                                                <td>@Html.DropDownListFor(model => model.RTUManufacture, Model.RTUManufactureList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.RTUManufacture)
                                                </td>
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("MASTER_STATION"))
                                                {
                                                    <td>@Html.LabelForRequired(model => model.MasterStation)
                                                    </td>
                                                    <td>@Html.TextBoxFor(model => model.MasterStation, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 4 })@Html.ValidationMessageFor(model => model.MasterStation)
                                                    </td>
                                                }
                                                <td>@Html.LabelForRequired(model => model.RTUModelNumber)
                                                </td>
                                                <td>@Html.TextBoxFor(model => model.RTUModelNumber, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 25 })@Html.ValidationMessageFor(model => model.RTUModelNumber)
                                                </td>
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("BAUD_RATE"))
                                                {
                                                    <td>@Html.LabelForRequired(model => model.BaudRate)
                                                    </td>
                                                    <td>@Html.TextBoxFor(model => model.BaudRate, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.BaudRate)
                                                    </td>
                                                }
                                                <td>@Html.LabelForRequired(model => model.RTUSerialNumber)
                                                </td>
                                                <td>@Html.TextBoxFor(model => model.RTUSerialNumber, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 25 })@Html.ValidationMessageFor(model => model.RTUSerialNumber)
                                                </td>
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("TRANSMIT_ENABLE_DELAY"))
                                                {
                                                    <td>@Html.LabelForRequired(model => model.TransmitEnableDelay)
                                                    </td>
                                                    <td>@Html.TextBoxFor(model => model.TransmitEnableDelay, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.TransmitEnableDelay)
                                                    </td>
                                                }
                                                <td>@Html.LabelForRequired(model => model.RTUSoftwareVersion)
                                                </td>
                                                <td>@Html.TextBoxFor(model => model.RTUSoftwareVersion, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 25 })@Html.ValidationMessageFor(model => model.RTUSoftwareVersion)
                                                </td>
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("TRANSMIT_DISABLE_DELAY"))
                                                {
                                                    <td>@Html.LabelForRequired(model => model.TransmitDisableDelay)
                                                    </td>
                                                    <td>@Html.TextBoxFor(model => model.TransmitDisableDelay, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.TransmitDisableDelay)
                                                    </td>
                                                }
                                                <td>@Html.LabelForRequired(model => model.RTUFirmwareVersion)
                                                </td>
                                                <td>@Html.TextBoxFor(model => model.RTUFirmwareVersion, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 25 })@Html.ValidationMessageFor(model => model.RTUFirmwareVersion)
                                                </td>
                                            </tr>
                                            <tr>
                                                @if (Model.FieldsToDisplay.Contains("REPEATER"))
                                                {
                                                    <td>@Html.LabelForRequired(model => model.Repeater)
                                                    </td>
                                                    <td>@Html.TextBoxFor(model => model.Repeater, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 25 })@Html.ValidationMessageFor(model => model.Repeater)
                                                    </td>
                                                }
                                                @if (Model.FieldsToDisplay.Contains("RTU_ADDRESS"))
                                                {
                                                    <td>@Html.LabelForRequired(model => model.RtuAddress)
                                                    </td>
                                                    <td>@Html.TextBoxFor(model => model.RtuAddress, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 25 })@Html.ValidationMessageFor(model => model.RtuAddress)
                                                    </td>
                                                }</tr>
                                            @if (Model.FieldsToDisplay.Contains("RADIO_MANF_CD"))
                                            {<tr>
                                                <td>@Html.LabelForRequired(model => model.ScadaRadioManufacturer)
                                                </td>
                                                <td>@Html.DropDownListFor(model => model.ScadaRadioManufacturer, Model.ScadaRadioManufacturerList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.ScadaRadioManufacturer)
                                                </td>
                                            </tr>}
                                            @if (Model.FieldsToDisplay.Contains("RADIO_MODEL_NUM"))
                                            {<tr>
                                                <td>@Html.LabelForRequired(model => model.ScadaRadioModelNum)
                                                </td>
                                                <td>@Html.TextBoxFor(model => model.ScadaRadioModelNum, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 25 })@Html.ValidationMessageFor(model => model.ScadaRadioModelNum)
                                                </td>
                                            </tr>}
                                            @if (Model.FieldsToDisplay.Contains("RADIO_SERIAL_NUM"))
                                            {<tr>
                                                <td>@Html.LabelForRequired(model => model.ScadaRadioSerialNum)
                                                </td>
                                                <td>@Html.TextBoxFor(model => model.ScadaRadioSerialNum, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 25 })@Html.ValidationMessageFor(model => model.ScadaRadioSerialNum)
                                                </td>
                                            </tr>}
                                        </table>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    @if (Model.FieldsToDisplay.Contains("DATE_MODIFIED"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.DateModified)
                        </td>
                        <td>@Html.TextBoxFor(model => model.DateModified, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { @readonly = "true" })@Html.ValidationMessageFor(model => model.DateModified)
                        </td>
                    </tr>}
@* @if (Model.FieldsToDisplay.Contains("NOTES"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.Notes)
                        </td>
                        <td>@Html.TextBoxFor(model => model.Notes, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 240 })@Html.ValidationMessageFor(model => model.Notes)
                        </td>
                    </tr>}*@
                    @if (Model.FieldsToDisplay.Contains("PREPARED_BY"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.PreparedBy)
                        </td>
                        <td>@Html.TextBoxFor(model => model.PreparedBy, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 60 })@Html.ValidationMessageFor(model => model.PreparedBy)
                        </td>
                    </tr>}
                    @if (Model.FieldsToDisplay.Contains("EFFECTIVE_DT"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.EffectiveDate)
                        </td>
                        <td>@Html.TextBoxFor(model => model.EffectiveDate, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { @class = "form-control datepicker" })@Html.ValidationMessageFor(model => model.EffectiveDate)
                        </td>
                    </tr>}
                    @if (Model.FieldsToDisplay.Contains("PEER_REVIEW_BY"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.PeerReviewer)
                        </td>
                        <td>@Html.TextBoxFor(model => model.PeerReviewer, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 60 })@Html.ValidationMessageFor(model => model.PeerReviewer)
                        </td>
                    </tr>}
                    @if (Model.FieldsToDisplay.Contains("PEER_REVIEW_DT"))
                    {<tr>
                        <td>@Html.LabelForRequired(model => model.PeerReviewerDate)
                        </td>
                        <td>@Html.TextBoxFor(model => model.PeerReviewerDate, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { @class = "form-control datepicker" })@Html.ValidationMessageFor(model => model.PeerReviewerDate)
                        </td>
                    </tr>}
                    @if (ViewBag.PageMode == "FUTURE")
                    {
                        <tr>
                            <td class="lable">
                                <label>
                                    Release</label>
                            </td>
                            <td>
                                @Html.CheckBoxFor(model => model.Release, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })
                            </td>
                        </tr>
                    }
                    @if (ViewBag.PageMode == "CURRENT")
                    {
                        <tr>
                            <td colspan="2" style="text-align: right; padding-right: 10px">
                                <input type="button" value="Copy current to future settings" onclick="this.form.action='/@ViewBag.ControllerName/CopyToFuture/@ViewBag.GlobalID/@ViewBag.LayerName?layerType=@ViewBag.layerType';this.form.submit();"
                                    @(Security.IsInAdminGroup ? Html.Raw("") : Html.Raw("disabled='disabled'")) />
                            </td>
                        </tr>
                    }
                    @if (ViewBag.PageMode == "FUTURE")
                    {
                        <tr>
                            <td colspan="2" style="text-align: right; padding-right: 10px">
                                <input type="button" value="Cancel" onclick="this.form.action='/@ViewBag.ControllerName/Future/@ViewBag.GlobalID/@ViewBag.LayerName?layerType=@ViewBag.layerType';this.form.submit();"
                                    @(Security.IsInAdminGroup ? Html.Raw("") : Html.Raw("disabled='disabled'")) />
                                <input type="button" value="Save" onclick="this.form.action='/@ViewBag.ControllerName/SaveFuture/@ViewBag.GlobalID/@ViewBag.LayerName?layerType=@ViewBag.layerType';this.form.submit();"
                                    @(Security.IsInAdminGroup ? Html.Raw("") : Html.Raw("disabled='disabled'")) />
                            </td>
                        </tr>
                    }
                    @if (ViewBag.PageMode == "HISTORY")
                    {
                    }
                </table>
            </td>
        </tr>
    </table>
}