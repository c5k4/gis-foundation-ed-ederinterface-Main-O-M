@using SettingsApp.Common;
@model SettingsApp.Models.RelayModel
@using (Html.BeginForm("Relay", "Protection"))
{
    @Html.ValidationSummary(true)
    <table cellpadding="0" cellspacing="0" width="90%">
        <tr>
            <td style="padding-right: 5px">
                <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                    <tr>
                        <td class="sectionHeader" colspan="2">
                            Primary Phase Relay
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 185px">@Html.LabelForRequired(model => model.RelayType)
                        </td>
                        <td>@Html.DropDownListFor(model => model.RelayType, Model.PhaRrRelayTypeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 18 })@Html.ValidationMessageFor(model => model.RelayType)
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 185px">@Html.LabelForRequired(model => model.CurveType)
                        </td>
                        <td>@Html.DropDownListFor(model => model.CurveType, Model.PhaRrCurveTypeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.CurveType)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.MinAmpsTrip)
                        </td>
                        <td>@Html.TextBoxFor(model => model.MinAmpsTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.MinAmpsTrip)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.LeverSettings)
                        </td>
                        <td>@Html.TextBoxFor(model => model.LeverSettings, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.LeverSettings)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.InstTrip)
                        </td>
                        <td>@Html.TextBoxFor(model => model.InstTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.InstTrip)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.RestraintType)
                        </td>
                        <td>@Html.DropDownListFor(model => model.RestraintType, Model.GrdPrRelayTypeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 12 })@Html.ValidationMessageFor(model => model.RestraintType)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.RestraintPickup)
                        </td>
                        <td>@Html.TextBoxFor(model => model.RestraintPickup, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 12 })@Html.ValidationMessageFor(model => model.RestraintPickup)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.VoltageSetPoint)
                        </td>
                        <td>@Html.TextBoxFor(model => model.VoltageSetPoint, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 12 })@Html.ValidationMessageFor(model => model.VoltageSetPoint)
                        </td>
                    </tr>
                    <tr>
                        <td class="sectionHeader" colspan="2">
                            Primary Ground Relay
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.RelayType)
                        </td>
                        <td>@Html.DropDownListFor(model => model.RelayType, Model.GrdPrRelayTypeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.RelayType)
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 185px">@Html.LabelForRequired(model => model.CurveType)
                        </td>
                        <td>@Html.DropDownListFor(model => model.CurveType, Model.GrdPrCurveTypeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.CurveType)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.MinAmpsTrip)
                        </td>
                        <td>@Html.TextBoxFor(model => model.MinAmpsTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.MinAmpsTrip)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.LeverSettings)
                        </td>
                        <td>@Html.TextBoxFor(model => model.LeverSettings, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.LeverSettings)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.InstTrip)
                        </td>
                        <td>@Html.TextBoxFor(model => model.InstTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.InstTrip)
                        </td>
                    </tr>
                </table>
            </td>
            <td style="padding-right: 0px; padding-left: 5px">
                <table cellpadding="0" cellspacing="0" style="border: 1px solid #000000; width: 100%">
                    <tr>
                        <td class="sectionHeader" colspan="2">
                            Backup Phase Relay
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 185px">@Html.LabelForRequired(model => model.RelayType)
                        </td>
                        <td>@Html.DropDownListFor(model => model.RelayType, Model.PhaBkRelayTypeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 18 })@Html.ValidationMessageFor(model => model.RelayType)
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 185px">@Html.LabelForRequired(model => model.CurveType)
                        </td>
                        <td>@Html.DropDownListFor(model => model.CurveType, Model.PhaBkCurveTypeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.CurveType)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.MinAmpsTrip)
                        </td>
                        <td>@Html.TextBoxFor(model => model.MinAmpsTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.MinAmpsTrip)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.LeverSettings)
                        </td>
                        <td>@Html.TextBoxFor(model => model.LeverSettings, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.LeverSettings)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.InstTrip)
                        </td>
                        <td>@Html.TextBoxFor(model => model.InstTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.InstTrip)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.RestraintType)
                        </td>
                        <td>@Html.DropDownListFor(model => model.RestraintType, Model.GrdPrRelayTypeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 12 })@Html.ValidationMessageFor(model => model.RestraintType)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.RestraintPickup)
                        </td>
                        <td>@Html.TextBoxFor(model => model.RestraintPickup, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 12 })@Html.ValidationMessageFor(model => model.RestraintPickup)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.VoltageSetPoint)
                        </td>
                        <td>@Html.TextBoxFor(model => model.VoltageSetPoint, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { maxlength = 12 })@Html.ValidationMessageFor(model => model.VoltageSetPoint)
                        </td>
                    </tr>
                    <tr>
                        <td class="sectionHeader" colspan="2">
                            Backup Ground Relay
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.RelayType)
                        </td>
                        <td>@Html.DropDownListFor(model => model.RelayType, Model.GrdBkRelayTypeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.RelayType)
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 185px">@Html.LabelForRequired(model => model.CurveType)
                        </td>
                        <td>@Html.DropDownListFor(model => model.CurveType, Model.GrdBkCurveTypeList, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.CurveType)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.MinAmpsTrip)
                        </td>
                        <td>@Html.TextBoxFor(model => model.MinAmpsTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.MinAmpsTrip)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.LeverSettings)
                        </td>
                        <td>@Html.TextBoxFor(model => model.LeverSettings, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.LeverSettings)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelForRequired(model => model.InstTrip)
                        </td>
                        <td>@Html.TextBoxFor(model => model.InstTrip, ViewBag.IsDisabled ? (object)new { disabled = "disabled" } : new { })@Html.ValidationMessageFor(model => model.InstTrip)
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
}