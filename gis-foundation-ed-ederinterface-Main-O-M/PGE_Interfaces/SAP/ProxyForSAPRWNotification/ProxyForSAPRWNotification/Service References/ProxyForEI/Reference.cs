//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Core/Message")]
    public partial class FaultMessageType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ReplyType replyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ReplyType Reply {
            get {
                return this.replyField;
            }
            set {
                this.replyField = value;
                this.RaisePropertyChanged("Reply");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Core/Message")]
    public partial class ReplyType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ReplyTypeResult resultField;
        
        private ErrorType[] errorField;
        
        private string[] idField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ReplyTypeResult Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Error", Order=1)]
        public ErrorType[] Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
                this.RaisePropertyChanged("Error");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ID", Order=2)]
        public string[] ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=3)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://xmlns.pge.com/Core/Message")]
    public enum ReplyTypeResult {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        PARTIAL,
        
        /// <remarks/>
        FAILED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Core/Message")]
    public partial class ErrorType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private ErrorTypeLevel levelField;
        
        private bool levelFieldSpecified;
        
        private string reasonField;
        
        private string detailsField;
        
        private System.Xml.XmlQualifiedName xpathField;
        
        private string stackTraceField;
        
        private LocationType[] locationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ErrorTypeLevel Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified {
            get {
                return this.levelFieldSpecified;
            }
            set {
                this.levelFieldSpecified = value;
                this.RaisePropertyChanged("LevelSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
                this.RaisePropertyChanged("Reason");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
                this.RaisePropertyChanged("Details");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.Xml.XmlQualifiedName Xpath {
            get {
                return this.xpathField;
            }
            set {
                this.xpathField = value;
                this.RaisePropertyChanged("Xpath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
                this.RaisePropertyChanged("StackTrace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Location", Order=6)]
        public LocationType[] Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
                this.RaisePropertyChanged("Location");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://xmlns.pge.com/Core/Message")]
    public enum ErrorTypeLevel {
        
        /// <remarks/>
        INFORM,
        
        /// <remarks/>
        WARNING,
        
        /// <remarks/>
        FATAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Core/Message")]
    public partial class LocationType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrection")]
    public partial class MapCorrectionResponseType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage")]
    public partial class MapCorrectionResponsePayloadType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private MapCorrectionResponseType mapCorrectionResponseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrection", Order=0)]
        public MapCorrectionResponseType MapCorrectionResponse {
            get {
                return this.mapCorrectionResponseField;
            }
            set {
                this.mapCorrectionResponseField = value;
                this.RaisePropertyChanged("MapCorrectionResponse");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage")]
    public partial class MapCorrectionResponseMessageType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private HeaderType headerField;
        
        private ReplyType replyField;
        
        private MapCorrectionResponsePayloadType payloadField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.pge.com/Core/Message", Order=0)]
        public HeaderType Header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
                this.RaisePropertyChanged("Header");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.pge.com/Core/Message", Order=1)]
        public ReplyType Reply {
            get {
                return this.replyField;
            }
            set {
                this.replyField = value;
                this.RaisePropertyChanged("Reply");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public MapCorrectionResponsePayloadType Payload {
            get {
                return this.payloadField;
            }
            set {
                this.payloadField = value;
                this.RaisePropertyChanged("Payload");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Core/Message")]
    public partial class HeaderType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private HeaderTypeVerb verbField;
        
        private string nounField;
        
        private string revisionField;
        
        private HeaderTypeContext contextField;
        
        private bool contextFieldSpecified;
        
        private System.DateTime timestampField;
        
        private string sourceField;
        
        private bool asyncReplyFlagField;
        
        private bool asyncReplyFlagFieldSpecified;
        
        private string replyAddressField;
        
        private bool ackRequiredField;
        
        private bool ackRequiredFieldSpecified;
        
        private UserType userField;
        
        private string messageIDField;
        
        private string correlationIDField;
        
        private MessageProperty[] propertyField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public HeaderTypeVerb Verb {
            get {
                return this.verbField;
            }
            set {
                this.verbField = value;
                this.RaisePropertyChanged("Verb");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Noun {
            get {
                return this.nounField;
            }
            set {
                this.nounField = value;
                this.RaisePropertyChanged("Noun");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public HeaderTypeContext Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContextSpecified {
            get {
                return this.contextFieldSpecified;
            }
            set {
                this.contextFieldSpecified = value;
                this.RaisePropertyChanged("ContextSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
                this.RaisePropertyChanged("Timestamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
                this.RaisePropertyChanged("Source");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool AsyncReplyFlag {
            get {
                return this.asyncReplyFlagField;
            }
            set {
                this.asyncReplyFlagField = value;
                this.RaisePropertyChanged("AsyncReplyFlag");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AsyncReplyFlagSpecified {
            get {
                return this.asyncReplyFlagFieldSpecified;
            }
            set {
                this.asyncReplyFlagFieldSpecified = value;
                this.RaisePropertyChanged("AsyncReplyFlagSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string ReplyAddress {
            get {
                return this.replyAddressField;
            }
            set {
                this.replyAddressField = value;
                this.RaisePropertyChanged("ReplyAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool AckRequired {
            get {
                return this.ackRequiredField;
            }
            set {
                this.ackRequiredField = value;
                this.RaisePropertyChanged("AckRequired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AckRequiredSpecified {
            get {
                return this.ackRequiredFieldSpecified;
            }
            set {
                this.ackRequiredFieldSpecified = value;
                this.RaisePropertyChanged("AckRequiredSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public UserType User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
                this.RaisePropertyChanged("User");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string MessageID {
            get {
                return this.messageIDField;
            }
            set {
                this.messageIDField = value;
                this.RaisePropertyChanged("MessageID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string CorrelationID {
            get {
                return this.correlationIDField;
            }
            set {
                this.correlationIDField = value;
                this.RaisePropertyChanged("CorrelationID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Property", Order=12)]
        public MessageProperty[] Property {
            get {
                return this.propertyField;
            }
            set {
                this.propertyField = value;
                this.RaisePropertyChanged("Property");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=13)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://xmlns.pge.com/Core/Message")]
    public enum HeaderTypeVerb {
        
        /// <remarks/>
        cancel,
        
        /// <remarks/>
        canceled,
        
        /// <remarks/>
        change,
        
        /// <remarks/>
        changed,
        
        /// <remarks/>
        create,
        
        /// <remarks/>
        created,
        
        /// <remarks/>
        close,
        
        /// <remarks/>
        closed,
        
        /// <remarks/>
        delete,
        
        /// <remarks/>
        deleted,
        
        /// <remarks/>
        get,
        
        /// <remarks/>
        reply,
        
        /// <remarks/>
        execute,
        
        /// <remarks/>
        executed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://xmlns.pge.com/Core/Message")]
    public enum HeaderTypeContext {
        
        /// <remarks/>
        PROD,
        
        /// <remarks/>
        QA,
        
        /// <remarks/>
        TEST1,
        
        /// <remarks/>
        TEST2,
        
        /// <remarks/>
        DEV1,
        
        /// <remarks/>
        DEV2,
        
        /// <remarks/>
        TRAIN1,
        
        /// <remarks/>
        TRAIN2,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Core/Message")]
    public partial class UserType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userIDField;
        
        private string organizationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Organization {
            get {
                return this.organizationField;
            }
            set {
                this.organizationField = value;
                this.RaisePropertyChanged("Organization");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Core/Message")]
    public partial class MessageProperty : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrection")]
    public partial class tMapDataAttachmentList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] sftpReferenceNameField;
        
        private string[] referenceNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SftpReferenceName", IsNullable=true, Order=0)]
        public string[] SftpReferenceName {
            get {
                return this.sftpReferenceNameField;
            }
            set {
                this.sftpReferenceNameField = value;
                this.RaisePropertyChanged("SftpReferenceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ReferenceName", IsNullable=true, Order=1)]
        public string[] ReferenceName {
            get {
                return this.referenceNameField;
            }
            set {
                this.referenceNameField = value;
                this.RaisePropertyChanged("ReferenceName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrection")]
    public partial class tAttachment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private byte[] dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true, Order=1)]
        public byte[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
                this.RaisePropertyChanged("Data");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrection")]
    public partial class tMapDataDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string locationIDField;
        
        private string locationDescriptionField;
        
        private string correctionTypeField;
        
        private string commentsField;
        
        private string latitudeField;
        
        private string longitudeField;
        
        private tAttachment[] attachmentField;
        
        private tMapDataAttachmentList updatedAttachmentListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=0)]
        public string LocationID {
            get {
                return this.locationIDField;
            }
            set {
                this.locationIDField = value;
                this.RaisePropertyChanged("LocationID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string LocationDescription {
            get {
                return this.locationDescriptionField;
            }
            set {
                this.locationDescriptionField = value;
                this.RaisePropertyChanged("LocationDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CorrectionType {
            get {
                return this.correctionTypeField;
            }
            set {
                this.correctionTypeField = value;
                this.RaisePropertyChanged("CorrectionType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
                this.RaisePropertyChanged("Comments");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
                this.RaisePropertyChanged("Latitude");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
                this.RaisePropertyChanged("Longitude");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Attachment", Order=6)]
        public tAttachment[] Attachment {
            get {
                return this.attachmentField;
            }
            set {
                this.attachmentField = value;
                this.RaisePropertyChanged("Attachment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public tMapDataAttachmentList UpdatedAttachmentList {
            get {
                return this.updatedAttachmentListField;
            }
            set {
                this.updatedAttachmentListField = value;
                this.RaisePropertyChanged("UpdatedAttachmentList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrection")]
    public partial class tMapDataHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string mapNumberField;
        
        private string substationField;
        
        private string feederField;
        
        private string transactionDateTimeField;
        
        private string operationsAreaField;
        
        private string departmentField;
        
        private tServiceDeliveryMethod serviceDeliveryMethodField;
        
        private tCorrectionCategory correctionCategoryField;
        
        private string userIDField;
        
        private string functionalLocationField;
        
        private string divisionField;
        
        private string mainWorkCenterField;
        
        private string numberOfCorrectionField;
        
        private string uniqueNotificationIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", IsNullable=true, Order=0)]
        public string MapNumber {
            get {
                return this.mapNumberField;
            }
            set {
                this.mapNumberField = value;
                this.RaisePropertyChanged("MapNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Substation {
            get {
                return this.substationField;
            }
            set {
                this.substationField = value;
                this.RaisePropertyChanged("Substation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Feeder {
            get {
                return this.feederField;
            }
            set {
                this.feederField = value;
                this.RaisePropertyChanged("Feeder");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TransactionDateTime {
            get {
                return this.transactionDateTimeField;
            }
            set {
                this.transactionDateTimeField = value;
                this.RaisePropertyChanged("TransactionDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string OperationsArea {
            get {
                return this.operationsAreaField;
            }
            set {
                this.operationsAreaField = value;
                this.RaisePropertyChanged("OperationsArea");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
                this.RaisePropertyChanged("Department");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public tServiceDeliveryMethod ServiceDeliveryMethod {
            get {
                return this.serviceDeliveryMethodField;
            }
            set {
                this.serviceDeliveryMethodField = value;
                this.RaisePropertyChanged("ServiceDeliveryMethod");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public tCorrectionCategory CorrectionCategory {
            get {
                return this.correctionCategoryField;
            }
            set {
                this.correctionCategoryField = value;
                this.RaisePropertyChanged("CorrectionCategory");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string FunctionalLocation {
            get {
                return this.functionalLocationField;
            }
            set {
                this.functionalLocationField = value;
                this.RaisePropertyChanged("FunctionalLocation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Division {
            get {
                return this.divisionField;
            }
            set {
                this.divisionField = value;
                this.RaisePropertyChanged("Division");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string MainWorkCenter {
            get {
                return this.mainWorkCenterField;
            }
            set {
                this.mainWorkCenterField = value;
                this.RaisePropertyChanged("MainWorkCenter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string NumberOfCorrection {
            get {
                return this.numberOfCorrectionField;
            }
            set {
                this.numberOfCorrectionField = value;
                this.RaisePropertyChanged("NumberOfCorrection");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string UniqueNotificationID {
            get {
                return this.uniqueNotificationIDField;
            }
            set {
                this.uniqueNotificationIDField = value;
                this.RaisePropertyChanged("UniqueNotificationID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrection")]
    public enum tServiceDeliveryMethod {
        
        /// <remarks/>
        UnderGround,
        
        /// <remarks/>
        OverHead,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrection")]
    public enum tCorrectionCategory {
        
        /// <remarks/>
        ED,
        
        /// <remarks/>
        LAND,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrection")]
    public partial class tMapDataReq : object, System.ComponentModel.INotifyPropertyChanged {
        
        private tMapDataHeader mapCorrectionHeaderField;
        
        private tMapDataDetail[] mapCorrectionDetailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public tMapDataHeader MapCorrectionHeader {
            get {
                return this.mapCorrectionHeaderField;
            }
            set {
                this.mapCorrectionHeaderField = value;
                this.RaisePropertyChanged("MapCorrectionHeader");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MapCorrectionDetail", Order=1)]
        public tMapDataDetail[] MapCorrectionDetail {
            get {
                return this.mapCorrectionDetailField;
            }
            set {
                this.mapCorrectionDetailField = value;
                this.RaisePropertyChanged("MapCorrectionDetail");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrection")]
    public partial class MapCorrectionType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private tMapDataReq createMapCorrectionRequestField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public tMapDataReq createMapCorrectionRequest {
            get {
                return this.createMapCorrectionRequestField;
            }
            set {
                this.createMapCorrectionRequestField = value;
                this.RaisePropertyChanged("createMapCorrectionRequest");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage")]
    public partial class MapCorrectionPayloadType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private MapCorrectionType mapCorrectionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrection", Order=0)]
        public MapCorrectionType MapCorrection {
            get {
                return this.mapCorrectionField;
            }
            set {
                this.mapCorrectionField = value;
                this.RaisePropertyChanged("MapCorrection");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Core/Message")]
    public partial class OptionType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Core/Message")]
    public partial class RequestType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private System.DateTime endTimeField;
        
        private bool endTimeFieldSpecified;
        
        private OptionType[] optionField;
        
        private string[] idField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
                this.RaisePropertyChanged("StartTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
                this.RaisePropertyChanged("StartTimeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
                this.RaisePropertyChanged("EndTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
                this.RaisePropertyChanged("EndTimeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Option", Order=2)]
        public OptionType[] Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
                this.RaisePropertyChanged("Option");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ID", Order=3)]
        public string[] ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=4)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage")]
    public partial class MapCorrectionRequestMessageType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private HeaderType headerField;
        
        private RequestType requestField;
        
        private MapCorrectionPayloadType payloadField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.pge.com/Core/Message", Order=0)]
        public HeaderType Header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
                this.RaisePropertyChanged("Header");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.pge.com/Core/Message", Order=1)]
        public RequestType Request {
            get {
                return this.requestField;
            }
            set {
                this.requestField = value;
                this.RaisePropertyChanged("Request");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public MapCorrectionPayloadType Payload {
            get {
                return this.payloadField;
            }
            set {
                this.payloadField = value;
                this.RaisePropertyChanged("Payload");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrection", ConfigurationName="ProxyForEI.MapCorrection_Port")]
    public interface MapCorrection_Port {
        
        // CODEGEN: Generating message contract since the operation CreateMapCorrection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/CreateMapCorrection", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.FaultMessageType), Action="http://xmlns.pge.com/MapCorrection/CreateMapCorrection", Name="FaultMessage", Namespace="http://xmlns.pge.com/Core/Message")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse CreateMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/CreateMapCorrection", ReplyAction="*")]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> CreateMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionRequest request);
        
        // CODEGEN: Generating message contract since the operation ChangeMapCorrection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/ChangeMapCorrection", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.FaultMessageType), Action="http://xmlns.pge.com/MapCorrection/ChangeMapCorrection", Name="FaultMessage", Namespace="http://xmlns.pge.com/Core/Message")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse ChangeMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangeMapCorrectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/ChangeMapCorrection", ReplyAction="*")]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> ChangeMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangeMapCorrectionRequest request);
        
        // CODEGEN: Generating message contract since the operation CancelMapCorrection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/CancelMapCorrection", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.FaultMessageType), Action="http://xmlns.pge.com/MapCorrection/CancelMapCorrection", Name="FaultMessage", Namespace="http://xmlns.pge.com/Core/Message")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse CancelMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CancelMapCorrectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/CancelMapCorrection", ReplyAction="*")]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> CancelMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CancelMapCorrectionRequest request);
        
        // CODEGEN: Generating message contract since the operation CloseMapCorrection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/CloseMapCorrection", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.FaultMessageType), Action="http://xmlns.pge.com/MapCorrection/CloseMapCorrection", Name="FaultMessage", Namespace="http://xmlns.pge.com/Core/Message")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse CloseMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CloseMapCorrectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/CloseMapCorrection", ReplyAction="*")]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> CloseMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CloseMapCorrectionRequest request);
        
        // CODEGEN: Generating message contract since the operation DeleteMapCorrection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/DeleteMapCorrection", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.FaultMessageType), Action="http://xmlns.pge.com/MapCorrection/DeleteMapCorrection", Name="FaultMessage", Namespace="http://xmlns.pge.com/Core/Message")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse DeleteMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeleteMapCorrectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/DeleteMapCorrection", ReplyAction="*")]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> DeleteMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeleteMapCorrectionRequest request);
        
        // CODEGEN: Generating message contract since the operation GetMapCorrection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/GetMapCorrection", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.FaultMessageType), Action="http://xmlns.pge.com/MapCorrection/GetMapCorrection", Name="FaultMessage", Namespace="http://xmlns.pge.com/Core/Message")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse GetMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.GetMapCorrectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/GetMapCorrection", ReplyAction="*")]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> GetMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.GetMapCorrectionRequest request);
        
        // CODEGEN: Generating message contract since the operation CreatedMapCorrection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/CreatedMapCorrection", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.FaultMessageType), Action="http://xmlns.pge.com/MapCorrection/CreatedMapCorrection", Name="FaultMessage", Namespace="http://xmlns.pge.com/Core/Message")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse CreatedMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreatedMapCorrectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/CreatedMapCorrection", ReplyAction="*")]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> CreatedMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreatedMapCorrectionRequest request);
        
        // CODEGEN: Generating message contract since the operation ChangedMapCorrection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/ChangedMapCorrection", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.FaultMessageType), Action="http://xmlns.pge.com/MapCorrection/ChangedMapCorrection", Name="FaultMessage", Namespace="http://xmlns.pge.com/Core/Message")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse ChangedMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangedMapCorrectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/ChangedMapCorrection", ReplyAction="*")]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> ChangedMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangedMapCorrectionRequest request);
        
        // CODEGEN: Generating message contract since the operation CanceledMapCorrection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/CanceledMapCorrection", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.FaultMessageType), Action="http://xmlns.pge.com/MapCorrection/CanceledMapCorrection", Name="FaultMessage", Namespace="http://xmlns.pge.com/Core/Message")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse CanceledMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CanceledMapCorrectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/CanceledMapCorrection", ReplyAction="*")]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> CanceledMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CanceledMapCorrectionRequest request);
        
        // CODEGEN: Generating message contract since the operation ClosedMapCorrection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/ClosedMapCorrection", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.FaultMessageType), Action="http://xmlns.pge.com/MapCorrection/ClosedMapCorrection", Name="FaultMessage", Namespace="http://xmlns.pge.com/Core/Message")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse ClosedMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ClosedMapCorrectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/ClosedMapCorrection", ReplyAction="*")]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> ClosedMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ClosedMapCorrectionRequest request);
        
        // CODEGEN: Generating message contract since the operation DeletedMapCorrection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/DeletedMapCorrection", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.FaultMessageType), Action="http://xmlns.pge.com/MapCorrection/DeletedMapCorrection", Name="FaultMessage", Namespace="http://xmlns.pge.com/Core/Message")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse DeletedMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeletedMapCorrectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://xmlns.pge.com/MapCorrection/DeletedMapCorrection", ReplyAction="*")]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> DeletedMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeletedMapCorrectionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateMapCorrectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage", Order=0)]
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType CreateMapCorrectionRequestMessage;
        
        public CreateMapCorrectionRequest() {
        }
        
        public CreateMapCorrectionRequest(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType CreateMapCorrectionRequestMessage) {
            this.CreateMapCorrectionRequestMessage = CreateMapCorrectionRequestMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateMapCorrectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage", Order=0)]
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionResponseMessageType MapCorrectionResponseMessage;
        
        public CreateMapCorrectionResponse() {
        }
        
        public CreateMapCorrectionResponse(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionResponseMessageType MapCorrectionResponseMessage) {
            this.MapCorrectionResponseMessage = MapCorrectionResponseMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeMapCorrectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage", Order=0)]
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType ChangeMapCorrectionRequestMessage;
        
        public ChangeMapCorrectionRequest() {
        }
        
        public ChangeMapCorrectionRequest(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType ChangeMapCorrectionRequestMessage) {
            this.ChangeMapCorrectionRequestMessage = ChangeMapCorrectionRequestMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CancelMapCorrectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage", Order=0)]
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType CancelMapCorrectionRequestMessage;
        
        public CancelMapCorrectionRequest() {
        }
        
        public CancelMapCorrectionRequest(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType CancelMapCorrectionRequestMessage) {
            this.CancelMapCorrectionRequestMessage = CancelMapCorrectionRequestMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CloseMapCorrectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage", Order=0)]
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType CloseMapCorrectionRequestMessage;
        
        public CloseMapCorrectionRequest() {
        }
        
        public CloseMapCorrectionRequest(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType CloseMapCorrectionRequestMessage) {
            this.CloseMapCorrectionRequestMessage = CloseMapCorrectionRequestMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteMapCorrectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage", Order=0)]
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType DeleteMapCorrectionRequestMessage;
        
        public DeleteMapCorrectionRequest() {
        }
        
        public DeleteMapCorrectionRequest(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType DeleteMapCorrectionRequestMessage) {
            this.DeleteMapCorrectionRequestMessage = DeleteMapCorrectionRequestMessage;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage")]
    public partial class GetMapCorrectionRequestMessageType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private HeaderType headerField;
        
        private GetMapCorrectionReqestType requestField;
        
        private MapCorrectionPayloadType payloadField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.pge.com/Core/Message", Order=0)]
        public HeaderType Header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
                this.RaisePropertyChanged("Header");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public GetMapCorrectionReqestType Request {
            get {
                return this.requestField;
            }
            set {
                this.requestField = value;
                this.RaisePropertyChanged("Request");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public MapCorrectionPayloadType Payload {
            get {
                return this.payloadField;
            }
            set {
                this.payloadField = value;
                this.RaisePropertyChanged("Payload");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage")]
    public partial class GetMapCorrectionReqestType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private System.DateTime endTimeField;
        
        private bool endTimeFieldSpecified;
        
        private OptionType[] optionField;
        
        private string[] idField;
        
        private GetMapCorrectionType getMapCorrectionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
                this.RaisePropertyChanged("StartTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
                this.RaisePropertyChanged("StartTimeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
                this.RaisePropertyChanged("EndTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
                this.RaisePropertyChanged("EndTimeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Option", Order=2)]
        public OptionType[] Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
                this.RaisePropertyChanged("Option");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ID", Order=3)]
        public string[] ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.pge.com/Electric/GetMapCorrection", Order=4)]
        public GetMapCorrectionType GetMapCorrection {
            get {
                return this.getMapCorrectionField;
            }
            set {
                this.getMapCorrectionField = value;
                this.RaisePropertyChanged("GetMapCorrection");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/GetMapCorrection")]
    public partial class GetMapCorrectionType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMapCorrectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage", Order=0)]
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.GetMapCorrectionRequestMessageType GetMapCorrectionRequestMessage;
        
        public GetMapCorrectionRequest() {
        }
        
        public GetMapCorrectionRequest(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.GetMapCorrectionRequestMessageType GetMapCorrectionRequestMessage) {
            this.GetMapCorrectionRequestMessage = GetMapCorrectionRequestMessage;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage")]
    public partial class MapCorrectionEventMessageType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private HeaderType headerField;
        
        private MapCorrectionPayloadType payloadField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.pge.com/Core/Message", Order=0)]
        public HeaderType Header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
                this.RaisePropertyChanged("Header");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public MapCorrectionPayloadType Payload {
            get {
                return this.payloadField;
            }
            set {
                this.payloadField = value;
                this.RaisePropertyChanged("Payload");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreatedMapCorrectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage", Order=0)]
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType CreatedMapCorrectionRequestMessage;
        
        public CreatedMapCorrectionRequest() {
        }
        
        public CreatedMapCorrectionRequest(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType CreatedMapCorrectionRequestMessage) {
            this.CreatedMapCorrectionRequestMessage = CreatedMapCorrectionRequestMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangedMapCorrectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage", Order=0)]
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType ChangedMapCorrectionRequestMessage;
        
        public ChangedMapCorrectionRequest() {
        }
        
        public ChangedMapCorrectionRequest(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType ChangedMapCorrectionRequestMessage) {
            this.ChangedMapCorrectionRequestMessage = ChangedMapCorrectionRequestMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CanceledMapCorrectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage", Order=0)]
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType CanceledMapCorrectionRequestMessage;
        
        public CanceledMapCorrectionRequest() {
        }
        
        public CanceledMapCorrectionRequest(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType CanceledMapCorrectionRequestMessage) {
            this.CanceledMapCorrectionRequestMessage = CanceledMapCorrectionRequestMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ClosedMapCorrectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage", Order=0)]
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType ClosedMapCorrectionRequestMessage;
        
        public ClosedMapCorrectionRequest() {
        }
        
        public ClosedMapCorrectionRequest(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType ClosedMapCorrectionRequestMessage) {
            this.ClosedMapCorrectionRequestMessage = ClosedMapCorrectionRequestMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeletedMapCorrectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.pge.com/Electric/MapCorrectionMessage", Order=0)]
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType DeletedMapCorrectionRequestMessage;
        
        public DeletedMapCorrectionRequest() {
        }
        
        public DeletedMapCorrectionRequest(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType DeletedMapCorrectionRequestMessage) {
            this.DeletedMapCorrectionRequestMessage = DeletedMapCorrectionRequestMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MapCorrection_PortChannel : PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MapCorrection_PortClient : System.ServiceModel.ClientBase<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port>, PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port {
        
        public MapCorrection_PortClient() {
        }
        
        public MapCorrection_PortClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MapCorrection_PortClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MapCorrection_PortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MapCorrection_PortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.CreateMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionRequest request) {
            return base.Channel.CreateMapCorrection(request);
        }
        
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionResponseMessageType CreateMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType CreateMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionRequest();
            inValue.CreateMapCorrectionRequestMessage = CreateMapCorrectionRequestMessage;
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse retVal = ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).CreateMapCorrection(inValue);
            return retVal.MapCorrectionResponseMessage;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.CreateMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionRequest request) {
            return base.Channel.CreateMapCorrectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> CreateMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType CreateMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionRequest();
            inValue.CreateMapCorrectionRequestMessage = CreateMapCorrectionRequestMessage;
            return ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).CreateMapCorrectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.ChangeMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangeMapCorrectionRequest request) {
            return base.Channel.ChangeMapCorrection(request);
        }
        
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionResponseMessageType ChangeMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType ChangeMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangeMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangeMapCorrectionRequest();
            inValue.ChangeMapCorrectionRequestMessage = ChangeMapCorrectionRequestMessage;
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse retVal = ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).ChangeMapCorrection(inValue);
            return retVal.MapCorrectionResponseMessage;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.ChangeMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangeMapCorrectionRequest request) {
            return base.Channel.ChangeMapCorrectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> ChangeMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType ChangeMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangeMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangeMapCorrectionRequest();
            inValue.ChangeMapCorrectionRequestMessage = ChangeMapCorrectionRequestMessage;
            return ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).ChangeMapCorrectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.CancelMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CancelMapCorrectionRequest request) {
            return base.Channel.CancelMapCorrection(request);
        }
        
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionResponseMessageType CancelMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType CancelMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CancelMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CancelMapCorrectionRequest();
            inValue.CancelMapCorrectionRequestMessage = CancelMapCorrectionRequestMessage;
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse retVal = ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).CancelMapCorrection(inValue);
            return retVal.MapCorrectionResponseMessage;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.CancelMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CancelMapCorrectionRequest request) {
            return base.Channel.CancelMapCorrectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> CancelMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType CancelMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CancelMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CancelMapCorrectionRequest();
            inValue.CancelMapCorrectionRequestMessage = CancelMapCorrectionRequestMessage;
            return ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).CancelMapCorrectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.CloseMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CloseMapCorrectionRequest request) {
            return base.Channel.CloseMapCorrection(request);
        }
        
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionResponseMessageType CloseMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType CloseMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CloseMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CloseMapCorrectionRequest();
            inValue.CloseMapCorrectionRequestMessage = CloseMapCorrectionRequestMessage;
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse retVal = ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).CloseMapCorrection(inValue);
            return retVal.MapCorrectionResponseMessage;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.CloseMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CloseMapCorrectionRequest request) {
            return base.Channel.CloseMapCorrectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> CloseMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType CloseMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CloseMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CloseMapCorrectionRequest();
            inValue.CloseMapCorrectionRequestMessage = CloseMapCorrectionRequestMessage;
            return ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).CloseMapCorrectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.DeleteMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeleteMapCorrectionRequest request) {
            return base.Channel.DeleteMapCorrection(request);
        }
        
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionResponseMessageType DeleteMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType DeleteMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeleteMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeleteMapCorrectionRequest();
            inValue.DeleteMapCorrectionRequestMessage = DeleteMapCorrectionRequestMessage;
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse retVal = ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).DeleteMapCorrection(inValue);
            return retVal.MapCorrectionResponseMessage;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.DeleteMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeleteMapCorrectionRequest request) {
            return base.Channel.DeleteMapCorrectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> DeleteMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionRequestMessageType DeleteMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeleteMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeleteMapCorrectionRequest();
            inValue.DeleteMapCorrectionRequestMessage = DeleteMapCorrectionRequestMessage;
            return ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).DeleteMapCorrectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.GetMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.GetMapCorrectionRequest request) {
            return base.Channel.GetMapCorrection(request);
        }
        
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionResponseMessageType GetMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.GetMapCorrectionRequestMessageType GetMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.GetMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.GetMapCorrectionRequest();
            inValue.GetMapCorrectionRequestMessage = GetMapCorrectionRequestMessage;
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse retVal = ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).GetMapCorrection(inValue);
            return retVal.MapCorrectionResponseMessage;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.GetMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.GetMapCorrectionRequest request) {
            return base.Channel.GetMapCorrectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> GetMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.GetMapCorrectionRequestMessageType GetMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.GetMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.GetMapCorrectionRequest();
            inValue.GetMapCorrectionRequestMessage = GetMapCorrectionRequestMessage;
            return ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).GetMapCorrectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.CreatedMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreatedMapCorrectionRequest request) {
            return base.Channel.CreatedMapCorrection(request);
        }
        
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionResponseMessageType CreatedMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType CreatedMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreatedMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreatedMapCorrectionRequest();
            inValue.CreatedMapCorrectionRequestMessage = CreatedMapCorrectionRequestMessage;
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse retVal = ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).CreatedMapCorrection(inValue);
            return retVal.MapCorrectionResponseMessage;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.CreatedMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreatedMapCorrectionRequest request) {
            return base.Channel.CreatedMapCorrectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> CreatedMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType CreatedMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreatedMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreatedMapCorrectionRequest();
            inValue.CreatedMapCorrectionRequestMessage = CreatedMapCorrectionRequestMessage;
            return ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).CreatedMapCorrectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.ChangedMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangedMapCorrectionRequest request) {
            return base.Channel.ChangedMapCorrection(request);
        }
        
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionResponseMessageType ChangedMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType ChangedMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangedMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangedMapCorrectionRequest();
            inValue.ChangedMapCorrectionRequestMessage = ChangedMapCorrectionRequestMessage;
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse retVal = ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).ChangedMapCorrection(inValue);
            return retVal.MapCorrectionResponseMessage;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.ChangedMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangedMapCorrectionRequest request) {
            return base.Channel.ChangedMapCorrectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> ChangedMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType ChangedMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangedMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ChangedMapCorrectionRequest();
            inValue.ChangedMapCorrectionRequestMessage = ChangedMapCorrectionRequestMessage;
            return ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).ChangedMapCorrectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.CanceledMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CanceledMapCorrectionRequest request) {
            return base.Channel.CanceledMapCorrection(request);
        }
        
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionResponseMessageType CanceledMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType CanceledMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CanceledMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CanceledMapCorrectionRequest();
            inValue.CanceledMapCorrectionRequestMessage = CanceledMapCorrectionRequestMessage;
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse retVal = ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).CanceledMapCorrection(inValue);
            return retVal.MapCorrectionResponseMessage;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.CanceledMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CanceledMapCorrectionRequest request) {
            return base.Channel.CanceledMapCorrectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> CanceledMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType CanceledMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CanceledMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CanceledMapCorrectionRequest();
            inValue.CanceledMapCorrectionRequestMessage = CanceledMapCorrectionRequestMessage;
            return ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).CanceledMapCorrectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.ClosedMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ClosedMapCorrectionRequest request) {
            return base.Channel.ClosedMapCorrection(request);
        }
        
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionResponseMessageType ClosedMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType ClosedMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ClosedMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ClosedMapCorrectionRequest();
            inValue.ClosedMapCorrectionRequestMessage = ClosedMapCorrectionRequestMessage;
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse retVal = ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).ClosedMapCorrection(inValue);
            return retVal.MapCorrectionResponseMessage;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.ClosedMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ClosedMapCorrectionRequest request) {
            return base.Channel.ClosedMapCorrectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> ClosedMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType ClosedMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ClosedMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.ClosedMapCorrectionRequest();
            inValue.ClosedMapCorrectionRequestMessage = ClosedMapCorrectionRequestMessage;
            return ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).ClosedMapCorrectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.DeletedMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeletedMapCorrectionRequest request) {
            return base.Channel.DeletedMapCorrection(request);
        }
        
        public PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionResponseMessageType DeletedMapCorrection(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType DeletedMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeletedMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeletedMapCorrectionRequest();
            inValue.DeletedMapCorrectionRequestMessage = DeletedMapCorrectionRequestMessage;
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse retVal = ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).DeletedMapCorrection(inValue);
            return retVal.MapCorrectionResponseMessage;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port.DeletedMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeletedMapCorrectionRequest request) {
            return base.Channel.DeletedMapCorrectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.CreateMapCorrectionResponse> DeletedMapCorrectionAsync(PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrectionEventMessageType DeletedMapCorrectionRequestMessage) {
            PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeletedMapCorrectionRequest inValue = new PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.DeletedMapCorrectionRequest();
            inValue.DeletedMapCorrectionRequestMessage = DeletedMapCorrectionRequestMessage;
            return ((PGE.Interfaces.ProxyForSAPRWNotification.ProxyForEI.MapCorrection_Port)(this)).DeletedMapCorrectionAsync(inValue);
        }
    }
}
