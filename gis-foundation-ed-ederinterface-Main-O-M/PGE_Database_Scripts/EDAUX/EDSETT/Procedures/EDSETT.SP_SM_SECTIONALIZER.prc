Prompt drop Procedure SP_SM_SECTIONALIZER;
DROP PROCEDURE EDSETT.SP_SM_SECTIONALIZER
/

Prompt Procedure SP_SM_SECTIONALIZER;
--
-- SP_SM_SECTIONALIZER  (Procedure) 
--
CREATE OR REPLACE PROCEDURE EDSETT."SP_SM_SECTIONALIZER"
AS

GD_COUNT  NUMBER;
SEC_SETT  NUMBER;
SM_SEC	  NUMBER;

BEGIN

INSERT INTO SM_SECTIONALIZER ( GLOBAL_ID,FEATURE_CLASS_NAME,OPERATING_NUM,DIVISION,DISTRICT,DEVICE_ID,PREPARED_BY,CONTROL_SERIAL_NUM,DATE_MODIFIED,EFFECTIVE_DT,CURRENT_FUTURE,CONTROL_TYPE,SECT_TYPE,MIN_PC_TO_CT,
PHA_INRUSH_DURATION,PHA_INRUSH_MULTIPLIER,PHA_INRUSH_TIME,FIRST_RECLOSE_RESET_TIME,REQUIRED_FAULT_CURRENT,MIN_GRD_TO_CT,GRD_INRUSH_DURATION,GRD_INRUSH_MULTIPLIER,GRD_INRUSH_TIME,
RESET,VOLT_THRESHOLD,LOCKOUT_NUM,ONE_SHOT_LOCKOUT_NUM,FIRMWARE_VERSION,SOFTWARE_VERSION)
SELECT GD.GLOBAL_ID,'EDGIS.DynamicProtectiveDevice',GD.OPERATING_NUM,GD.DIVISION,GD.DISTRICT,SE.DEVICE_ID,SS.PREPARED_BY,SE.CONTROL_SERIAL_#,SS.LAST_MODIFIED,SS.EFFECTIVE_DATE,SS.CURRENT_FUTURE,SE.CONTROL_TYPE,SE.SECT_TYPE,
SS.MIN_PC_TO_CT,SS.PHA_INRUSH_DURATION,SS.PHA_INRUSH_MULTIPLIER,SS.PHA_INRUSH_TIME,SS.FIRST_RECLOSE_RESET_TIME,SS.REQUIRED_FAULT_CURRENT,SS.MIN_GRD_TO_CT,
SS.GRD_INRUSH_DURATION,SS.GRD_INRUSH_MULTIPLIER,SS.GRD_INRUSH_TIME,SS.RESET,SS.VOLT_THRESHOLD,SS.LOCKOUT_#,SS.ONE_SHOT_LOCKOUT_#,
SE.FIRMWARE_VERSION,SE.SOFTWARE_VERSION
FROM CEDSA_SECTIONALIZER SE, CEDSA_SECTIONALIZER_SETTINGS SS,GIS_CEDSADEVICEID  GD
WHERE SE.DEVICE_ID=SS.DEVICE_ID AND SE.DEVICE_ID=GD.DEVICE_ID AND GD.FEATURE_CLASS_NAME ='Sectionalizer';

UPDATE  SM_SECTIONALIZER
SET SCADA='Y'
WHERE DEVICE_ID IN ( SELECT DEVICE_ID FROM CEDSA_SCADA SC ) ;

UPDATE  SM_SECTIONALIZER
SET SCADA='N'
WHERE DEVICE_ID NOT IN ( SELECT DEVICE_ID FROM CEDSA_SCADA SC) ;

COMMIT;

BEGIN
FOR I IN (SELECT CD.DEVICE_ID,CD.SCADA_TYPE,CD.RADIO_MANF_CD,CD.RADIO_MODEL_#,CD.RADIO_SERIAL_#  FROM CEDSA_SCADA CD ,SM_SECTIONALIZER SE   WHERE CD.DEVICE_ID =SE.DEVICE_ID )
LOOP
UPDATE SM_SECTIONALIZER  SET  SCADA_TYPE=I.SCADA_TYPE,RADIO_MANF_CD=I.RADIO_MANF_CD,RADIO_MODEL_NUM=I.RADIO_MODEL_#,RADIO_SERIAL_NUM=I.RADIO_SERIAL_#
WHERE DEVICE_ID =I.DEVICE_ID;
END LOOP;
END;

INSERT INTO SM_COMMENT_HIST ( GLOBAL_ID,WORK_DATE,WORK_TYPE,PERFORMED_BY,ENTRY_DATE,COMMENTS)
SELECT  GD.GLOBAL_ID,SH.WORK_DATE,SH.WORK_TYPE,SH.PERFORMED_BY,SH.ENTRY_DATE,SH.COMMENTS
FROM GIS_CEDSADEVICEID  GD,CEDSA_SECTIONALIZER_HIST SH  WHERE SH.DEVICE_ID=GD.DEVICE_ID;


SELECT COUNT(*) INTO GD_COUNT FROM GIS_CEDSADEVICEID  GD WHERE GD.FEATURE_CLASS_NAME ='Sectionalizer';
SELECT COUNT(*) INTO SEC_SETT FROM CEDSA_SECTIONALIZER_SETTINGS;
SELECT COUNT(*) INTO SM_SEC   FROM SM_SECTIONALIZER ;

DBMS_OUTPUT.PUT_LINE('Count of Sectionalizer from GIS_CEDSADEVICEID : '|| GD_COUNT );
DBMS_OUTPUT.PUT_LINE('Count of Sectionalizer from CEDSA_SECTIONALIZER_SETTINGS : '|| SEC_SETT);
DBMS_OUTPUT.PUT_LINE('Count of Sectionalizer from SM_SECTIONALIZER : '|| SM_SEC);

COMMIT;

BEGIN
FOR I IN (SELECT GD.GLOBAL_ID, GD.FEATURE_CLASS_NAME,GD.GIS_FEATURE_CLASS_NAME, GD.OPERATING_NUM, GD.DIVISION, GD.DISTRICT, GD.DEVICE_ID
FROM  GIS_CEDSADEVICEID GD WHERE  GD.FEATURE_CLASS_NAME ='Sectionalizer' AND GD.GIS_FEATURE_CLASS_NAME='EDGIS.DynamicProtectiveDevice'
AND   NOT EXISTS (SELECT DEVICE_ID FROM SM_SECTIONALIZER WHERE SM_SECTIONALIZER.DEVICE_ID = GD.DEVICE_ID))

LOOP
INSERT INTO SM_SECTIONALIZER(GLOBAL_ID,FEATURE_CLASS_NAME,OPERATING_NUM,DIVISION,DISTRICT,DEVICE_ID, CURRENT_FUTURE)
VALUES( I.GLOBAL_ID, I.GIS_FEATURE_CLASS_NAME, I.OPERATING_NUM, I.DIVISION, I.DISTRICT, I.DEVICE_ID,'C');

INSERT INTO SM_SECTIONALIZER(GLOBAL_ID,FEATURE_CLASS_NAME,OPERATING_NUM,DIVISION,DISTRICT,DEVICE_ID, CURRENT_FUTURE)
VALUES( I.GLOBAL_ID, I.GIS_FEATURE_CLASS_NAME, I.OPERATING_NUM, I.DIVISION, I.DISTRICT, I.DEVICE_ID,'F');

COMMIT;
END LOOP;
END;

SELECT COUNT(*) INTO SM_SEC   FROM SM_SECTIONALIZER ;
DBMS_OUTPUT.PUT_LINE('Count of Sectionalizer from SM_SECTIONALIZER after inserting default C/F records: '|| SM_SEC);


END SP_SM_SECTIONALIZER ;

/
