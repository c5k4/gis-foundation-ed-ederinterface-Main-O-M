Prompt drop Procedure DISPLAY_COUNT_DEVICES;
DROP PROCEDURE EDSETT.DISPLAY_COUNT_DEVICES
/

Prompt Procedure DISPLAY_COUNT_DEVICES;
--
-- DISPLAY_COUNT_DEVICES  (Procedure) 
--
CREATE OR REPLACE PROCEDURE EDSETT."DISPLAY_COUNT_DEVICES"
IS

GIS_TOTAL  NUMBER;
GIS_NOTIN  NUMBER;

CEDSA_TOTAL  NUMBER;
CEDSA_NONIN  NUMBER;

TARGET	NUMBER;
DIVNULL NUMBER ;
DISTNULL NUMBER ;
DIVDISTNULL NUMBER;


BEGIN


SELECT COUNT(*) INTO GIS_TOTAL FROM GIS_CEDSADEVICEID  GD WHERE GD.FEATURE_CLASS_NAME ='Sectionalizer';
SELECT COUNT(*) INTO GIS_NOTIN FROM GIS_CEDSADEVICEID  GD where DEVICE_ID NOT IN (select SE.DEVICE_ID from SM_SECTIONALIZER SE,GIS_CEDSADEVICEID  GD
WHERE SE.DEVICE_ID=GD.DEVICE_ID AND GD.FEATURE_CLASS_NAME ='Sectionalizer') AND GD.FEATURE_CLASS_NAME ='Sectionalizer';

SELECT COUNT(*) INTO CEDSA_TOTAL  FROM CEDSA_SECTIONALIZER;
SELECT COUNT(*) INTO CEDSA_NONIN  from CEDSA_SECTIONALIZER  CE where DEVICE_ID NOT IN (select CE.DEVICE_ID from CEDSA_SECTIONALIZER CE,GIS_CEDSADEVICEID  GD
WHERE CE.DEVICE_ID=GD.DEVICE_ID AND GD.FEATURE_CLASS_NAME ='Sectionalizer') ;

SELECT COUNT(*) INTO TARGET   FROM SM_SECTIONALIZER ;


DBMS_OUTPUT.PUT_LINE('Sectionalizer Device Information : ' );
DBMS_OUTPUT.PUT_LINE('GIS Total : '|| GIS_TOTAL);
DBMS_OUTPUT.PUT_LINE('GIS Not In : '|| GIS_NOTIN);

DBMS_OUTPUT.PUT_LINE('CEDSA Total : '|| CEDSA_TOTAL );
DBMS_OUTPUT.PUT_LINE('CEDSA Not In : '|| CEDSA_NONIN);
DBMS_OUTPUT.PUT_LINE('Total Count from SM_SECTIONALIZER ( Future + Current) : '|| TARGET);

DBMS_OUTPUT.PUT_LINE(' ');
DBMS_OUTPUT.PUT_LINE(' ');


SELECT COUNT(*) INTO GIS_TOTAL FROM GIS_CEDSADEVICEID  GD WHERE GD.FEATURE_CLASS_NAME ='Recloser';
SELECT COUNT(*) INTO GIS_NOTIN FROM GIS_CEDSADEVICEID  GD where DEVICE_ID NOT IN (select SE.DEVICE_ID from SM_RECLOSER  SE,GIS_CEDSADEVICEID  GD
WHERE SE.DEVICE_ID=GD.DEVICE_ID AND GD.FEATURE_CLASS_NAME ='Recloser') AND GD.FEATURE_CLASS_NAME ='Recloser';

SELECT COUNT(*) INTO CEDSA_TOTAL  FROM CEDSA_RECLOSER ;
SELECT COUNT(*) INTO CEDSA_NONIN  from CEDSA_RECLOSER   CE where DEVICE_ID NOT IN (select CE.DEVICE_ID from CEDSA_RECLOSER  CE,GIS_CEDSADEVICEID  GD
WHERE CE.DEVICE_ID=GD.DEVICE_ID AND GD.FEATURE_CLASS_NAME ='Recloser') ;

SELECT COUNT(*) INTO TARGET   FROM SM_RECLOSER  ;


DBMS_OUTPUT.PUT_LINE('Recloser Device Information : ' );
DBMS_OUTPUT.PUT_LINE('GIS Total : '|| GIS_TOTAL);
DBMS_OUTPUT.PUT_LINE('GIS Not In : '|| GIS_NOTIN);

DBMS_OUTPUT.PUT_LINE('CEDSA Total : '|| CEDSA_TOTAL );
DBMS_OUTPUT.PUT_LINE('CEDSA Not In : '|| CEDSA_NONIN);
DBMS_OUTPUT.PUT_LINE('Total Count from SM_RECLOSER  ( Future + Current) : '|| TARGET);

SELECT COUNT(*) INTO GIS_TOTAL FROM GIS_CEDSADEVICEID  GD WHERE GD.FEATURE_CLASS_NAME ='Interrupter';
SELECT COUNT(*) INTO GIS_NOTIN FROM GIS_CEDSADEVICEID  GD where DEVICE_ID NOT IN (select SE.DEVICE_ID from SM_INTERRUPTER  SE,GIS_CEDSADEVICEID  GD
WHERE SE.DEVICE_ID=GD.DEVICE_ID AND GD.FEATURE_CLASS_NAME ='Interrupter') AND GD.FEATURE_CLASS_NAME ='Interrupter';

SELECT COUNT(*) INTO CEDSA_TOTAL  FROM CEDSA_INTERRUPTER ;
SELECT COUNT(*) INTO CEDSA_NONIN  from CEDSA_INTERRUPTER   CE where DEVICE_ID NOT IN (select CE.DEVICE_ID from CEDSA_INTERRUPTER  CE,GIS_CEDSADEVICEID  GD
WHERE CE.DEVICE_ID=GD.DEVICE_ID AND GD.FEATURE_CLASS_NAME ='Interrupter') ;

SELECT COUNT(*) INTO TARGET   FROM SM_INTERRUPTER  ;

DBMS_OUTPUT.PUT_LINE(' ');
DBMS_OUTPUT.PUT_LINE(' ');

DBMS_OUTPUT.PUT_LINE('Interrupter Device Information : ' );
DBMS_OUTPUT.PUT_LINE('GIS Total : '|| GIS_TOTAL);
DBMS_OUTPUT.PUT_LINE('GIS Not In : '|| GIS_NOTIN);

DBMS_OUTPUT.PUT_LINE('CEDSA Total : '|| CEDSA_TOTAL );
DBMS_OUTPUT.PUT_LINE('CEDSA Not In : '|| CEDSA_NONIN);
DBMS_OUTPUT.PUT_LINE('Total Count from SM_INTERRUPTER  ( Future + Current) : '|| TARGET);

SELECT COUNT(*) INTO GIS_TOTAL FROM GIS_CEDSADEVICEID  GD WHERE GD.FEATURE_CLASS_NAME ='Regulator';
SELECT COUNT(*) INTO GIS_NOTIN FROM GIS_CEDSADEVICEID  GD where DEVICE_ID NOT IN (select SE.DEVICE_ID from SM_REGULATOR  SE,GIS_CEDSADEVICEID  GD
WHERE SE.DEVICE_ID=GD.DEVICE_ID AND GD.FEATURE_CLASS_NAME ='Regulator') AND GD.FEATURE_CLASS_NAME ='Regulator';

SELECT COUNT(*) INTO CEDSA_TOTAL  FROM CEDSA_REGULATOR ;
SELECT COUNT(*) INTO CEDSA_NONIN  from CEDSA_REGULATOR   CE where DEVICE_ID NOT IN (select CE.DEVICE_ID from CEDSA_REGULATOR  CE,GIS_CEDSADEVICEID  GD
WHERE CE.DEVICE_ID=GD.DEVICE_ID AND GD.FEATURE_CLASS_NAME ='Regulator') ;

SELECT COUNT(*) INTO TARGET   FROM SM_REGULATOR  ;

DBMS_OUTPUT.PUT_LINE(' ');
DBMS_OUTPUT.PUT_LINE(' ');

DBMS_OUTPUT.PUT_LINE('Regulator Device Information : ' );
DBMS_OUTPUT.PUT_LINE('GIS Total : '|| GIS_TOTAL);
DBMS_OUTPUT.PUT_LINE('GIS Not In : '|| GIS_NOTIN);

DBMS_OUTPUT.PUT_LINE('CEDSA Total : '|| CEDSA_TOTAL );
DBMS_OUTPUT.PUT_LINE('CEDSA Not In : '|| CEDSA_NONIN);
DBMS_OUTPUT.PUT_LINE('Total Count from SM_REGULATOR  ( Future + Current) : '|| TARGET);

SELECT COUNT(*) INTO GIS_TOTAL FROM GIS_CEDSADEVICEID  GD WHERE GD.FEATURE_CLASS_NAME ='Switch';
SELECT COUNT(*) INTO GIS_NOTIN FROM GIS_CEDSADEVICEID  GD where DEVICE_ID NOT IN (select SE.DEVICE_ID from SM_SWITCH  SE,GIS_CEDSADEVICEID  GD
WHERE SE.DEVICE_ID=GD.DEVICE_ID AND GD.FEATURE_CLASS_NAME ='Switch') AND GD.FEATURE_CLASS_NAME ='Switch';

SELECT COUNT(*) INTO CEDSA_TOTAL  FROM CEDSA_SWITCH ;
SELECT COUNT(*) INTO CEDSA_NONIN  from CEDSA_SWITCH   CE where DEVICE_ID NOT IN (select CE.DEVICE_ID from CEDSA_SWITCH  CE,GIS_CEDSADEVICEID  GD
WHERE CE.DEVICE_ID=GD.DEVICE_ID AND GD.FEATURE_CLASS_NAME ='Switch') ;

SELECT COUNT(*) INTO TARGET   FROM SM_SWITCH  ;

DBMS_OUTPUT.PUT_LINE(' ');
DBMS_OUTPUT.PUT_LINE(' ');

DBMS_OUTPUT.PUT_LINE('Switch Device Information : ' );
DBMS_OUTPUT.PUT_LINE('GIS Total : '|| GIS_TOTAL);
DBMS_OUTPUT.PUT_LINE('GIS Not In : '|| GIS_NOTIN);

DBMS_OUTPUT.PUT_LINE('CEDSA Total : '|| CEDSA_TOTAL );
DBMS_OUTPUT.PUT_LINE('CEDSA Not In : '|| CEDSA_NONIN);
DBMS_OUTPUT.PUT_LINE('Total Count from SM_SWITCH  ( Future + Current) : '|| TARGET);


SELECT COUNT(*) INTO GIS_TOTAL FROM GIS_CEDSADEVICEID  GD WHERE GD.FEATURE_CLASS_NAME ='Capacitor';
SELECT COUNT(*) INTO GIS_NOTIN FROM GIS_CEDSADEVICEID  GD where DEVICE_ID NOT IN (select SE.DEVICE_ID from SM_CAPACITOR  SE,GIS_CEDSADEVICEID  GD
WHERE SE.DEVICE_ID=GD.DEVICE_ID AND GD.FEATURE_CLASS_NAME ='Capacitor') AND GD.FEATURE_CLASS_NAME ='Capacitor';

SELECT COUNT(*) INTO CEDSA_TOTAL  FROM CEDSA_CAPACITOR ;
SELECT COUNT(*) INTO CEDSA_NONIN  from CEDSA_CAPACITOR   CE where DEVICE_ID NOT IN (select CE.DEVICE_ID from CEDSA_CAPACITOR  CE,GIS_CEDSADEVICEID  GD
WHERE CE.DEVICE_ID=GD.DEVICE_ID AND GD.FEATURE_CLASS_NAME ='Capacitor') ;

SELECT COUNT(*) INTO TARGET   FROM SM_CAPACITOR  ;

DBMS_OUTPUT.PUT_LINE(' ');
DBMS_OUTPUT.PUT_LINE(' ');

DBMS_OUTPUT.PUT_LINE('Capacitor Device Information : ' );
DBMS_OUTPUT.PUT_LINE('GIS Total : '|| GIS_TOTAL);
DBMS_OUTPUT.PUT_LINE('GIS Not In : '|| GIS_NOTIN);

DBMS_OUTPUT.PUT_LINE('CEDSA Total : '|| CEDSA_TOTAL );
DBMS_OUTPUT.PUT_LINE('CEDSA Not In : '|| CEDSA_NONIN);
DBMS_OUTPUT.PUT_LINE('Total Count from SM_CAPACITOR  ( Future + Current) : '|| TARGET);


SELECT COUNT(*) INTO GIS_TOTAL FROM GIS_CEDSADEVICEID  GD WHERE GD.FEATURE_CLASS_NAME ='Circuit_Breaker';
SELECT COUNT(*) INTO GIS_NOTIN FROM GIS_CEDSADEVICEID  GD where DEVICE_ID NOT IN (select SE.DEVICE_ID from SM_CIRCUIT_BREAKER  SE,GIS_CEDSADEVICEID  GD
WHERE SE.DEVICE_ID=GD.DEVICE_ID AND GD.FEATURE_CLASS_NAME ='Circuit_Breaker') AND GD.FEATURE_CLASS_NAME ='Circuit_Breaker';

SELECT COUNT(*) INTO CEDSA_TOTAL  FROM CEDSA_CIRCUIT_BREAKER ;
SELECT COUNT(*) INTO CEDSA_NONIN  from CEDSA_CIRCUIT_BREAKER   CE where DEVICE_ID NOT IN (select CE.DEVICE_ID from CEDSA_CIRCUIT_BREAKER  CE,GIS_CEDSADEVICEID  GD
WHERE CE.DEVICE_ID=GD.DEVICE_ID AND GD.FEATURE_CLASS_NAME ='Circuit_Breaker') ;

SELECT COUNT(*) INTO TARGET   FROM SM_CIRCUIT_BREAKER  ;

DBMS_OUTPUT.PUT_LINE(' ');
DBMS_OUTPUT.PUT_LINE(' ');

DBMS_OUTPUT.PUT_LINE('Circuit_Breaker Device Information : ' );
DBMS_OUTPUT.PUT_LINE('GIS Total : '|| GIS_TOTAL);
DBMS_OUTPUT.PUT_LINE('GIS Not In : '|| GIS_NOTIN);

DBMS_OUTPUT.PUT_LINE('CEDSA Total : '|| CEDSA_TOTAL );
DBMS_OUTPUT.PUT_LINE('CEDSA Not In : '|| CEDSA_NONIN);
DBMS_OUTPUT.PUT_LINE('Total Count from SM_CIRCUIT_BREAKER  ( Future + Current) : '|| TARGET);





SELECT count(*) INTO DIVNULL  from GIS_CEDSADEVICEID G  where G.DIVISION IS NULL ;

SELECT count(*) INTO DISTNULL from GIS_CEDSADEVICEID G  where G.DISTRICT IS NULL ;

SELECT count(*) INTO DIVDISTNULL from GIS_CEDSADEVICEID G  where G.DIVISION IS NULL OR G.DISTRICT IS NULL;


DBMS_OUTPUT.PUT_LINE(' ');
DBMS_OUTPUT.PUT_LINE(' ');

DBMS_OUTPUT.PUT_LINE('GIS_CEDESADEVICE - DEVICE & DISTRICT NULL Value Details : ' );
DBMS_OUTPUT.PUT_LINE(' Number of rows having Division NULL : '|| DISTNULL );
DBMS_OUTPUT.PUT_LINE('Number of rows having District NULL : '|| DIVDISTNULL );

DBMS_OUTPUT.PUT_LINE(' Total Number of rows - Division + District having NULL values : '|| DIVDISTNULL  );


END DISPLAY_COUNT_DEVICES ;

/
