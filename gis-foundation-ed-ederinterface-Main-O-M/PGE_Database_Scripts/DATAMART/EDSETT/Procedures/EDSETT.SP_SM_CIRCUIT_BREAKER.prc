Prompt drop Procedure SP_SM_CIRCUIT_BREAKER;
DROP PROCEDURE EDSETT.SP_SM_CIRCUIT_BREAKER
/

Prompt Procedure SP_SM_CIRCUIT_BREAKER;
--
-- SP_SM_CIRCUIT_BREAKER  (Procedure) 
--
CREATE OR REPLACE PROCEDURE EDSETT."SP_SM_CIRCUIT_BREAKER"
AS
GD_COUNT  NUMBER;
SEC_SETT  NUMBER;
SM_SEC	  NUMBER;

BEGIN

INSERT INTO SM_CIRCUIT_BREAKER(GLOBAL_ID,FEATURE_CLASS_NAME,OPERATING_NUM,DIVISION,DISTRICT,
DEVICE_ID,DATE_MODIFIED,CURRENT_FUTURE,PHA_PR_RELAY_TYPE,PHA_PR_MIN_TRIP,PHA_PR_INS_TRIP,PHA_PR_LEVER_SET,
MIN_NOR_VOLT,ANNUAL_LF,NETWORK,DPA_CD,CC_RATING,FLISR,SCADA,DIRECT_TRANSFER_TRIP,RECLOSE_BLOCKING)
SELECT GD.GLOBAL_ID,'EDGIS.SubInterruptingDevice',GD.OPERATING_NUM,GD.DIVISION,GD.DISTRICT,
CR.CIRCUIT_BREAKER,CR.LAST_MODIFIED,'C',CR.RELAY_TYPE,CR.MIN_TRIP,CR.INS_TRIP,CR.LEVER_SET,
C.MIN_NOR_VOLT,C.ANNUAL_LF,C.NETWORK,C.DPA_CD,C.CC_RATING,C.FLISR,C.SCADA,C.DIRECT_TRANSFER_TRIP,C.RECLOSE_BLOCKING
FROM  CEDSA_CIRCUIT C ,CEDSA_CIRCUIT_RELAY CR,GIS_CEDSADEVICEID  GD
WHERE CR.CIRCUIT_BREAKER=C.DEVICE_ID and CR.CIRCUIT_BREAKER=GD.DEVICE_ID and GD.FEATURE_CLASS_NAME ='CircuitBreaker' AND CR.RELAY_CD='PHA';


INSERT INTO SM_CIRCUIT_BREAKER(GLOBAL_ID,FEATURE_CLASS_NAME,OPERATING_NUM,DIVISION,DISTRICT,
DEVICE_ID,DATE_MODIFIED,CURRENT_FUTURE,PHA_PR_RELAY_TYPE,PHA_PR_MIN_TRIP,PHA_PR_INS_TRIP,PHA_PR_LEVER_SET,
MIN_NOR_VOLT,ANNUAL_LF,NETWORK,DPA_CD,CC_RATING,FLISR,SCADA,DIRECT_TRANSFER_TRIP,RECLOSE_BLOCKING)
SELECT GD.GLOBAL_ID,'EDGIS.SubInterruptingDevice',GD.OPERATING_NUM,GD.DIVISION,GD.DISTRICT,
CR.CIRCUIT_BREAKER,CR.LAST_MODIFIED,'F',CR.RELAY_TYPE,CR.MIN_TRIP,CR.INS_TRIP,CR.LEVER_SET,
C.MIN_NOR_VOLT,C.ANNUAL_LF,C.NETWORK,C.DPA_CD,C.CC_RATING,C.FLISR,C.SCADA,C.DIRECT_TRANSFER_TRIP,C.RECLOSE_BLOCKING
FROM  CEDSA_CIRCUIT C ,CEDSA_CIRCUIT_RELAY CR,GIS_CEDSADEVICEID  GD
WHERE CR.CIRCUIT_BREAKER=C.DEVICE_ID and CR.CIRCUIT_BREAKER=GD.DEVICE_ID and GD.FEATURE_CLASS_NAME ='CircuitBreaker' AND CR.RELAY_CD='PHA';


COMMIT;

BEGIN

FOR I IN (SELECT CR.CIRCUIT_BREAKER,GD.GLOBAL_ID,GD.FEATURE_CLASS_NAME,GD.OPERATING_NUM,GD.DIVISION,GD.DISTRICT,CR.LAST_MODIFIED,CR.USER_AUDIT,CR.RELAY_TYPE,CR.MIN_TRIP,CR.INS_TRIP,CR.LEVER_SET,
C.MIN_NOR_VOLT,C.ANNUAL_LF,C.NETWORK ,C.DPA_CD,C.CC_RATING,C.FLISR,C.SCADA
FROM  CEDSA_CIRCUIT C ,CEDSA_CIRCUIT_RELAY CR,GIS_CEDSADEVICEID  GD
WHERE CR.CIRCUIT_BREAKER=C.DEVICE_ID and CR.CIRCUIT_BREAKER=GD.DEVICE_ID and GD.FEATURE_CLASS_NAME ='CircuitBreaker' AND CR.RELAY_CD='GRD')

LOOP

	UPDATE SM_CIRCUIT_BREAKER  SET
GRD_PR_RELAY_TYPE=I.RELAY_TYPE,GRD_PR_MIN_TRIP=I.MIN_TRIP,GRD_PR_INS_TRIP=I.INS_TRIP,GRD_PR_LEVER_SET=I.LEVER_SET
WHERE DEVICE_ID=I.CIRCUIT_BREAKER;

END LOOP;
END;


COMMIT;

/*  Commented as per change request on 062714

UPDATE  SM_CIRCUIT_BREAKER
SET SCADA='Y'
WHERE DEVICE_ID IN ( SELECT DEVICE_ID FROM CEDSA_SCADA SC ) ;

UPDATE  SM_CIRCUIT_BREAKER
SET SCADA='N'
WHERE DEVICE_ID NOT IN ( SELECT DEVICE_ID FROM CEDSA_SCADA SC);  */


BEGIN
FOR I IN (SELECT CD.DEVICE_ID,CD.SCADA_TYPE,CD.RADIO_MANF_CD,CD.RADIO_MODEL_#,CD.RADIO_SERIAL_#  FROM CEDSA_SCADA CD ,SM_CIRCUIT_BREAKER RE   WHERE CD.DEVICE_ID =RE.DEVICE_ID )
LOOP
UPDATE SM_CIRCUIT_BREAKER  SET  SCADA_TYPE=I.SCADA_TYPE,RADIO_MANF_CD=I.RADIO_MANF_CD,RADIO_MODEL_NUM=I.RADIO_MODEL_#,RADIO_SERIAL_NUM=I.RADIO_SERIAL_#
WHERE DEVICE_ID =I.DEVICE_ID;
END LOOP;
END;

COMMIT;

SELECT COUNT(*) INTO GD_COUNT FROM GIS_CEDSADEVICEID  GD WHERE GD.FEATURE_CLASS_NAME ='CircuitBreaker';
SELECT COUNT(*) INTO SEC_SETT FROM CEDSA_CIRCUIT_RELAY;
SELECT COUNT(*) INTO SM_SEC   FROM SM_CIRCUIT_BREAKER;

DBMS_OUTPUT.PUT_LINE('Count of CIRCUIT_BREAKER from GIS_CEDSADEVICEID : '|| GD_COUNT );
DBMS_OUTPUT.PUT_LINE('Count of CIRCUIT_BREAKER from CEDSA_CIRCUIT_RELAY : '|| SEC_SETT);
DBMS_OUTPUT.PUT_LINE('Count of CIRCUIT_BREAKER from SM_CIRCUIT_BREAKER : '|| SM_SEC);


BEGIN
FOR I IN (SELECT GD.GLOBAL_ID, GD.FEATURE_CLASS_NAME, GD.GIS_FEATURE_CLASS_NAME, GD.OPERATING_NUM, GD.DIVISION, GD.DISTRICT, GD.DEVICE_ID
FROM  GIS_CEDSADEVICEID GD WHERE  GD.FEATURE_CLASS_NAME ='CircuitBreaker' AND  GD.GIS_FEATURE_CLASS_NAME = 'EDGIS.SubInterruptingDevice'
AND   NOT EXISTS (SELECT DEVICE_ID FROM SM_CIRCUIT_BREAKER WHERE SM_CIRCUIT_BREAKER.DEVICE_ID = GD.DEVICE_ID))

LOOP
INSERT INTO SM_CIRCUIT_BREAKER(GLOBAL_ID,FEATURE_CLASS_NAME,OPERATING_NUM,DIVISION,DISTRICT,DEVICE_ID, CURRENT_FUTURE)
VALUES( I.GLOBAL_ID, I.GIS_FEATURE_CLASS_NAME, I.OPERATING_NUM, I.DIVISION, I.DISTRICT, I.DEVICE_ID,'C');

INSERT INTO SM_CIRCUIT_BREAKER(GLOBAL_ID,FEATURE_CLASS_NAME,OPERATING_NUM,DIVISION,DISTRICT,DEVICE_ID, CURRENT_FUTURE)
VALUES( I.GLOBAL_ID, I.GIS_FEATURE_CLASS_NAME, I.OPERATING_NUM, I.DIVISION, I.DISTRICT, I.DEVICE_ID,'F');

COMMIT;
END LOOP;
END;


SELECT COUNT(*) INTO SM_SEC   FROM SM_CIRCUIT_BREAKER ;
DBMS_OUTPUT.PUT_LINE('Count of CircuitBreaker from SM_CIRCUIT_BREAKER after inserting default C/F records: '|| SM_SEC);


END SP_SM_CIRCUIT_BREAKER ;

/
