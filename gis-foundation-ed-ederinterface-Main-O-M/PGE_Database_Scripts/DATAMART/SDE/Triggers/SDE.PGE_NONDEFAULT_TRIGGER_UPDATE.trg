Prompt drop Trigger PGE_NONDEFAULT_TRIGGER_UPDATE;
DROP TRIGGER SDE.PGE_NONDEFAULT_TRIGGER_UPDATE
/

Prompt Trigger PGE_NONDEFAULT_TRIGGER_UPDATE;
--
-- PGE_NONDEFAULT_TRIGGER_UPDATE  (Trigger) 
--
CREATE OR REPLACE TRIGGER SDE.PGE_NONDEFAULT_TRIGGER_UPDATE
AFTER UPDATE
 ON SDE.VERSIONS
 FOR EACH ROW
WHEN (
'DEFAULT'<>NEW.NAME
      )
DECLARE
   PRAGMA AUTONOMOUS_TRANSACTION;
   row_cnt NUMBER;
BEGIN
 -- Insert the new row from VERSIONS table into table for permanent history
DELETE FROM SDE.PGE_NONDEFAULT_SAVED_HIST where VERSION_NAME = :NEW.NAME or VERSION_NAME = :OLD.NAME;
INSERT INTO SDE.PGE_NONDEFAULT_SAVED_HIST
 ( VERSION_NAME,
VERSION_OWNER,
VERSION_ID,
VERSION_STATUS,
VERSION_STATE_ID,
VERSION_DESCRIPTION,
VERSION_PARENT_NAME,
VERSION_PARENT_OWNER,
VERSION_PARENT_VERSION_ID,
VERSION_CREATION_TIME,
STATE_ID,
STATE_OWNER,
STATE_CREATION_TIME,
STATE_CLOSING_TIME,
STATE_PARENT_STATE_ID,
STATE_LINEAGE_NAME)
SELECT
:NEW.NAME,
:NEW.OWNER,
:NEW.VERSION_ID,
:NEW.STATUS,
:NEW.STATE_ID,
:NEW.DESCRIPTION,
:NEW.PARENT_NAME,
:NEW.PARENT_OWNER,
:NEW.PARENT_VERSION_ID,
:NEW.CREATION_TIME,
ST.STATE_ID,
ST.OWNER,
ST.CREATION_TIME,
ST.CLOSING_TIME,
ST.PARENT_STATE_ID,
ST.LINEAGE_NAME
from
SDE.STATES ST
WHERE
ST.STATE_ID=:NEW.STATE_ID;
commit;
END;
/
