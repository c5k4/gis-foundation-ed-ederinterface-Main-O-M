Prompt drop Trigger GDB_ITEMS_TAB_TR;
DROP TRIGGER SDE.GDB_ITEMS_TAB_TR
/

Prompt Trigger GDB_ITEMS_TAB_TR;
--
-- GDB_ITEMS_TAB_TR  (Trigger) 
--
CREATE OR REPLACE TRIGGER SDE.GDB_ITEMS_TAB_TR AFTER INSERT OR UPDATE OR DELETE ON SDE.GDB_ITEMS FOR EACH ROW
DECLARE passed_table_name VARCHAR2 (32) := 'GDB_ITEMS'; v_update BOOLEAN := FALSE; BEGIN IF (INSERTING OR UPDATING) AND :new.TYPE NOT IN ('{4ED4A58E-621F-4043-95ED-850FBA45FCBC}','{D98421EB-D582-4713-9484-43304D0810F6}','{DC64B6E4-DC0F-43BD-B4F5-F22385DCF055}','{5B966567-FB87-4DDE-938B-B4B37423539D}','{D86502F9-9758-45C6-9D23-6DD1A0107B47}') THEN v_update := TRUE; ELSIF DELETING AND :old.TYPE NOT IN ('{4ED4A58E-621F-4043-95ED-850FBA45FCBC}','{D98421EB-D582-4713-9484-43304D0810F6}','{DC64B6E4-DC0F-43BD-B4F5-F22385DCF055}','{5B966567-FB87-4DDE-938B-B4B37423539D}','{D86502F9-9758-45C6-9D23-6DD1A0107B47}') THEN v_update := TRUE; END IF; IF v_update = TRUE THEN UPDATE SDE.GDB_TABLES_LAST_MODIFIED SET last_modified_count = last_modified_count + 1 WHERE table_name = passed_table_name;IF SQL%NOTFOUND THEN INSERT INTO SDE.GDB_TABLES_LAST_MODIFIED VALUES (passed_table_name, 1); END IF; END IF; END;
/
