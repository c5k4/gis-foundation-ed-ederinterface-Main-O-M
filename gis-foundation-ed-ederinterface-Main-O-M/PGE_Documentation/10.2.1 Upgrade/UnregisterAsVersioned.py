# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# MigrateStorage.py
# Created on: 2014-05-07 08:16:24.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: 
# ---------------------------------------------------------------------------

# Set the necessary product code
import sys
import time
# Import arcpy module
import arcpy
from arcpy import env

def main():
	scriptStart = time.clock()
	print "**************************************"
	print "*** Unregistering as versioned ***"
	print "**************************************"
	print ""
	print ""
	# Local variables:
	DataConnection = sys.argv[1]
	EDGIS_CommonFeaturesDataset = DataConnection + "\\EDGIS.CommonFeaturesDataset"
	EDGIS_ConversionFeaturesDataset = DataConnection + "\\EDGIS.ConversionFeaturesDataset"
	EDGIS_ElectricDataset = DataConnection + "\\EDGIS.ElectricDataset"
	EDGIS_PGEElectricLandbase = DataConnection + "\\EDGIS.PGEElectricLandbase"
	EDGIS_SubstationDataset = DataConnection + "\\EDGIS.SubstationDataset"
	EDGIS_UFMDataset = DataConnection + "\\EDGIS.UFMDataset"

	# Process: Migrate Storage
	DataSources = [EDGIS_CommonFeaturesDataset, EDGIS_ConversionFeaturesDataset, EDGIS_ElectricDataset, EDGIS_PGEElectricLandbase, EDGIS_SubstationDataset, EDGIS_UFMDataset]
	for DataSource in DataSources:
		start = time.clock()
		try:
			print "Attempting to unversion " + DataSource + "..."
			arcpy.UnregisterAsVersioned_management(DataSource, "NO_KEEP_EDIT", "COMPRESS_DEFAULT")
			print "Successfully unversioned " + DataSource
		except:
			errorMessage = arcpy.GetMessages()
			if errorMessage.find("The dataset is not versioned") == -1:
				print "Unexpected Error unversioning " + DataSource + ": "
				print errorMessage
		elapsed = (time.clock() - start)
		print "Elapsed time: ", elapsed

	start = time.clock()
	try:
		print ""
		print ""
		print "Attempting to unversion remaining tables..."
		print sys.argv[1]
		arcpy.env.workspace = sys.argv[1]
		tableList = arcpy.ListTables()
		for table in tableList:
			try:
				print table
				arcpy.UnregisterAsVersioned_management(table, "NO_KEEP_EDIT", "COMPRESS_DEFAULT")
				print "Successfully unversioned"
			except:
				errorMessage = arcpy.GetMessages()
				if errorMessage.find("The dataset is not versioned") == -1:
					print "Failed to unversion"
					print errorMessage
	except:
		print "Unexpected Error unversioning remaining tables: "
		print arcpy.GetMessages()

	start = time.clock()
	try:
		print ""
		print ""
		print "Attempting to unversion remaining feature classes..."
		env.workspace = sys.argv[1]
		featureList = arcpy.ListFeatureClasses()
		for table in featureList:
			try:
				print table
				arcpy.UnregisterAsVersioned_management(table, "NO_KEEP_EDIT", "COMPRESS_DEFAULT")
				print "Successfully unversioned"
			except:
				errorMessage = arcpy.GetMessages()
				if errorMessage.find("The dataset is not versioned") == -1:
					print "Failed to unversion"
					print errorMessage
	except:
		print "Unexpected Error unversioning remaining tables: "
		print arcpy.GetMessages()
	scriptElapsed = (time.clock() - scriptStart)
	print ""
	print ""
	print "**************************************"
	print "Script Elapsed time: ", scriptElapsed
	print "*** Finished Unregistering as versioned ***"
	print "**************************************"
	print ""
	print ""

if __name__ == '__main__': main()
